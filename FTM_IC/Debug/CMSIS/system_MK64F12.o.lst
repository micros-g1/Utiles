   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_MK64F12.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 00004001 		.word	20971520
  24              		.section	.text.SystemInit,"ax",%progbits
  25              		.align	1
  26              		.global	SystemInit
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	SystemInit:
  34              	.LFB123:
  35              		.file 1 "../CMSIS/system_MK64F12.c"
   1:../CMSIS/system_MK64F12.c **** /*
   2:../CMSIS/system_MK64F12.c **** ** ###################################################################
   3:../CMSIS/system_MK64F12.c **** **     Processors:          MK64FN1M0CAJ12
   4:../CMSIS/system_MK64F12.c **** **                          MK64FN1M0VDC12
   5:../CMSIS/system_MK64F12.c **** **                          MK64FN1M0VLL12
   6:../CMSIS/system_MK64F12.c **** **                          MK64FN1M0VLQ12
   7:../CMSIS/system_MK64F12.c **** **                          MK64FN1M0VMD12
   8:../CMSIS/system_MK64F12.c **** **                          MK64FX512VDC12
   9:../CMSIS/system_MK64F12.c **** **                          MK64FX512VLL12
  10:../CMSIS/system_MK64F12.c **** **                          MK64FX512VLQ12
  11:../CMSIS/system_MK64F12.c **** **                          MK64FX512VMD12
  12:../CMSIS/system_MK64F12.c **** **
  13:../CMSIS/system_MK64F12.c **** **     Compilers:           Keil ARM C/C++ Compiler
  14:../CMSIS/system_MK64F12.c **** **                          Freescale C/C++ for Embedded ARM
  15:../CMSIS/system_MK64F12.c **** **                          GNU C Compiler
  16:../CMSIS/system_MK64F12.c **** **                          IAR ANSI C/C++ Compiler for ARM
  17:../CMSIS/system_MK64F12.c **** **                          MCUXpresso Compiler
  18:../CMSIS/system_MK64F12.c **** **
  19:../CMSIS/system_MK64F12.c **** **     Reference manual:    K64P144M120SF5RM, Rev.2, January 2014
  20:../CMSIS/system_MK64F12.c **** **     Version:             rev. 2.9, 2016-03-21
  21:../CMSIS/system_MK64F12.c **** **     Build:               b170112
  22:../CMSIS/system_MK64F12.c **** **
  23:../CMSIS/system_MK64F12.c **** **     Abstract:
  24:../CMSIS/system_MK64F12.c **** **         Provides a system configuration function and a global variable that
  25:../CMSIS/system_MK64F12.c **** **         contains the system frequency. It configures the device and initializes
  26:../CMSIS/system_MK64F12.c **** **         the oscillator (PLL) that is part of the microcontroller device.
  27:../CMSIS/system_MK64F12.c **** **
  28:../CMSIS/system_MK64F12.c **** **     Copyright (c) 2016 Freescale Semiconductor, Inc.
  29:../CMSIS/system_MK64F12.c **** **     Copyright 2016 - 2017 NXP
  30:../CMSIS/system_MK64F12.c **** **     Redistribution and use in source and binary forms, with or without modification,
  31:../CMSIS/system_MK64F12.c **** **     are permitted provided that the following conditions are met:
  32:../CMSIS/system_MK64F12.c **** **
  33:../CMSIS/system_MK64F12.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  34:../CMSIS/system_MK64F12.c **** **       of conditions and the following disclaimer.
  35:../CMSIS/system_MK64F12.c **** **
  36:../CMSIS/system_MK64F12.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  37:../CMSIS/system_MK64F12.c **** **       list of conditions and the following disclaimer in the documentation and/or
  38:../CMSIS/system_MK64F12.c **** **       other materials provided with the distribution.
  39:../CMSIS/system_MK64F12.c **** **
  40:../CMSIS/system_MK64F12.c **** **     o Neither the name of the copyright holder nor the names of its
  41:../CMSIS/system_MK64F12.c **** **       contributors may be used to endorse or promote products derived from this
  42:../CMSIS/system_MK64F12.c **** **       software without specific prior written permission.
  43:../CMSIS/system_MK64F12.c **** **
  44:../CMSIS/system_MK64F12.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  45:../CMSIS/system_MK64F12.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  46:../CMSIS/system_MK64F12.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  47:../CMSIS/system_MK64F12.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  48:../CMSIS/system_MK64F12.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  49:../CMSIS/system_MK64F12.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  50:../CMSIS/system_MK64F12.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  51:../CMSIS/system_MK64F12.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  52:../CMSIS/system_MK64F12.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  53:../CMSIS/system_MK64F12.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  54:../CMSIS/system_MK64F12.c **** **
  55:../CMSIS/system_MK64F12.c **** **     http:                 www.nxp.com
  56:../CMSIS/system_MK64F12.c **** **     mail:                 support@nxp.com
  57:../CMSIS/system_MK64F12.c **** **
  58:../CMSIS/system_MK64F12.c **** **     Revisions:
  59:../CMSIS/system_MK64F12.c **** **     - rev. 1.0 (2013-08-12)
  60:../CMSIS/system_MK64F12.c **** **         Initial version.
  61:../CMSIS/system_MK64F12.c **** **     - rev. 2.0 (2013-10-29)
  62:../CMSIS/system_MK64F12.c **** **         Register accessor macros added to the memory map.
  63:../CMSIS/system_MK64F12.c **** **         Symbols for Processor Expert memory map compatibility added to the memory map.
  64:../CMSIS/system_MK64F12.c **** **         Startup file for gcc has been updated according to CMSIS 3.2.
  65:../CMSIS/system_MK64F12.c **** **         System initialization updated.
  66:../CMSIS/system_MK64F12.c **** **         MCG - registers updated.
  67:../CMSIS/system_MK64F12.c **** **         PORTA, PORTB, PORTC, PORTE - registers for digital filter removed.
  68:../CMSIS/system_MK64F12.c **** **     - rev. 2.1 (2013-10-30)
  69:../CMSIS/system_MK64F12.c **** **         Definition of BITBAND macros updated to support peripherals with 32-bit acces disabled.
  70:../CMSIS/system_MK64F12.c **** **     - rev. 2.2 (2013-12-09)
  71:../CMSIS/system_MK64F12.c **** **         DMA - EARS register removed.
  72:../CMSIS/system_MK64F12.c **** **         AIPS0, AIPS1 - MPRA register updated.
  73:../CMSIS/system_MK64F12.c **** **     - rev. 2.3 (2014-01-24)
  74:../CMSIS/system_MK64F12.c **** **         Update according to reference manual rev. 2
  75:../CMSIS/system_MK64F12.c **** **         ENET, MCG, MCM, SIM, USB - registers updated
  76:../CMSIS/system_MK64F12.c **** **     - rev. 2.4 (2014-02-10)
  77:../CMSIS/system_MK64F12.c **** **         The declaration of clock configurations has been moved to separate header file system_MK
  78:../CMSIS/system_MK64F12.c **** **         Update of SystemInit() and SystemCoreClockUpdate() functions.
  79:../CMSIS/system_MK64F12.c **** **     - rev. 2.5 (2014-02-10)
  80:../CMSIS/system_MK64F12.c **** **         The declaration of clock configurations has been moved to separate header file system_MK
  81:../CMSIS/system_MK64F12.c **** **         Update of SystemInit() and SystemCoreClockUpdate() functions.
  82:../CMSIS/system_MK64F12.c **** **         Module access macro module_BASES replaced by module_BASE_PTRS.
  83:../CMSIS/system_MK64F12.c **** **     - rev. 2.6 (2014-08-28)
  84:../CMSIS/system_MK64F12.c **** **         Update of system files - default clock configuration changed.
  85:../CMSIS/system_MK64F12.c **** **         Update of startup files - possibility to override DefaultISR added.
  86:../CMSIS/system_MK64F12.c **** **     - rev. 2.7 (2014-10-14)
  87:../CMSIS/system_MK64F12.c **** **         Interrupt INT_LPTimer renamed to INT_LPTMR0, interrupt INT_Watchdog renamed to INT_WDOG_
  88:../CMSIS/system_MK64F12.c **** **     - rev. 2.8 (2015-02-19)
  89:../CMSIS/system_MK64F12.c **** **         Renamed interrupt vector LLW to LLWU.
  90:../CMSIS/system_MK64F12.c **** **     - rev. 2.9 (2016-03-21)
  91:../CMSIS/system_MK64F12.c **** **         Added MK64FN1M0CAJ12 part.
  92:../CMSIS/system_MK64F12.c **** **         GPIO - renamed port instances: PTx -> GPIOx.
  93:../CMSIS/system_MK64F12.c **** **
  94:../CMSIS/system_MK64F12.c **** ** ###################################################################
  95:../CMSIS/system_MK64F12.c **** */
  96:../CMSIS/system_MK64F12.c **** 
  97:../CMSIS/system_MK64F12.c **** /*!
  98:../CMSIS/system_MK64F12.c ****  * @file MK64F12
  99:../CMSIS/system_MK64F12.c ****  * @version 2.9
 100:../CMSIS/system_MK64F12.c ****  * @date 2016-03-21
 101:../CMSIS/system_MK64F12.c ****  * @brief Device specific configuration file for MK64F12 (implementation file)
 102:../CMSIS/system_MK64F12.c ****  *
 103:../CMSIS/system_MK64F12.c ****  * Provides a system configuration function and a global variable that contains
 104:../CMSIS/system_MK64F12.c ****  * the system frequency. It configures the device and initializes the oscillator
 105:../CMSIS/system_MK64F12.c ****  * (PLL) that is part of the microcontroller device.
 106:../CMSIS/system_MK64F12.c ****  */
 107:../CMSIS/system_MK64F12.c **** 
 108:../CMSIS/system_MK64F12.c **** #include <stdint.h>
 109:../CMSIS/system_MK64F12.c **** #include "fsl_device_registers.h"
 110:../CMSIS/system_MK64F12.c **** 
 111:../CMSIS/system_MK64F12.c **** 
 112:../CMSIS/system_MK64F12.c **** 
 113:../CMSIS/system_MK64F12.c **** /* ----------------------------------------------------------------------------
 114:../CMSIS/system_MK64F12.c ****    -- Core clock
 115:../CMSIS/system_MK64F12.c ****    ---------------------------------------------------------------------------- */
 116:../CMSIS/system_MK64F12.c **** 
 117:../CMSIS/system_MK64F12.c **** uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
 118:../CMSIS/system_MK64F12.c **** 
 119:../CMSIS/system_MK64F12.c **** /* ----------------------------------------------------------------------------
 120:../CMSIS/system_MK64F12.c ****    -- SystemInit()
 121:../CMSIS/system_MK64F12.c ****    ---------------------------------------------------------------------------- */
 122:../CMSIS/system_MK64F12.c **** 
 123:../CMSIS/system_MK64F12.c **** void SystemInit (void) {
  36              		.loc 1 123 24
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41 0000 80B4     		push	{r7}
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 7, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
 124:../CMSIS/system_MK64F12.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 125:../CMSIS/system_MK64F12.c ****   SCB->CPACR |= ((3UL << 10*2) | (3UL << 11*2));    /* set CP10, CP11 Full Access */
  46              		.loc 1 125 14
  47 0004 0C4B     		ldr	r3, .L2
  48 0006 D3F88830 		ldr	r3, [r3, #136]
  49 000a 0B4A     		ldr	r2, .L2
  50 000c 43F47003 		orr	r3, r3, #15728640
  51 0010 C2F88830 		str	r3, [r2, #136]
 126:../CMSIS/system_MK64F12.c **** #endif /* ((__FPU_PRESENT == 1) && (__FPU_USED == 1)) */
 127:../CMSIS/system_MK64F12.c **** #if (DISABLE_WDOG)
 128:../CMSIS/system_MK64F12.c ****   /* WDOG->UNLOCK: WDOGUNLOCK=0xC520 */
 129:../CMSIS/system_MK64F12.c ****   WDOG->UNLOCK = WDOG_UNLOCK_WDOGUNLOCK(0xC520); /* Key 1 */
  52              		.loc 1 129 7
  53 0014 094B     		ldr	r3, .L2+4
  54              		.loc 1 129 16
  55 0016 4CF22052 		movw	r2, #50464
  56 001a DA81     		strh	r2, [r3, #14]	@ movhi
 130:../CMSIS/system_MK64F12.c ****   /* WDOG->UNLOCK: WDOGUNLOCK=0xD928 */
 131:../CMSIS/system_MK64F12.c ****   WDOG->UNLOCK = WDOG_UNLOCK_WDOGUNLOCK(0xD928); /* Key 2 */
  57              		.loc 1 131 7
  58 001c 074B     		ldr	r3, .L2+4
  59              		.loc 1 131 16
  60 001e 4DF62812 		movw	r2, #55592
  61 0022 DA81     		strh	r2, [r3, #14]	@ movhi
 132:../CMSIS/system_MK64F12.c ****   /* WDOG->STCTRLH: ?=0,DISTESTWDOG=0,BYTESEL=0,TESTSEL=0,TESTWDOG=0,?=0,?=1,WAITEN=1,STOPEN=1,DBGE
 133:../CMSIS/system_MK64F12.c ****   WDOG->STCTRLH = WDOG_STCTRLH_BYTESEL(0x00) |
  62              		.loc 1 133 7
  63 0024 054B     		ldr	r3, .L2+4
  64              		.loc 1 133 17
  65 0026 4FF4E972 		mov	r2, #466
  66 002a 1A80     		strh	r2, [r3]	@ movhi
 134:../CMSIS/system_MK64F12.c ****                  WDOG_STCTRLH_WAITEN_MASK |
 135:../CMSIS/system_MK64F12.c ****                  WDOG_STCTRLH_STOPEN_MASK |
 136:../CMSIS/system_MK64F12.c ****                  WDOG_STCTRLH_ALLOWUPDATE_MASK |
 137:../CMSIS/system_MK64F12.c ****                  WDOG_STCTRLH_CLKSRC_MASK |
 138:../CMSIS/system_MK64F12.c ****                  0x0100U;
 139:../CMSIS/system_MK64F12.c **** #endif /* (DISABLE_WDOG) */
 140:../CMSIS/system_MK64F12.c **** 
 141:../CMSIS/system_MK64F12.c **** }
  67              		.loc 1 141 1
  68 002c 00BF     		nop
  69 002e BD46     		mov	sp, r7
  70              		.cfi_def_cfa_register 13
  71              		@ sp needed
  72 0030 5DF8047B 		ldr	r7, [sp], #4
  73              		.cfi_restore 7
  74              		.cfi_def_cfa_offset 0
  75 0034 7047     		bx	lr
  76              	.L3:
  77 0036 00BF     		.align	2
  78              	.L2:
  79 0038 00ED00E0 		.word	-536810240
  80 003c 00200540 		.word	1074077696
  81              		.cfi_endproc
  82              	.LFE123:
  84              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  85              		.align	1
  86              		.global	SystemCoreClockUpdate
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	SystemCoreClockUpdate:
  93              	.LFB124:
 142:../CMSIS/system_MK64F12.c **** 
 143:../CMSIS/system_MK64F12.c **** /* ----------------------------------------------------------------------------
 144:../CMSIS/system_MK64F12.c ****    -- SystemCoreClockUpdate()
 145:../CMSIS/system_MK64F12.c ****    ---------------------------------------------------------------------------- */
 146:../CMSIS/system_MK64F12.c **** 
 147:../CMSIS/system_MK64F12.c **** void SystemCoreClockUpdate (void) {
  94              		.loc 1 147 35
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 83B0     		sub	sp, sp, #12
 103              		.cfi_def_cfa_offset 16
 104 0004 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 148:../CMSIS/system_MK64F12.c ****   uint32_t MCGOUTClock;                /* Variable to store output clock frequency of the MCG modul
 149:../CMSIS/system_MK64F12.c ****   uint16_t Divider;
 150:../CMSIS/system_MK64F12.c **** 
 151:../CMSIS/system_MK64F12.c ****   if ((MCG->C1 & MCG_C1_CLKS_MASK) == 0x00U) {
 106              		.loc 1 151 11
 107 0006 964B     		ldr	r3, .L44
 108 0008 1B78     		ldrb	r3, [r3]
 109 000a DBB2     		uxtb	r3, r3
 110              		.loc 1 151 16
 111 000c 03F0C003 		and	r3, r3, #192
 112              		.loc 1 151 6
 113 0010 002B     		cmp	r3, #0
 114 0012 40F0D280 		bne	.L5
 152:../CMSIS/system_MK64F12.c ****     /* Output of FLL or PLL is selected */
 153:../CMSIS/system_MK64F12.c ****     if ((MCG->C6 & MCG_C6_PLLS_MASK) == 0x00U) {
 115              		.loc 1 153 13
 116 0016 924B     		ldr	r3, .L44
 117 0018 5B79     		ldrb	r3, [r3, #5]
 118 001a DBB2     		uxtb	r3, r3
 119              		.loc 1 153 18
 120 001c 03F04003 		and	r3, r3, #64
 121              		.loc 1 153 8
 122 0020 002B     		cmp	r3, #0
 123 0022 40F0AD80 		bne	.L6
 154:../CMSIS/system_MK64F12.c ****       /* FLL is selected */
 155:../CMSIS/system_MK64F12.c ****       if ((MCG->C1 & MCG_C1_IREFS_MASK) == 0x00U) {
 124              		.loc 1 155 15
 125 0026 8E4B     		ldr	r3, .L44
 126 0028 1B78     		ldrb	r3, [r3]
 127 002a DBB2     		uxtb	r3, r3
 128              		.loc 1 155 20
 129 002c 03F00403 		and	r3, r3, #4
 130              		.loc 1 155 10
 131 0030 002B     		cmp	r3, #0
 132 0032 4ED1     		bne	.L7
 156:../CMSIS/system_MK64F12.c ****         /* External reference clock is selected */
 157:../CMSIS/system_MK64F12.c ****         switch (MCG->C7 & MCG_C7_OSCSEL_MASK) {
 133              		.loc 1 157 20
 134 0034 8A4B     		ldr	r3, .L44
 135 0036 1B7B     		ldrb	r3, [r3, #12]
 136 0038 DBB2     		uxtb	r3, r3
 137              		.loc 1 157 25
 138 003a 03F00303 		and	r3, r3, #3
 139              		.loc 1 157 9
 140 003e 002B     		cmp	r3, #0
 141 0040 02D0     		beq	.L8
 142 0042 012B     		cmp	r3, #1
 143 0044 03D0     		beq	.L9
 144 0046 06E0     		b	.L41
 145              	.L8:
 158:../CMSIS/system_MK64F12.c ****         case 0x00U:
 159:../CMSIS/system_MK64F12.c ****           MCGOUTClock = CPU_XTAL_CLK_HZ; /* System oscillator drives MCG clock */
 146              		.loc 1 159 23
 147 0048 864B     		ldr	r3, .L44+4
 148 004a 7B60     		str	r3, [r7, #4]
 160:../CMSIS/system_MK64F12.c ****           break;
 149              		.loc 1 160 11
 150 004c 06E0     		b	.L11
 151              	.L9:
 161:../CMSIS/system_MK64F12.c ****         case 0x01U:
 162:../CMSIS/system_MK64F12.c ****           MCGOUTClock = CPU_XTAL32k_CLK_HZ; /* RTC 32 kHz oscillator drives MCG clock */
 152              		.loc 1 162 23
 153 004e 4FF40043 		mov	r3, #32768
 154 0052 7B60     		str	r3, [r7, #4]
 163:../CMSIS/system_MK64F12.c ****           break;
 155              		.loc 1 163 11
 156 0054 02E0     		b	.L11
 157              	.L41:
 164:../CMSIS/system_MK64F12.c ****         case 0x02U:
 165:../CMSIS/system_MK64F12.c ****         default:
 166:../CMSIS/system_MK64F12.c ****           MCGOUTClock = CPU_INT_IRC_CLK_HZ; /* IRC 48MHz oscillator drives MCG clock */
 158              		.loc 1 166 23
 159 0056 844B     		ldr	r3, .L44+8
 160 0058 7B60     		str	r3, [r7, #4]
 167:../CMSIS/system_MK64F12.c ****           break;
 161              		.loc 1 167 11
 162 005a 00BF     		nop
 163              	.L11:
 168:../CMSIS/system_MK64F12.c ****         }
 169:../CMSIS/system_MK64F12.c ****         if (((MCG->C2 & MCG_C2_RANGE_MASK) != 0x00U) && ((MCG->C7 & MCG_C7_OSCSEL_MASK) != 0x01U)) 
 164              		.loc 1 169 18
 165 005c 804B     		ldr	r3, .L44
 166 005e 5B78     		ldrb	r3, [r3, #1]
 167 0060 DBB2     		uxtb	r3, r3
 168              		.loc 1 169 23
 169 0062 03F03003 		and	r3, r3, #48
 170              		.loc 1 169 12
 171 0066 002B     		cmp	r3, #0
 172 0068 23D0     		beq	.L12
 173              		.loc 1 169 62 discriminator 1
 174 006a 7D4B     		ldr	r3, .L44
 175 006c 1B7B     		ldrb	r3, [r3, #12]
 176 006e DBB2     		uxtb	r3, r3
 177              		.loc 1 169 67 discriminator 1
 178 0070 03F00303 		and	r3, r3, #3
 179              		.loc 1 169 54 discriminator 1
 180 0074 012B     		cmp	r3, #1
 181 0076 1CD0     		beq	.L12
 170:../CMSIS/system_MK64F12.c ****           switch (MCG->C1 & MCG_C1_FRDIV_MASK) {
 182              		.loc 1 170 22
 183 0078 794B     		ldr	r3, .L44
 184 007a 1B78     		ldrb	r3, [r3]
 185 007c DBB2     		uxtb	r3, r3
 186              		.loc 1 170 27
 187 007e 03F03803 		and	r3, r3, #56
 188              		.loc 1 170 11
 189 0082 302B     		cmp	r3, #48
 190 0084 05D0     		beq	.L13
 191 0086 382B     		cmp	r3, #56
 192 0088 07D1     		bne	.L14
 171:../CMSIS/system_MK64F12.c ****           case 0x38U:
 172:../CMSIS/system_MK64F12.c ****             Divider = 1536U;
 193              		.loc 1 172 21
 194 008a 4FF4C063 		mov	r3, #1536
 195 008e 7B80     		strh	r3, [r7, #2]	@ movhi
 173:../CMSIS/system_MK64F12.c ****             break;
 196              		.loc 1 173 13
 197 0090 0EE0     		b	.L15
 198              	.L13:
 174:../CMSIS/system_MK64F12.c ****           case 0x30U:
 175:../CMSIS/system_MK64F12.c ****             Divider = 1280U;
 199              		.loc 1 175 21
 200 0092 4FF4A063 		mov	r3, #1280
 201 0096 7B80     		strh	r3, [r7, #2]	@ movhi
 176:../CMSIS/system_MK64F12.c ****             break;
 202              		.loc 1 176 13
 203 0098 0AE0     		b	.L15
 204              	.L14:
 177:../CMSIS/system_MK64F12.c ****           default:
 178:../CMSIS/system_MK64F12.c ****             Divider = (uint16_t)(32LU << ((MCG->C1 & MCG_C1_FRDIV_MASK) >> MCG_C1_FRDIV_SHIFT));
 205              		.loc 1 178 47
 206 009a 714B     		ldr	r3, .L44
 207 009c 1B78     		ldrb	r3, [r3]
 208 009e DBB2     		uxtb	r3, r3
 209              		.loc 1 178 73
 210 00a0 DB08     		lsrs	r3, r3, #3
 211 00a2 03F00703 		and	r3, r3, #7
 212              		.loc 1 178 39
 213 00a6 2022     		movs	r2, #32
 214 00a8 02FA03F3 		lsl	r3, r2, r3
 215              		.loc 1 178 21
 216 00ac 7B80     		strh	r3, [r7, #2]	@ movhi
 179:../CMSIS/system_MK64F12.c ****             break;
 217              		.loc 1 179 13
 218 00ae 00BF     		nop
 219              	.L15:
 170:../CMSIS/system_MK64F12.c ****           case 0x38U:
 220              		.loc 1 170 11
 221 00b0 09E0     		b	.L16
 222              	.L12:
 180:../CMSIS/system_MK64F12.c ****           }
 181:../CMSIS/system_MK64F12.c ****         } else {/* ((MCG->C2 & MCG_C2_RANGE_MASK) != 0x00U) */
 182:../CMSIS/system_MK64F12.c ****           Divider = (uint16_t)(1LU << ((MCG->C1 & MCG_C1_FRDIV_MASK) >> MCG_C1_FRDIV_SHIFT));
 223              		.loc 1 182 44
 224 00b2 6B4B     		ldr	r3, .L44
 225 00b4 1B78     		ldrb	r3, [r3]
 226 00b6 DBB2     		uxtb	r3, r3
 227              		.loc 1 182 70
 228 00b8 DB08     		lsrs	r3, r3, #3
 229 00ba 03F00703 		and	r3, r3, #7
 230              		.loc 1 182 36
 231 00be 0122     		movs	r2, #1
 232 00c0 02FA03F3 		lsl	r3, r2, r3
 233              		.loc 1 182 19
 234 00c4 7B80     		strh	r3, [r7, #2]	@ movhi
 235              	.L16:
 183:../CMSIS/system_MK64F12.c ****         }
 184:../CMSIS/system_MK64F12.c ****         MCGOUTClock = (MCGOUTClock / Divider); /* Calculate the divided FLL reference clock */
 236              		.loc 1 184 36
 237 00c6 7B88     		ldrh	r3, [r7, #2]
 238              		.loc 1 184 21
 239 00c8 7A68     		ldr	r2, [r7, #4]
 240 00ca B2FBF3F3 		udiv	r3, r2, r3
 241 00ce 7B60     		str	r3, [r7, #4]
 242 00d0 02E0     		b	.L17
 243              	.L7:
 185:../CMSIS/system_MK64F12.c ****       } else { /* (!((MCG->C1 & MCG_C1_IREFS_MASK) == 0x00U)) */
 186:../CMSIS/system_MK64F12.c ****         MCGOUTClock = CPU_INT_SLOW_CLK_HZ; /* The slow internal reference clock is selected */
 244              		.loc 1 186 21
 245 00d2 4FF40043 		mov	r3, #32768
 246 00d6 7B60     		str	r3, [r7, #4]
 247              	.L17:
 187:../CMSIS/system_MK64F12.c ****       } /* (!((MCG->C1 & MCG_C1_IREFS_MASK) == 0x00U)) */
 188:../CMSIS/system_MK64F12.c ****       /* Select correct multiplier to calculate the MCG output clock  */
 189:../CMSIS/system_MK64F12.c ****       switch (MCG->C4 & (MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS_MASK)) {
 248              		.loc 1 189 18
 249 00d8 614B     		ldr	r3, .L44
 250 00da DB78     		ldrb	r3, [r3, #3]
 251 00dc DBB2     		uxtb	r3, r3
 252              		.loc 1 189 23
 253 00de 03F0E003 		and	r3, r3, #224
 254              		.loc 1 189 7
 255 00e2 602B     		cmp	r3, #96
 256 00e4 29D0     		beq	.L18
 257 00e6 602B     		cmp	r3, #96
 258 00e8 06D8     		bhi	.L19
 259 00ea 202B     		cmp	r3, #32
 260 00ec 17D0     		beq	.L20
 261 00ee 402B     		cmp	r3, #64
 262 00f0 1CD0     		beq	.L21
 263 00f2 002B     		cmp	r3, #0
 264 00f4 0CD0     		beq	.L22
 190:../CMSIS/system_MK64F12.c ****         case 0x00U:
 191:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 640U;
 192:../CMSIS/system_MK64F12.c ****           break;
 193:../CMSIS/system_MK64F12.c ****         case 0x20U:
 194:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 1280U;
 195:../CMSIS/system_MK64F12.c ****           break;
 196:../CMSIS/system_MK64F12.c ****         case 0x40U:
 197:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 1920U;
 198:../CMSIS/system_MK64F12.c ****           break;
 199:../CMSIS/system_MK64F12.c ****         case 0x60U:
 200:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 2560U;
 201:../CMSIS/system_MK64F12.c ****           break;
 202:../CMSIS/system_MK64F12.c ****         case 0x80U:
 203:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 732U;
 204:../CMSIS/system_MK64F12.c ****           break;
 205:../CMSIS/system_MK64F12.c ****         case 0xA0U:
 206:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 1464U;
 207:../CMSIS/system_MK64F12.c ****           break;
 208:../CMSIS/system_MK64F12.c ****         case 0xC0U:
 209:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 2197U;
 210:../CMSIS/system_MK64F12.c ****           break;
 211:../CMSIS/system_MK64F12.c ****         case 0xE0U:
 212:../CMSIS/system_MK64F12.c ****           MCGOUTClock *= 2929U;
 213:../CMSIS/system_MK64F12.c ****           break;
 214:../CMSIS/system_MK64F12.c ****         default:
 215:../CMSIS/system_MK64F12.c ****           break;
 265              		.loc 1 215 11
 266 00f6 9DE0     		b	.L31
 267              	.L19:
 189:../CMSIS/system_MK64F12.c ****         case 0x00U:
 268              		.loc 1 189 7
 269 00f8 A02B     		cmp	r3, #160
 270 00fa 2CD0     		beq	.L24
 271 00fc A02B     		cmp	r3, #160
 272 00fe 02D8     		bhi	.L25
 273 0100 802B     		cmp	r3, #128
 274 0102 21D0     		beq	.L26
 275              		.loc 1 215 11
 276 0104 96E0     		b	.L31
 277              	.L25:
 189:../CMSIS/system_MK64F12.c ****         case 0x00U:
 278              		.loc 1 189 7
 279 0106 C02B     		cmp	r3, #192
 280 0108 2CD0     		beq	.L27
 281 010a E02B     		cmp	r3, #224
 282 010c 31D0     		beq	.L28
 283              		.loc 1 215 11
 284 010e 91E0     		b	.L31
 285              	.L22:
 191:../CMSIS/system_MK64F12.c ****           break;
 286              		.loc 1 191 23
 287 0110 7A68     		ldr	r2, [r7, #4]
 288 0112 1346     		mov	r3, r2
 289 0114 9B00     		lsls	r3, r3, #2
 290 0116 1344     		add	r3, r3, r2
 291 0118 DB01     		lsls	r3, r3, #7
 292 011a 7B60     		str	r3, [r7, #4]
 192:../CMSIS/system_MK64F12.c ****         case 0x20U:
 293              		.loc 1 192 11
 294 011c 8AE0     		b	.L31
 295              	.L20:
 194:../CMSIS/system_MK64F12.c ****           break;
 296              		.loc 1 194 23
 297 011e 7A68     		ldr	r2, [r7, #4]
 298 0120 1346     		mov	r3, r2
 299 0122 9B00     		lsls	r3, r3, #2
 300 0124 1344     		add	r3, r3, r2
 301 0126 1B02     		lsls	r3, r3, #8
 302 0128 7B60     		str	r3, [r7, #4]
 195:../CMSIS/system_MK64F12.c ****         case 0x40U:
 303              		.loc 1 195 11
 304 012a 83E0     		b	.L31
 305              	.L21:
 197:../CMSIS/system_MK64F12.c ****           break;
 306              		.loc 1 197 23
 307 012c 7A68     		ldr	r2, [r7, #4]
 308 012e 1346     		mov	r3, r2
 309 0130 1B01     		lsls	r3, r3, #4
 310 0132 9B1A     		subs	r3, r3, r2
 311 0134 DB01     		lsls	r3, r3, #7
 312 0136 7B60     		str	r3, [r7, #4]
 198:../CMSIS/system_MK64F12.c ****         case 0x60U:
 313              		.loc 1 198 11
 314 0138 7CE0     		b	.L31
 315              	.L18:
 200:../CMSIS/system_MK64F12.c ****           break;
 316              		.loc 1 200 23
 317 013a 7A68     		ldr	r2, [r7, #4]
 318 013c 1346     		mov	r3, r2
 319 013e 9B00     		lsls	r3, r3, #2
 320 0140 1344     		add	r3, r3, r2
 321 0142 5B02     		lsls	r3, r3, #9
 322 0144 7B60     		str	r3, [r7, #4]
 201:../CMSIS/system_MK64F12.c ****         case 0x80U:
 323              		.loc 1 201 11
 324 0146 75E0     		b	.L31
 325              	.L26:
 203:../CMSIS/system_MK64F12.c ****           break;
 326              		.loc 1 203 23
 327 0148 7B68     		ldr	r3, [r7, #4]
 328 014a 4FF43772 		mov	r2, #732
 329 014e 02FB03F3 		mul	r3, r2, r3
 330 0152 7B60     		str	r3, [r7, #4]
 204:../CMSIS/system_MK64F12.c ****         case 0xA0U:
 331              		.loc 1 204 11
 332 0154 6EE0     		b	.L31
 333              	.L24:
 206:../CMSIS/system_MK64F12.c ****           break;
 334              		.loc 1 206 23
 335 0156 7B68     		ldr	r3, [r7, #4]
 336 0158 4FF4B762 		mov	r2, #1464
 337 015c 02FB03F3 		mul	r3, r2, r3
 338 0160 7B60     		str	r3, [r7, #4]
 207:../CMSIS/system_MK64F12.c ****         case 0xC0U:
 339              		.loc 1 207 11
 340 0162 67E0     		b	.L31
 341              	.L27:
 209:../CMSIS/system_MK64F12.c ****           break;
 342              		.loc 1 209 23
 343 0164 7B68     		ldr	r3, [r7, #4]
 344 0166 40F69502 		movw	r2, #2197
 345 016a 02FB03F3 		mul	r3, r2, r3
 346 016e 7B60     		str	r3, [r7, #4]
 210:../CMSIS/system_MK64F12.c ****         case 0xE0U:
 347              		.loc 1 210 11
 348 0170 60E0     		b	.L31
 349              	.L28:
 212:../CMSIS/system_MK64F12.c ****           break;
 350              		.loc 1 212 23
 351 0172 7B68     		ldr	r3, [r7, #4]
 352 0174 40F67132 		movw	r2, #2929
 353 0178 02FB03F3 		mul	r3, r2, r3
 354 017c 7B60     		str	r3, [r7, #4]
 213:../CMSIS/system_MK64F12.c ****         default:
 355              		.loc 1 213 11
 356 017e 59E0     		b	.L31
 357              	.L6:
 216:../CMSIS/system_MK64F12.c ****       }
 217:../CMSIS/system_MK64F12.c ****     } else { /* (!((MCG->C6 & MCG_C6_PLLS_MASK) == 0x00U)) */
 218:../CMSIS/system_MK64F12.c ****       /* PLL is selected */
 219:../CMSIS/system_MK64F12.c ****       Divider = (((uint16_t)MCG->C5 & MCG_C5_PRDIV0_MASK) + 0x01U);
 358              		.loc 1 219 32
 359 0180 374B     		ldr	r3, .L44
 360 0182 1B79     		ldrb	r3, [r3, #4]
 361 0184 DBB2     		uxtb	r3, r3
 362 0186 9BB2     		uxth	r3, r3
 363              		.loc 1 219 37
 364 0188 03F01F03 		and	r3, r3, #31
 365 018c 9BB2     		uxth	r3, r3
 366              		.loc 1 219 15
 367 018e 0133     		adds	r3, r3, #1
 368 0190 7B80     		strh	r3, [r7, #2]	@ movhi
 220:../CMSIS/system_MK64F12.c ****       MCGOUTClock = (uint32_t)(CPU_XTAL_CLK_HZ / Divider); /* Calculate the PLL reference clock */
 369              		.loc 1 220 21
 370 0192 7B88     		ldrh	r3, [r7, #2]
 371              		.loc 1 220 19
 372 0194 334A     		ldr	r2, .L44+4
 373 0196 B2FBF3F3 		udiv	r3, r2, r3
 374 019a 7B60     		str	r3, [r7, #4]
 221:../CMSIS/system_MK64F12.c ****       Divider = (((uint16_t)MCG->C6 & MCG_C6_VDIV0_MASK) + 24U);
 375              		.loc 1 221 32
 376 019c 304B     		ldr	r3, .L44
 377 019e 5B79     		ldrb	r3, [r3, #5]
 378 01a0 DBB2     		uxtb	r3, r3
 379 01a2 9BB2     		uxth	r3, r3
 380              		.loc 1 221 37
 381 01a4 03F01F03 		and	r3, r3, #31
 382 01a8 9BB2     		uxth	r3, r3
 383              		.loc 1 221 15
 384 01aa 1833     		adds	r3, r3, #24
 385 01ac 7B80     		strh	r3, [r7, #2]	@ movhi
 222:../CMSIS/system_MK64F12.c ****       MCGOUTClock *= Divider;          /* Calculate the MCG output clock */
 386              		.loc 1 222 19
 387 01ae 7A88     		ldrh	r2, [r7, #2]
 388 01b0 7B68     		ldr	r3, [r7, #4]
 389 01b2 02FB03F3 		mul	r3, r2, r3
 390 01b6 7B60     		str	r3, [r7, #4]
 391 01b8 3CE0     		b	.L31
 392              	.L5:
 223:../CMSIS/system_MK64F12.c ****     } /* (!((MCG->C6 & MCG_C6_PLLS_MASK) == 0x00U)) */
 224:../CMSIS/system_MK64F12.c ****   } else if ((MCG->C1 & MCG_C1_CLKS_MASK) == 0x40U) {
 393              		.loc 1 224 18
 394 01ba 294B     		ldr	r3, .L44
 395 01bc 1B78     		ldrb	r3, [r3]
 396 01be DBB2     		uxtb	r3, r3
 397              		.loc 1 224 23
 398 01c0 03F0C003 		and	r3, r3, #192
 399              		.loc 1 224 13
 400 01c4 402B     		cmp	r3, #64
 401 01c6 1AD1     		bne	.L32
 225:../CMSIS/system_MK64F12.c ****     /* Internal reference clock is selected */
 226:../CMSIS/system_MK64F12.c ****     if ((MCG->C2 & MCG_C2_IRCS_MASK) == 0x00U) {
 402              		.loc 1 226 13
 403 01c8 254B     		ldr	r3, .L44
 404 01ca 5B78     		ldrb	r3, [r3, #1]
 405 01cc DBB2     		uxtb	r3, r3
 406              		.loc 1 226 18
 407 01ce 03F00103 		and	r3, r3, #1
 408              		.loc 1 226 8
 409 01d2 002B     		cmp	r3, #0
 410 01d4 03D1     		bne	.L33
 227:../CMSIS/system_MK64F12.c ****       MCGOUTClock = CPU_INT_SLOW_CLK_HZ; /* Slow internal reference clock selected */
 411              		.loc 1 227 19
 412 01d6 4FF40043 		mov	r3, #32768
 413 01da 7B60     		str	r3, [r7, #4]
 414 01dc 2AE0     		b	.L31
 415              	.L33:
 228:../CMSIS/system_MK64F12.c ****     } else { /* (!((MCG->C2 & MCG_C2_IRCS_MASK) == 0x00U)) */
 229:../CMSIS/system_MK64F12.c ****       Divider = (uint16_t)(0x01LU << ((MCG->SC & MCG_SC_FCRDIV_MASK) >> MCG_SC_FCRDIV_SHIFT));
 416              		.loc 1 229 43
 417 01de 204B     		ldr	r3, .L44
 418 01e0 1B7A     		ldrb	r3, [r3, #8]
 419 01e2 DBB2     		uxtb	r3, r3
 420              		.loc 1 229 70
 421 01e4 5B08     		lsrs	r3, r3, #1
 422 01e6 03F00703 		and	r3, r3, #7
 423              		.loc 1 229 35
 424 01ea 0122     		movs	r2, #1
 425 01ec 02FA03F3 		lsl	r3, r2, r3
 426              		.loc 1 229 15
 427 01f0 7B80     		strh	r3, [r7, #2]	@ movhi
 230:../CMSIS/system_MK64F12.c ****       MCGOUTClock = (uint32_t) (CPU_INT_FAST_CLK_HZ / Divider); /* Fast internal reference clock se
 428              		.loc 1 230 21
 429 01f2 7B88     		ldrh	r3, [r7, #2]
 430              		.loc 1 230 19
 431 01f4 1D4A     		ldr	r2, .L44+12
 432 01f6 B2FBF3F3 		udiv	r3, r2, r3
 433 01fa 7B60     		str	r3, [r7, #4]
 434 01fc 1AE0     		b	.L31
 435              	.L32:
 231:../CMSIS/system_MK64F12.c ****     } /* (!((MCG->C2 & MCG_C2_IRCS_MASK) == 0x00U)) */
 232:../CMSIS/system_MK64F12.c ****   } else if ((MCG->C1 & MCG_C1_CLKS_MASK) == 0x80U) {
 436              		.loc 1 232 18
 437 01fe 184B     		ldr	r3, .L44
 438 0200 1B78     		ldrb	r3, [r3]
 439 0202 DBB2     		uxtb	r3, r3
 440              		.loc 1 232 23
 441 0204 03F0C003 		and	r3, r3, #192
 442              		.loc 1 232 13
 443 0208 802B     		cmp	r3, #128
 444 020a 22D1     		bne	.L43
 233:../CMSIS/system_MK64F12.c ****     /* External reference clock is selected */
 234:../CMSIS/system_MK64F12.c ****     switch (MCG->C7 & MCG_C7_OSCSEL_MASK) {
 445              		.loc 1 234 16
 446 020c 144B     		ldr	r3, .L44
 447 020e 1B7B     		ldrb	r3, [r3, #12]
 448 0210 DBB2     		uxtb	r3, r3
 449              		.loc 1 234 21
 450 0212 03F00303 		and	r3, r3, #3
 451              		.loc 1 234 5
 452 0216 002B     		cmp	r3, #0
 453 0218 02D0     		beq	.L36
 454 021a 012B     		cmp	r3, #1
 455 021c 03D0     		beq	.L37
 456 021e 06E0     		b	.L42
 457              	.L36:
 235:../CMSIS/system_MK64F12.c ****     case 0x00U:
 236:../CMSIS/system_MK64F12.c ****       MCGOUTClock = CPU_XTAL_CLK_HZ;   /* System oscillator drives MCG clock */
 458              		.loc 1 236 19
 459 0220 104B     		ldr	r3, .L44+4
 460 0222 7B60     		str	r3, [r7, #4]
 237:../CMSIS/system_MK64F12.c ****       break;
 461              		.loc 1 237 7
 462 0224 06E0     		b	.L31
 463              	.L37:
 238:../CMSIS/system_MK64F12.c ****     case 0x01U:
 239:../CMSIS/system_MK64F12.c ****       MCGOUTClock = CPU_XTAL32k_CLK_HZ; /* RTC 32 kHz oscillator drives MCG clock */
 464              		.loc 1 239 19
 465 0226 4FF40043 		mov	r3, #32768
 466 022a 7B60     		str	r3, [r7, #4]
 240:../CMSIS/system_MK64F12.c ****       break;
 467              		.loc 1 240 7
 468 022c 02E0     		b	.L31
 469              	.L42:
 241:../CMSIS/system_MK64F12.c ****     case 0x02U:
 242:../CMSIS/system_MK64F12.c ****     default:
 243:../CMSIS/system_MK64F12.c ****       MCGOUTClock = CPU_INT_IRC_CLK_HZ; /* IRC 48MHz oscillator drives MCG clock */
 470              		.loc 1 243 19
 471 022e 0E4B     		ldr	r3, .L44+8
 472 0230 7B60     		str	r3, [r7, #4]
 244:../CMSIS/system_MK64F12.c ****       break;
 473              		.loc 1 244 7
 474 0232 00BF     		nop
 475              	.L31:
 245:../CMSIS/system_MK64F12.c ****     }
 246:../CMSIS/system_MK64F12.c ****   } else { /* (!((MCG->C1 & MCG_C1_CLKS_MASK) == 0x80U)) */
 247:../CMSIS/system_MK64F12.c ****     /* Reserved value */
 248:../CMSIS/system_MK64F12.c ****     return;
 249:../CMSIS/system_MK64F12.c ****   } /* (!((MCG->C1 & MCG_C1_CLKS_MASK) == 0x80U)) */
 250:../CMSIS/system_MK64F12.c ****   SystemCoreClock = (MCGOUTClock / (0x01U + ((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV1_MASK) >> SIM_CLKDI
 476              		.loc 1 250 50
 477 0234 0E4B     		ldr	r3, .L44+16
 478 0236 03F58253 		add	r3, r3, #4160
 479 023a 0433     		adds	r3, r3, #4
 480 023c 1B68     		ldr	r3, [r3]
 481              		.loc 1 250 88
 482 023e 1B0F     		lsrs	r3, r3, #28
 483 0240 03F00F03 		and	r3, r3, #15
 484              		.loc 1 250 43
 485 0244 0133     		adds	r3, r3, #1
 486              		.loc 1 250 34
 487 0246 7A68     		ldr	r2, [r7, #4]
 488 0248 B2FBF3F3 		udiv	r3, r2, r3
 489              		.loc 1 250 19
 490 024c 094A     		ldr	r2, .L44+20
 491 024e 1360     		str	r3, [r2]
 492 0250 00E0     		b	.L4
 493              	.L43:
 248:../CMSIS/system_MK64F12.c ****   } /* (!((MCG->C1 & MCG_C1_CLKS_MASK) == 0x80U)) */
 494              		.loc 1 248 5
 495 0252 00BF     		nop
 496              	.L4:
 251:../CMSIS/system_MK64F12.c **** }
 497              		.loc 1 251 1
 498 0254 0C37     		adds	r7, r7, #12
 499              		.cfi_def_cfa_offset 4
 500 0256 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
 502              		@ sp needed
 503 0258 5DF8047B 		ldr	r7, [sp], #4
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 025c 7047     		bx	lr
 507              	.L45:
 508 025e 00BF     		.align	2
 509              	.L44:
 510 0260 00400640 		.word	1074151424
 511 0264 80F0FA02 		.word	50000000
 512 0268 006CDC02 		.word	48000000
 513 026c 00093D00 		.word	4000000
 514 0270 00700440 		.word	1074032640
 515 0274 00000000 		.word	SystemCoreClock
 516              		.cfi_endproc
 517              	.LFE124:
 519              		.text
 520              	.Letext0:
 521              		.file 2 "/usr/local/mcuxpressoide-11.0.0_2516/ide/plugins/com.nxp.mcuxpresso.tools.linux_11.0.0.20
 522              		.file 3 "/usr/local/mcuxpressoide-11.0.0_2516/ide/plugins/com.nxp.mcuxpresso.tools.linux_11.0.0.20
 523              		.file 4 "../CMSIS/core_cm4.h"
 524              		.file 5 "../CMSIS/system_MK64F12.h"
 525              		.file 6 "../CMSIS/MK64F12.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_MK64F12.c
     /tmp/ccrcYEGK.s:22     .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccrcYEGK.s:19     .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccrcYEGK.s:25     .text.SystemInit:0000000000000000 $t
     /tmp/ccrcYEGK.s:33     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccrcYEGK.s:79     .text.SystemInit:0000000000000038 $d
     /tmp/ccrcYEGK.s:85     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccrcYEGK.s:92     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccrcYEGK.s:510    .text.SystemCoreClockUpdate:0000000000000260 $d
                           .group:0000000000000000 wm4.0.e9a4c502d1288a7f4530c6554342258b
                           .group:0000000000000000 wm4.redlib_version.h.16.f905717e4b3a91dcbdbb631865150df4
                           .group:0000000000000000 wm4.libconfigarm.h.19.34723c94cbd19598192aa6b1e87fca41
                           .group:0000000000000000 wm4.stdint.h.31.58198de4ea930fb897655479091e17c7
                           .group:0000000000000000 wm4.fsl_device_registers.h.32.f10b25a7fd7ad45b9a40904c33f28816
                           .group:0000000000000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:0000000000000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:0000000000000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:0000000000000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:0000000000000000 wm4.MK64F12.h.475.cafa8e1e521f96f0b72de286863a6df7
                           .group:0000000000000000 wm4.MK64F12_features.h.92.512cea46d882153168efeec0bc3a9da7

NO UNDEFINED SYMBOLS
