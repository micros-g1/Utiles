   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"startup_mk64f12.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Flash_Config
  18              		.section	.FlashConfig,"a"
  19              		.align	2
  22              	Flash_Config:
  23 0000 FFFFFFFF 		.word	-1
  24 0004 FFFFFFFF 		.word	-1
  25 0008 FFFFFFFF 		.word	-1
  26 000c FEFFFFFF 		.word	-2
  27              		.global	g_pfnVectors
  28              		.section	.isr_vector,"a"
  29              		.align	2
  32              	g_pfnVectors:
  33 0000 00000000 		.word	_vStackTop
  34 0004 00000000 		.word	ResetISR
  35 0008 00000000 		.word	NMI_Handler
  36 000c 00000000 		.word	HardFault_Handler
  37 0010 00000000 		.word	MemManage_Handler
  38 0014 00000000 		.word	BusFault_Handler
  39 0018 00000000 		.word	UsageFault_Handler
  40 001c 00000000 		.word	0
  41 0020 00000000 		.word	0
  42 0024 00000000 		.word	0
  43 0028 00000000 		.word	0
  44 002c 00000000 		.word	SVC_Handler
  45 0030 00000000 		.word	DebugMon_Handler
  46 0034 00000000 		.word	0
  47 0038 00000000 		.word	PendSV_Handler
  48 003c 00000000 		.word	SysTick_Handler
  49 0040 00000000 		.word	DMA0_IRQHandler
  50 0044 00000000 		.word	DMA1_IRQHandler
  51 0048 00000000 		.word	DMA2_IRQHandler
  52 004c 00000000 		.word	DMA3_IRQHandler
  53 0050 00000000 		.word	DMA4_IRQHandler
  54 0054 00000000 		.word	DMA5_IRQHandler
  55 0058 00000000 		.word	DMA6_IRQHandler
  56 005c 00000000 		.word	DMA7_IRQHandler
  57 0060 00000000 		.word	DMA8_IRQHandler
  58 0064 00000000 		.word	DMA9_IRQHandler
  59 0068 00000000 		.word	DMA10_IRQHandler
  60 006c 00000000 		.word	DMA11_IRQHandler
  61 0070 00000000 		.word	DMA12_IRQHandler
  62 0074 00000000 		.word	DMA13_IRQHandler
  63 0078 00000000 		.word	DMA14_IRQHandler
  64 007c 00000000 		.word	DMA15_IRQHandler
  65 0080 00000000 		.word	DMA_Error_IRQHandler
  66 0084 00000000 		.word	MCM_IRQHandler
  67 0088 00000000 		.word	FTFE_IRQHandler
  68 008c 00000000 		.word	Read_Collision_IRQHandler
  69 0090 00000000 		.word	LVD_LVW_IRQHandler
  70 0094 00000000 		.word	LLWU_IRQHandler
  71 0098 00000000 		.word	WDOG_EWM_IRQHandler
  72 009c 00000000 		.word	RNG_IRQHandler
  73 00a0 00000000 		.word	I2C0_IRQHandler
  74 00a4 00000000 		.word	I2C1_IRQHandler
  75 00a8 00000000 		.word	SPI0_IRQHandler
  76 00ac 00000000 		.word	SPI1_IRQHandler
  77 00b0 00000000 		.word	I2S0_Tx_IRQHandler
  78 00b4 00000000 		.word	I2S0_Rx_IRQHandler
  79 00b8 00000000 		.word	UART0_LON_IRQHandler
  80 00bc 00000000 		.word	UART0_RX_TX_IRQHandler
  81 00c0 00000000 		.word	UART0_ERR_IRQHandler
  82 00c4 00000000 		.word	UART1_RX_TX_IRQHandler
  83 00c8 00000000 		.word	UART1_ERR_IRQHandler
  84 00cc 00000000 		.word	UART2_RX_TX_IRQHandler
  85 00d0 00000000 		.word	UART2_ERR_IRQHandler
  86 00d4 00000000 		.word	UART3_RX_TX_IRQHandler
  87 00d8 00000000 		.word	UART3_ERR_IRQHandler
  88 00dc 00000000 		.word	ADC0_IRQHandler
  89 00e0 00000000 		.word	CMP0_IRQHandler
  90 00e4 00000000 		.word	CMP1_IRQHandler
  91 00e8 00000000 		.word	FTM0_IRQHandler
  92 00ec 00000000 		.word	FTM1_IRQHandler
  93 00f0 00000000 		.word	FTM2_IRQHandler
  94 00f4 00000000 		.word	CMT_IRQHandler
  95 00f8 00000000 		.word	RTC_IRQHandler
  96 00fc 00000000 		.word	RTC_Seconds_IRQHandler
  97 0100 00000000 		.word	PIT0_IRQHandler
  98 0104 00000000 		.word	PIT1_IRQHandler
  99 0108 00000000 		.word	PIT2_IRQHandler
 100 010c 00000000 		.word	PIT3_IRQHandler
 101 0110 00000000 		.word	PDB0_IRQHandler
 102 0114 00000000 		.word	USB0_IRQHandler
 103 0118 00000000 		.word	USBDCD_IRQHandler
 104 011c 00000000 		.word	Reserved71_IRQHandler
 105 0120 00000000 		.word	DAC0_IRQHandler
 106 0124 00000000 		.word	MCG_IRQHandler
 107 0128 00000000 		.word	LPTMR0_IRQHandler
 108 012c 00000000 		.word	PORTA_IRQHandler
 109 0130 00000000 		.word	PORTB_IRQHandler
 110 0134 00000000 		.word	PORTC_IRQHandler
 111 0138 00000000 		.word	PORTD_IRQHandler
 112 013c 00000000 		.word	PORTE_IRQHandler
 113 0140 00000000 		.word	SWI_IRQHandler
 114 0144 00000000 		.word	SPI2_IRQHandler
 115 0148 00000000 		.word	UART4_RX_TX_IRQHandler
 116 014c 00000000 		.word	UART4_ERR_IRQHandler
 117 0150 00000000 		.word	UART5_RX_TX_IRQHandler
 118 0154 00000000 		.word	UART5_ERR_IRQHandler
 119 0158 00000000 		.word	CMP2_IRQHandler
 120 015c 00000000 		.word	FTM3_IRQHandler
 121 0160 00000000 		.word	DAC1_IRQHandler
 122 0164 00000000 		.word	ADC1_IRQHandler
 123 0168 00000000 		.word	I2C2_IRQHandler
 124 016c 00000000 		.word	CAN0_ORed_Message_buffer_IRQHandler
 125 0170 00000000 		.word	CAN0_Bus_Off_IRQHandler
 126 0174 00000000 		.word	CAN0_Error_IRQHandler
 127 0178 00000000 		.word	CAN0_Tx_Warning_IRQHandler
 128 017c 00000000 		.word	CAN0_Rx_Warning_IRQHandler
 129 0180 00000000 		.word	CAN0_Wake_Up_IRQHandler
 130 0184 00000000 		.word	SDHC_IRQHandler
 131 0188 00000000 		.word	ENET_1588_Timer_IRQHandler
 132 018c 00000000 		.word	ENET_Transmit_IRQHandler
 133 0190 00000000 		.word	ENET_Receive_IRQHandler
 134 0194 00000000 		.word	ENET_Error_IRQHandler
 135              		.global	__Vectors
 136              		.set	__Vectors,g_pfnVectors
 137              		.section	.after_vectors.init_data,"ax",%progbits
 138              		.align	1
 139              		.global	data_init
 140              		.arch armv7e-m
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	data_init:
 147              	.LFB0:
 148              		.file 1 "../startup/startup_mk64f12.c"
   1:../startup/startup_mk64f12.c **** //*****************************************************************************
   2:../startup/startup_mk64f12.c **** // MK64F12 startup code for use with MCUXpresso IDE
   3:../startup/startup_mk64f12.c **** //
   4:../startup/startup_mk64f12.c **** // Version : 060117
   5:../startup/startup_mk64f12.c **** //*****************************************************************************
   6:../startup/startup_mk64f12.c **** //
   7:../startup/startup_mk64f12.c **** // Copyright(C) NXP Semiconductors, 2017
   8:../startup/startup_mk64f12.c **** // All rights reserved.
   9:../startup/startup_mk64f12.c **** //
  10:../startup/startup_mk64f12.c **** // Redistribution and use in source and binary forms, with or without modification,
  11:../startup/startup_mk64f12.c **** // are permitted provided that the following conditions are met:
  12:../startup/startup_mk64f12.c **** //
  13:../startup/startup_mk64f12.c **** // o Redistributions of source code must retain the above copyright notice, this list
  14:../startup/startup_mk64f12.c **** //   of conditions and the following disclaimer.
  15:../startup/startup_mk64f12.c **** //
  16:../startup/startup_mk64f12.c **** // o Redistributions in binary form must reproduce the above copyright notice, this
  17:../startup/startup_mk64f12.c **** //   list of conditions and the following disclaimer in the documentation and/or
  18:../startup/startup_mk64f12.c **** //   other materials provided with the distribution.
  19:../startup/startup_mk64f12.c **** //
  20:../startup/startup_mk64f12.c **** // o Neither the name of copyright holder nor the names of its
  21:../startup/startup_mk64f12.c **** //   contributors may be used to endorse or promote products derived from this
  22:../startup/startup_mk64f12.c **** //   software without specific prior written permission.
  23:../startup/startup_mk64f12.c **** //
  24:../startup/startup_mk64f12.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  25:../startup/startup_mk64f12.c **** // ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  26:../startup/startup_mk64f12.c **** // WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  27:../startup/startup_mk64f12.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  28:../startup/startup_mk64f12.c **** // ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  29:../startup/startup_mk64f12.c **** // (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  30:../startup/startup_mk64f12.c **** // LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  31:../startup/startup_mk64f12.c **** // ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  32:../startup/startup_mk64f12.c **** // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  33:../startup/startup_mk64f12.c **** // SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../startup/startup_mk64f12.c **** //*****************************************************************************
  35:../startup/startup_mk64f12.c **** 
  36:../startup/startup_mk64f12.c **** #if defined (DEBUG)
  37:../startup/startup_mk64f12.c **** #pragma GCC push_options
  38:../startup/startup_mk64f12.c **** #pragma GCC optimize ("Og")
  39:../startup/startup_mk64f12.c **** #endif // (DEBUG)
  40:../startup/startup_mk64f12.c **** 
  41:../startup/startup_mk64f12.c **** #if defined (__cplusplus)
  42:../startup/startup_mk64f12.c **** #ifdef __REDLIB__
  43:../startup/startup_mk64f12.c **** #error Redlib does not support C++
  44:../startup/startup_mk64f12.c **** #else
  45:../startup/startup_mk64f12.c **** //*****************************************************************************
  46:../startup/startup_mk64f12.c **** //
  47:../startup/startup_mk64f12.c **** // The entry point for the C++ library startup
  48:../startup/startup_mk64f12.c **** //
  49:../startup/startup_mk64f12.c **** //*****************************************************************************
  50:../startup/startup_mk64f12.c **** extern "C" {
  51:../startup/startup_mk64f12.c ****     extern void __libc_init_array(void);
  52:../startup/startup_mk64f12.c **** }
  53:../startup/startup_mk64f12.c **** #endif
  54:../startup/startup_mk64f12.c **** #endif
  55:../startup/startup_mk64f12.c **** 
  56:../startup/startup_mk64f12.c **** #define WEAK __attribute__ ((weak))
  57:../startup/startup_mk64f12.c **** #define WEAK_AV __attribute__ ((weak, section(".after_vectors")))
  58:../startup/startup_mk64f12.c **** #define ALIAS(f) __attribute__ ((weak, alias (#f)))
  59:../startup/startup_mk64f12.c **** 
  60:../startup/startup_mk64f12.c **** //*****************************************************************************
  61:../startup/startup_mk64f12.c **** #if defined (__cplusplus)
  62:../startup/startup_mk64f12.c **** extern "C" {
  63:../startup/startup_mk64f12.c **** #endif
  64:../startup/startup_mk64f12.c **** 
  65:../startup/startup_mk64f12.c **** //*****************************************************************************
  66:../startup/startup_mk64f12.c **** // Flash Configuration block : 16-byte flash configuration field that stores
  67:../startup/startup_mk64f12.c **** // default protection settings (loaded on reset) and security information that
  68:../startup/startup_mk64f12.c **** // allows the MCU to restrict access to the Flash Memory module.
  69:../startup/startup_mk64f12.c **** // Placed at address 0x400 by the linker script.
  70:../startup/startup_mk64f12.c **** //*****************************************************************************
  71:../startup/startup_mk64f12.c **** 
  72:../startup/startup_mk64f12.c **** __attribute__ ((used,section(".FlashConfig"))) const struct {
  73:../startup/startup_mk64f12.c ****     unsigned int word1;
  74:../startup/startup_mk64f12.c ****     unsigned int word2;
  75:../startup/startup_mk64f12.c ****     unsigned int word3;
  76:../startup/startup_mk64f12.c ****     unsigned int word4;
  77:../startup/startup_mk64f12.c **** } Flash_Config = {0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFE};
  78:../startup/startup_mk64f12.c **** 
  79:../startup/startup_mk64f12.c **** //*****************************************************************************
  80:../startup/startup_mk64f12.c **** // Declaration of external SystemInit function
  81:../startup/startup_mk64f12.c **** //*****************************************************************************
  82:../startup/startup_mk64f12.c **** #if defined (__USE_CMSIS)
  83:../startup/startup_mk64f12.c **** extern void SystemInit(void);
  84:../startup/startup_mk64f12.c **** #endif // (__USE_CMSIS)
  85:../startup/startup_mk64f12.c **** 
  86:../startup/startup_mk64f12.c **** //*****************************************************************************
  87:../startup/startup_mk64f12.c **** // Forward declaration of the core exception handlers.
  88:../startup/startup_mk64f12.c **** // When the application defines a handler (with the same name), this will
  89:../startup/startup_mk64f12.c **** // automatically take precedence over these weak definitions
  90:../startup/startup_mk64f12.c **** //*****************************************************************************
  91:../startup/startup_mk64f12.c ****      void ResetISR(void);
  92:../startup/startup_mk64f12.c **** WEAK void NMI_Handler(void);
  93:../startup/startup_mk64f12.c **** WEAK void HardFault_Handler(void);
  94:../startup/startup_mk64f12.c **** WEAK void MemManage_Handler(void);
  95:../startup/startup_mk64f12.c **** WEAK void BusFault_Handler(void);
  96:../startup/startup_mk64f12.c **** WEAK void UsageFault_Handler(void);
  97:../startup/startup_mk64f12.c **** WEAK void SVC_Handler(void);
  98:../startup/startup_mk64f12.c **** WEAK void DebugMon_Handler(void);
  99:../startup/startup_mk64f12.c **** WEAK void PendSV_Handler(void);
 100:../startup/startup_mk64f12.c **** WEAK void SysTick_Handler(void);
 101:../startup/startup_mk64f12.c **** WEAK void IntDefaultHandler(void);
 102:../startup/startup_mk64f12.c **** 
 103:../startup/startup_mk64f12.c **** //*****************************************************************************
 104:../startup/startup_mk64f12.c **** // Forward declaration of the application IRQ handlers. When the application
 105:../startup/startup_mk64f12.c **** // defines a handler (with the same name), this will automatically take
 106:../startup/startup_mk64f12.c **** // precedence over weak definitions below
 107:../startup/startup_mk64f12.c **** //*****************************************************************************
 108:../startup/startup_mk64f12.c **** WEAK void DMA0_IRQHandler(void);
 109:../startup/startup_mk64f12.c **** WEAK void DMA1_IRQHandler(void);
 110:../startup/startup_mk64f12.c **** WEAK void DMA2_IRQHandler(void);
 111:../startup/startup_mk64f12.c **** WEAK void DMA3_IRQHandler(void);
 112:../startup/startup_mk64f12.c **** WEAK void DMA4_IRQHandler(void);
 113:../startup/startup_mk64f12.c **** WEAK void DMA5_IRQHandler(void);
 114:../startup/startup_mk64f12.c **** WEAK void DMA6_IRQHandler(void);
 115:../startup/startup_mk64f12.c **** WEAK void DMA7_IRQHandler(void);
 116:../startup/startup_mk64f12.c **** WEAK void DMA8_IRQHandler(void);
 117:../startup/startup_mk64f12.c **** WEAK void DMA9_IRQHandler(void);
 118:../startup/startup_mk64f12.c **** WEAK void DMA10_IRQHandler(void);
 119:../startup/startup_mk64f12.c **** WEAK void DMA11_IRQHandler(void);
 120:../startup/startup_mk64f12.c **** WEAK void DMA12_IRQHandler(void);
 121:../startup/startup_mk64f12.c **** WEAK void DMA13_IRQHandler(void);
 122:../startup/startup_mk64f12.c **** WEAK void DMA14_IRQHandler(void);
 123:../startup/startup_mk64f12.c **** WEAK void DMA15_IRQHandler(void);
 124:../startup/startup_mk64f12.c **** WEAK void DMA_Error_IRQHandler(void);
 125:../startup/startup_mk64f12.c **** WEAK void MCM_IRQHandler(void);
 126:../startup/startup_mk64f12.c **** WEAK void FTFE_IRQHandler(void);
 127:../startup/startup_mk64f12.c **** WEAK void Read_Collision_IRQHandler(void);
 128:../startup/startup_mk64f12.c **** WEAK void LVD_LVW_IRQHandler(void);
 129:../startup/startup_mk64f12.c **** WEAK void LLWU_IRQHandler(void);
 130:../startup/startup_mk64f12.c **** WEAK void WDOG_EWM_IRQHandler(void);
 131:../startup/startup_mk64f12.c **** WEAK void RNG_IRQHandler(void);
 132:../startup/startup_mk64f12.c **** WEAK void I2C0_IRQHandler(void);
 133:../startup/startup_mk64f12.c **** WEAK void I2C1_IRQHandler(void);
 134:../startup/startup_mk64f12.c **** WEAK void SPI0_IRQHandler(void);
 135:../startup/startup_mk64f12.c **** WEAK void SPI1_IRQHandler(void);
 136:../startup/startup_mk64f12.c **** WEAK void I2S0_Tx_IRQHandler(void);
 137:../startup/startup_mk64f12.c **** WEAK void I2S0_Rx_IRQHandler(void);
 138:../startup/startup_mk64f12.c **** WEAK void UART0_LON_IRQHandler(void);
 139:../startup/startup_mk64f12.c **** WEAK void UART0_RX_TX_IRQHandler(void);
 140:../startup/startup_mk64f12.c **** WEAK void UART0_ERR_IRQHandler(void);
 141:../startup/startup_mk64f12.c **** WEAK void UART1_RX_TX_IRQHandler(void);
 142:../startup/startup_mk64f12.c **** WEAK void UART1_ERR_IRQHandler(void);
 143:../startup/startup_mk64f12.c **** WEAK void UART2_RX_TX_IRQHandler(void);
 144:../startup/startup_mk64f12.c **** WEAK void UART2_ERR_IRQHandler(void);
 145:../startup/startup_mk64f12.c **** WEAK void UART3_RX_TX_IRQHandler(void);
 146:../startup/startup_mk64f12.c **** WEAK void UART3_ERR_IRQHandler(void);
 147:../startup/startup_mk64f12.c **** WEAK void ADC0_IRQHandler(void);
 148:../startup/startup_mk64f12.c **** WEAK void CMP0_IRQHandler(void);
 149:../startup/startup_mk64f12.c **** WEAK void CMP1_IRQHandler(void);
 150:../startup/startup_mk64f12.c **** WEAK void FTM0_IRQHandler(void);
 151:../startup/startup_mk64f12.c **** WEAK void FTM1_IRQHandler(void);
 152:../startup/startup_mk64f12.c **** WEAK void FTM2_IRQHandler(void);
 153:../startup/startup_mk64f12.c **** WEAK void CMT_IRQHandler(void);
 154:../startup/startup_mk64f12.c **** WEAK void RTC_IRQHandler(void);
 155:../startup/startup_mk64f12.c **** WEAK void RTC_Seconds_IRQHandler(void);
 156:../startup/startup_mk64f12.c **** WEAK void PIT0_IRQHandler(void);
 157:../startup/startup_mk64f12.c **** WEAK void PIT1_IRQHandler(void);
 158:../startup/startup_mk64f12.c **** WEAK void PIT2_IRQHandler(void);
 159:../startup/startup_mk64f12.c **** WEAK void PIT3_IRQHandler(void);
 160:../startup/startup_mk64f12.c **** WEAK void PDB0_IRQHandler(void);
 161:../startup/startup_mk64f12.c **** WEAK void USB0_IRQHandler(void);
 162:../startup/startup_mk64f12.c **** WEAK void USBDCD_IRQHandler(void);
 163:../startup/startup_mk64f12.c **** WEAK void Reserved71_IRQHandler(void);
 164:../startup/startup_mk64f12.c **** WEAK void DAC0_IRQHandler(void);
 165:../startup/startup_mk64f12.c **** WEAK void MCG_IRQHandler(void);
 166:../startup/startup_mk64f12.c **** WEAK void LPTMR0_IRQHandler(void);
 167:../startup/startup_mk64f12.c **** WEAK void PORTA_IRQHandler(void);
 168:../startup/startup_mk64f12.c **** WEAK void PORTB_IRQHandler(void);
 169:../startup/startup_mk64f12.c **** WEAK void PORTC_IRQHandler(void);
 170:../startup/startup_mk64f12.c **** WEAK void PORTD_IRQHandler(void);
 171:../startup/startup_mk64f12.c **** WEAK void PORTE_IRQHandler(void);
 172:../startup/startup_mk64f12.c **** WEAK void SWI_IRQHandler(void);
 173:../startup/startup_mk64f12.c **** WEAK void SPI2_IRQHandler(void);
 174:../startup/startup_mk64f12.c **** WEAK void UART4_RX_TX_IRQHandler(void);
 175:../startup/startup_mk64f12.c **** WEAK void UART4_ERR_IRQHandler(void);
 176:../startup/startup_mk64f12.c **** WEAK void UART5_RX_TX_IRQHandler(void);
 177:../startup/startup_mk64f12.c **** WEAK void UART5_ERR_IRQHandler(void);
 178:../startup/startup_mk64f12.c **** WEAK void CMP2_IRQHandler(void);
 179:../startup/startup_mk64f12.c **** WEAK void FTM3_IRQHandler(void);
 180:../startup/startup_mk64f12.c **** WEAK void DAC1_IRQHandler(void);
 181:../startup/startup_mk64f12.c **** WEAK void ADC1_IRQHandler(void);
 182:../startup/startup_mk64f12.c **** WEAK void I2C2_IRQHandler(void);
 183:../startup/startup_mk64f12.c **** WEAK void CAN0_ORed_Message_buffer_IRQHandler(void);
 184:../startup/startup_mk64f12.c **** WEAK void CAN0_Bus_Off_IRQHandler(void);
 185:../startup/startup_mk64f12.c **** WEAK void CAN0_Error_IRQHandler(void);
 186:../startup/startup_mk64f12.c **** WEAK void CAN0_Tx_Warning_IRQHandler(void);
 187:../startup/startup_mk64f12.c **** WEAK void CAN0_Rx_Warning_IRQHandler(void);
 188:../startup/startup_mk64f12.c **** WEAK void CAN0_Wake_Up_IRQHandler(void);
 189:../startup/startup_mk64f12.c **** WEAK void SDHC_IRQHandler(void);
 190:../startup/startup_mk64f12.c **** WEAK void ENET_1588_Timer_IRQHandler(void);
 191:../startup/startup_mk64f12.c **** WEAK void ENET_Transmit_IRQHandler(void);
 192:../startup/startup_mk64f12.c **** WEAK void ENET_Receive_IRQHandler(void);
 193:../startup/startup_mk64f12.c **** WEAK void ENET_Error_IRQHandler(void);
 194:../startup/startup_mk64f12.c **** 
 195:../startup/startup_mk64f12.c **** //*****************************************************************************
 196:../startup/startup_mk64f12.c **** // Forward declaration of the driver IRQ handlers. These are aliased
 197:../startup/startup_mk64f12.c **** // to the IntDefaultHandler, which is a 'forever' loop. When the driver
 198:../startup/startup_mk64f12.c **** // defines a handler (with the same name), this will automatically take
 199:../startup/startup_mk64f12.c **** // precedence over these weak definitions
 200:../startup/startup_mk64f12.c **** //*****************************************************************************
 201:../startup/startup_mk64f12.c **** void DMA0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 202:../startup/startup_mk64f12.c **** void DMA1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 203:../startup/startup_mk64f12.c **** void DMA2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 204:../startup/startup_mk64f12.c **** void DMA3_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 205:../startup/startup_mk64f12.c **** void DMA4_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 206:../startup/startup_mk64f12.c **** void DMA5_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 207:../startup/startup_mk64f12.c **** void DMA6_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 208:../startup/startup_mk64f12.c **** void DMA7_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 209:../startup/startup_mk64f12.c **** void DMA8_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 210:../startup/startup_mk64f12.c **** void DMA9_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 211:../startup/startup_mk64f12.c **** void DMA10_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 212:../startup/startup_mk64f12.c **** void DMA11_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 213:../startup/startup_mk64f12.c **** void DMA12_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 214:../startup/startup_mk64f12.c **** void DMA13_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 215:../startup/startup_mk64f12.c **** void DMA14_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 216:../startup/startup_mk64f12.c **** void DMA15_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 217:../startup/startup_mk64f12.c **** void DMA_Error_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 218:../startup/startup_mk64f12.c **** void MCM_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 219:../startup/startup_mk64f12.c **** void FTFE_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 220:../startup/startup_mk64f12.c **** void Read_Collision_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 221:../startup/startup_mk64f12.c **** void LVD_LVW_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 222:../startup/startup_mk64f12.c **** void LLWU_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 223:../startup/startup_mk64f12.c **** void WDOG_EWM_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 224:../startup/startup_mk64f12.c **** void RNG_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 225:../startup/startup_mk64f12.c **** void I2C0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 226:../startup/startup_mk64f12.c **** void I2C1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 227:../startup/startup_mk64f12.c **** void SPI0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 228:../startup/startup_mk64f12.c **** void SPI1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 229:../startup/startup_mk64f12.c **** void I2S0_Tx_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 230:../startup/startup_mk64f12.c **** void I2S0_Rx_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 231:../startup/startup_mk64f12.c **** void UART0_LON_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 232:../startup/startup_mk64f12.c **** void UART0_RX_TX_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 233:../startup/startup_mk64f12.c **** void UART0_ERR_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 234:../startup/startup_mk64f12.c **** void UART1_RX_TX_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 235:../startup/startup_mk64f12.c **** void UART1_ERR_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 236:../startup/startup_mk64f12.c **** void UART2_RX_TX_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 237:../startup/startup_mk64f12.c **** void UART2_ERR_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 238:../startup/startup_mk64f12.c **** void UART3_RX_TX_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 239:../startup/startup_mk64f12.c **** void UART3_ERR_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 240:../startup/startup_mk64f12.c **** void ADC0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 241:../startup/startup_mk64f12.c **** void CMP0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 242:../startup/startup_mk64f12.c **** void CMP1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 243:../startup/startup_mk64f12.c **** void FTM0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 244:../startup/startup_mk64f12.c **** void FTM1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 245:../startup/startup_mk64f12.c **** void FTM2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 246:../startup/startup_mk64f12.c **** void CMT_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 247:../startup/startup_mk64f12.c **** void RTC_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 248:../startup/startup_mk64f12.c **** void RTC_Seconds_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 249:../startup/startup_mk64f12.c **** void PIT0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 250:../startup/startup_mk64f12.c **** void PIT1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 251:../startup/startup_mk64f12.c **** void PIT2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 252:../startup/startup_mk64f12.c **** void PIT3_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 253:../startup/startup_mk64f12.c **** void PDB0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 254:../startup/startup_mk64f12.c **** void USB0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 255:../startup/startup_mk64f12.c **** void USBDCD_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 256:../startup/startup_mk64f12.c **** void Reserved71_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 257:../startup/startup_mk64f12.c **** void DAC0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 258:../startup/startup_mk64f12.c **** void MCG_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 259:../startup/startup_mk64f12.c **** void LPTMR0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 260:../startup/startup_mk64f12.c **** void PORTA_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 261:../startup/startup_mk64f12.c **** void PORTB_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 262:../startup/startup_mk64f12.c **** void PORTC_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 263:../startup/startup_mk64f12.c **** void PORTD_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 264:../startup/startup_mk64f12.c **** void PORTE_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 265:../startup/startup_mk64f12.c **** void SWI_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 266:../startup/startup_mk64f12.c **** void SPI2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 267:../startup/startup_mk64f12.c **** void UART4_RX_TX_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 268:../startup/startup_mk64f12.c **** void UART4_ERR_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 269:../startup/startup_mk64f12.c **** void UART5_RX_TX_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 270:../startup/startup_mk64f12.c **** void UART5_ERR_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 271:../startup/startup_mk64f12.c **** void CMP2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 272:../startup/startup_mk64f12.c **** void FTM3_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 273:../startup/startup_mk64f12.c **** void DAC1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 274:../startup/startup_mk64f12.c **** void ADC1_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 275:../startup/startup_mk64f12.c **** void I2C2_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 276:../startup/startup_mk64f12.c **** void CAN0_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 277:../startup/startup_mk64f12.c **** void SDHC_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 278:../startup/startup_mk64f12.c **** void ENET_1588_Timer_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 279:../startup/startup_mk64f12.c **** void ENET_Transmit_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 280:../startup/startup_mk64f12.c **** void ENET_Receive_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 281:../startup/startup_mk64f12.c **** void ENET_Error_DriverIRQHandler(void) ALIAS(IntDefaultHandler);
 282:../startup/startup_mk64f12.c **** 
 283:../startup/startup_mk64f12.c **** //*****************************************************************************
 284:../startup/startup_mk64f12.c **** // The entry point for the application.
 285:../startup/startup_mk64f12.c **** // __main() is the entry point for Redlib based applications
 286:../startup/startup_mk64f12.c **** // main() is the entry point for Newlib based applications
 287:../startup/startup_mk64f12.c **** //*****************************************************************************
 288:../startup/startup_mk64f12.c **** #if defined (__REDLIB__)
 289:../startup/startup_mk64f12.c **** extern void __main(void);
 290:../startup/startup_mk64f12.c **** #endif
 291:../startup/startup_mk64f12.c **** extern int main(void);
 292:../startup/startup_mk64f12.c **** 
 293:../startup/startup_mk64f12.c **** //*****************************************************************************
 294:../startup/startup_mk64f12.c **** // External declaration for the pointer to the stack top from the Linker Script
 295:../startup/startup_mk64f12.c **** //*****************************************************************************
 296:../startup/startup_mk64f12.c **** extern void _vStackTop(void);
 297:../startup/startup_mk64f12.c **** 
 298:../startup/startup_mk64f12.c **** //*****************************************************************************
 299:../startup/startup_mk64f12.c **** #if defined (__cplusplus)
 300:../startup/startup_mk64f12.c **** } // extern "C"
 301:../startup/startup_mk64f12.c **** #endif
 302:../startup/startup_mk64f12.c **** 
 303:../startup/startup_mk64f12.c **** //*****************************************************************************
 304:../startup/startup_mk64f12.c **** // The vector table.
 305:../startup/startup_mk64f12.c **** // This relies on the linker script to place at correct location in memory.
 306:../startup/startup_mk64f12.c **** //*****************************************************************************
 307:../startup/startup_mk64f12.c **** extern void (* const g_pfnVectors[])(void);
 308:../startup/startup_mk64f12.c **** extern void * __Vectors __attribute__ ((alias ("g_pfnVectors")));
 309:../startup/startup_mk64f12.c **** 
 310:../startup/startup_mk64f12.c **** __attribute__ ((used, section(".isr_vector")))
 311:../startup/startup_mk64f12.c **** void (* const g_pfnVectors[])(void) = {
 312:../startup/startup_mk64f12.c ****     // Core Level - CM4
 313:../startup/startup_mk64f12.c ****     &_vStackTop,                       // The initial stack pointer
 314:../startup/startup_mk64f12.c ****     ResetISR,                          // The reset handler
 315:../startup/startup_mk64f12.c ****     NMI_Handler,                       // The NMI handler
 316:../startup/startup_mk64f12.c ****     HardFault_Handler,                 // The hard fault handler
 317:../startup/startup_mk64f12.c ****     MemManage_Handler,                 // The MPU fault handler
 318:../startup/startup_mk64f12.c ****     BusFault_Handler,                  // The bus fault handler
 319:../startup/startup_mk64f12.c ****     UsageFault_Handler,                // The usage fault handler
 320:../startup/startup_mk64f12.c ****     0,                                 // Reserved
 321:../startup/startup_mk64f12.c ****     0,                                 // Reserved
 322:../startup/startup_mk64f12.c ****     0,                                 // Reserved
 323:../startup/startup_mk64f12.c ****     0,                                 // Reserved
 324:../startup/startup_mk64f12.c ****     SVC_Handler,                       // SVCall handler
 325:../startup/startup_mk64f12.c ****     DebugMon_Handler,                  // Debug monitor handler
 326:../startup/startup_mk64f12.c ****     0,                                 // Reserved
 327:../startup/startup_mk64f12.c ****     PendSV_Handler,                    // The PendSV handler
 328:../startup/startup_mk64f12.c ****     SysTick_Handler,                   // The SysTick handler
 329:../startup/startup_mk64f12.c **** 
 330:../startup/startup_mk64f12.c ****     // Chip Level - MK64F12
 331:../startup/startup_mk64f12.c ****     DMA0_IRQHandler,                      // 16 : DMA Channel 0 Transfer Complete
 332:../startup/startup_mk64f12.c ****     DMA1_IRQHandler,                      // 17 : DMA Channel 1 Transfer Complete
 333:../startup/startup_mk64f12.c ****     DMA2_IRQHandler,                      // 18 : DMA Channel 2 Transfer Complete
 334:../startup/startup_mk64f12.c ****     DMA3_IRQHandler,                      // 19 : DMA Channel 3 Transfer Complete
 335:../startup/startup_mk64f12.c ****     DMA4_IRQHandler,                      // 20 : DMA Channel 4 Transfer Complete
 336:../startup/startup_mk64f12.c ****     DMA5_IRQHandler,                      // 21 : DMA Channel 5 Transfer Complete
 337:../startup/startup_mk64f12.c ****     DMA6_IRQHandler,                      // 22 : DMA Channel 6 Transfer Complete
 338:../startup/startup_mk64f12.c ****     DMA7_IRQHandler,                      // 23 : DMA Channel 7 Transfer Complete
 339:../startup/startup_mk64f12.c ****     DMA8_IRQHandler,                      // 24 : DMA Channel 8 Transfer Complete
 340:../startup/startup_mk64f12.c ****     DMA9_IRQHandler,                      // 25 : DMA Channel 9 Transfer Complete
 341:../startup/startup_mk64f12.c ****     DMA10_IRQHandler,                     // 26 : DMA Channel 10 Transfer Complete
 342:../startup/startup_mk64f12.c ****     DMA11_IRQHandler,                     // 27 : DMA Channel 11 Transfer Complete
 343:../startup/startup_mk64f12.c ****     DMA12_IRQHandler,                     // 28 : DMA Channel 12 Transfer Complete
 344:../startup/startup_mk64f12.c ****     DMA13_IRQHandler,                     // 29 : DMA Channel 13 Transfer Complete
 345:../startup/startup_mk64f12.c ****     DMA14_IRQHandler,                     // 30 : DMA Channel 14 Transfer Complete
 346:../startup/startup_mk64f12.c ****     DMA15_IRQHandler,                     // 31 : DMA Channel 15 Transfer Complete
 347:../startup/startup_mk64f12.c ****     DMA_Error_IRQHandler,                 // 32 : DMA Error Interrupt
 348:../startup/startup_mk64f12.c ****     MCM_IRQHandler,                       // 33 : Normal Interrupt
 349:../startup/startup_mk64f12.c ****     FTFE_IRQHandler,                      // 34 : FTFE Command complete interrupt
 350:../startup/startup_mk64f12.c ****     Read_Collision_IRQHandler,            // 35 : Read Collision Interrupt
 351:../startup/startup_mk64f12.c ****     LVD_LVW_IRQHandler,                   // 36 : Low Voltage Detect, Low Voltage Warning
 352:../startup/startup_mk64f12.c ****     LLWU_IRQHandler,                      // 37 : Low Leakage Wakeup Unit
 353:../startup/startup_mk64f12.c ****     WDOG_EWM_IRQHandler,                  // 38 : WDOG Interrupt
 354:../startup/startup_mk64f12.c ****     RNG_IRQHandler,                       // 39 : RNG Interrupt
 355:../startup/startup_mk64f12.c ****     I2C0_IRQHandler,                      // 40 : I2C0 interrupt
 356:../startup/startup_mk64f12.c ****     I2C1_IRQHandler,                      // 41 : I2C1 interrupt
 357:../startup/startup_mk64f12.c ****     SPI0_IRQHandler,                      // 42 : SPI0 Interrupt
 358:../startup/startup_mk64f12.c ****     SPI1_IRQHandler,                      // 43 : SPI1 Interrupt
 359:../startup/startup_mk64f12.c ****     I2S0_Tx_IRQHandler,                   // 44 : I2S0 transmit interrupt
 360:../startup/startup_mk64f12.c ****     I2S0_Rx_IRQHandler,                   // 45 : I2S0 receive interrupt
 361:../startup/startup_mk64f12.c ****     UART0_LON_IRQHandler,                 // 46 : UART0 LON interrupt
 362:../startup/startup_mk64f12.c ****     UART0_RX_TX_IRQHandler,               // 47 : UART0 Receive/Transmit interrupt
 363:../startup/startup_mk64f12.c ****     UART0_ERR_IRQHandler,                 // 48 : UART0 Error interrupt
 364:../startup/startup_mk64f12.c ****     UART1_RX_TX_IRQHandler,               // 49 : UART1 Receive/Transmit interrupt
 365:../startup/startup_mk64f12.c ****     UART1_ERR_IRQHandler,                 // 50 : UART1 Error interrupt
 366:../startup/startup_mk64f12.c ****     UART2_RX_TX_IRQHandler,               // 51 : UART2 Receive/Transmit interrupt
 367:../startup/startup_mk64f12.c ****     UART2_ERR_IRQHandler,                 // 52 : UART2 Error interrupt
 368:../startup/startup_mk64f12.c ****     UART3_RX_TX_IRQHandler,               // 53 : UART3 Receive/Transmit interrupt
 369:../startup/startup_mk64f12.c ****     UART3_ERR_IRQHandler,                 // 54 : UART3 Error interrupt
 370:../startup/startup_mk64f12.c ****     ADC0_IRQHandler,                      // 55 : ADC0 interrupt
 371:../startup/startup_mk64f12.c ****     CMP0_IRQHandler,                      // 56 : CMP0 interrupt
 372:../startup/startup_mk64f12.c ****     CMP1_IRQHandler,                      // 57 : CMP1 interrupt
 373:../startup/startup_mk64f12.c ****     FTM0_IRQHandler,                      // 58 : FTM0 fault, overflow and channels interrupt
 374:../startup/startup_mk64f12.c ****     FTM1_IRQHandler,                      // 59 : FTM1 fault, overflow and channels interrupt
 375:../startup/startup_mk64f12.c ****     FTM2_IRQHandler,                      // 60 : FTM2 fault, overflow and channels interrupt
 376:../startup/startup_mk64f12.c ****     CMT_IRQHandler,                       // 61 : CMT interrupt
 377:../startup/startup_mk64f12.c ****     RTC_IRQHandler,                       // 62 : RTC interrupt
 378:../startup/startup_mk64f12.c ****     RTC_Seconds_IRQHandler,               // 63 : RTC seconds interrupt
 379:../startup/startup_mk64f12.c ****     PIT0_IRQHandler,                      // 64 : PIT timer channel 0 interrupt
 380:../startup/startup_mk64f12.c ****     PIT1_IRQHandler,                      // 65 : PIT timer channel 1 interrupt
 381:../startup/startup_mk64f12.c ****     PIT2_IRQHandler,                      // 66 : PIT timer channel 2 interrupt
 382:../startup/startup_mk64f12.c ****     PIT3_IRQHandler,                      // 67 : PIT timer channel 3 interrupt
 383:../startup/startup_mk64f12.c ****     PDB0_IRQHandler,                      // 68 : PDB0 Interrupt
 384:../startup/startup_mk64f12.c ****     USB0_IRQHandler,                      // 69 : USB0 interrupt
 385:../startup/startup_mk64f12.c ****     USBDCD_IRQHandler,                    // 70 : USBDCD Interrupt
 386:../startup/startup_mk64f12.c ****     Reserved71_IRQHandler,                // 71 : Reserved interrupt
 387:../startup/startup_mk64f12.c ****     DAC0_IRQHandler,                      // 72 : DAC0 interrupt
 388:../startup/startup_mk64f12.c ****     MCG_IRQHandler,                       // 73 : MCG Interrupt
 389:../startup/startup_mk64f12.c ****     LPTMR0_IRQHandler,                    // 74 : LPTimer interrupt
 390:../startup/startup_mk64f12.c ****     PORTA_IRQHandler,                     // 75 : Port A interrupt
 391:../startup/startup_mk64f12.c ****     PORTB_IRQHandler,                     // 76 : Port B interrupt
 392:../startup/startup_mk64f12.c ****     PORTC_IRQHandler,                     // 77 : Port C interrupt
 393:../startup/startup_mk64f12.c ****     PORTD_IRQHandler,                     // 78 : Port D interrupt
 394:../startup/startup_mk64f12.c ****     PORTE_IRQHandler,                     // 79 : Port E interrupt
 395:../startup/startup_mk64f12.c ****     SWI_IRQHandler,                       // 80 : Software interrupt
 396:../startup/startup_mk64f12.c ****     SPI2_IRQHandler,                      // 81 : SPI2 Interrupt
 397:../startup/startup_mk64f12.c ****     UART4_RX_TX_IRQHandler,               // 82 : UART4 Receive/Transmit interrupt
 398:../startup/startup_mk64f12.c ****     UART4_ERR_IRQHandler,                 // 83 : UART4 Error interrupt
 399:../startup/startup_mk64f12.c ****     UART5_RX_TX_IRQHandler,               // 84 : UART5 Receive/Transmit interrupt
 400:../startup/startup_mk64f12.c ****     UART5_ERR_IRQHandler,                 // 85 : UART5 Error interrupt
 401:../startup/startup_mk64f12.c ****     CMP2_IRQHandler,                      // 86 : CMP2 interrupt
 402:../startup/startup_mk64f12.c ****     FTM3_IRQHandler,                      // 87 : FTM3 fault, overflow and channels interrupt
 403:../startup/startup_mk64f12.c ****     DAC1_IRQHandler,                      // 88 : DAC1 interrupt
 404:../startup/startup_mk64f12.c ****     ADC1_IRQHandler,                      // 89 : ADC1 interrupt
 405:../startup/startup_mk64f12.c ****     I2C2_IRQHandler,                      // 90 : I2C2 interrupt
 406:../startup/startup_mk64f12.c ****     CAN0_ORed_Message_buffer_IRQHandler,  // 91 : CAN0 OR'd message buffers interrupt
 407:../startup/startup_mk64f12.c ****     CAN0_Bus_Off_IRQHandler,              // 92 : CAN0 bus off interrupt
 408:../startup/startup_mk64f12.c ****     CAN0_Error_IRQHandler,                // 93 : CAN0 error interrupt
 409:../startup/startup_mk64f12.c ****     CAN0_Tx_Warning_IRQHandler,           // 94 : CAN0 Tx warning interrupt
 410:../startup/startup_mk64f12.c ****     CAN0_Rx_Warning_IRQHandler,           // 95 : CAN0 Rx warning interrupt
 411:../startup/startup_mk64f12.c ****     CAN0_Wake_Up_IRQHandler,              // 96 : CAN0 wake up interrupt
 412:../startup/startup_mk64f12.c ****     SDHC_IRQHandler,                      // 97 : SDHC interrupt
 413:../startup/startup_mk64f12.c ****     ENET_1588_Timer_IRQHandler,           // 98 : Ethernet MAC IEEE 1588 Timer Interrupt
 414:../startup/startup_mk64f12.c ****     ENET_Transmit_IRQHandler,             // 99 : Ethernet MAC Transmit Interrupt
 415:../startup/startup_mk64f12.c ****     ENET_Receive_IRQHandler,              // 100: Ethernet MAC Receive Interrupt
 416:../startup/startup_mk64f12.c ****     ENET_Error_IRQHandler,                // 101: Ethernet MAC Error and miscelaneous Interrupt
 417:../startup/startup_mk64f12.c **** }; /* End of g_pfnVectors */
 418:../startup/startup_mk64f12.c **** 
 419:../startup/startup_mk64f12.c **** //*****************************************************************************
 420:../startup/startup_mk64f12.c **** // Functions to carry out the initialization of RW and BSS data sections. These
 421:../startup/startup_mk64f12.c **** // are written as separate functions rather than being inlined within the
 422:../startup/startup_mk64f12.c **** // ResetISR() function in order to cope with MCUs with multiple banks of
 423:../startup/startup_mk64f12.c **** // memory.
 424:../startup/startup_mk64f12.c **** //*****************************************************************************
 425:../startup/startup_mk64f12.c **** __attribute__ ((section(".after_vectors.init_data")))
 426:../startup/startup_mk64f12.c **** void data_init(unsigned int romstart, unsigned int start, unsigned int len) {
 149              		.loc 1 426 77
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 427:../startup/startup_mk64f12.c **** 	unsigned int *pulDest = (unsigned int*) start;
 428:../startup/startup_mk64f12.c **** 	unsigned int *pulSrc = (unsigned int*) romstart;
 429:../startup/startup_mk64f12.c **** 	unsigned int loop;
 430:../startup/startup_mk64f12.c **** 	for (loop = 0; loop < len; loop = loop + 4)
 154              		.loc 1 430 12
 155 0000 0023     		movs	r3, #0
 156              		.loc 1 430 2
 157 0002 9342     		cmp	r3, r2
 158 0004 0AD2     		bcs	.L7
 426:../startup/startup_mk64f12.c **** 	unsigned int *pulDest = (unsigned int*) start;
 159              		.loc 1 426 77
 160 0006 10B4     		push	{r4}
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 4, -4
 163              	.L3:
 431:../startup/startup_mk64f12.c **** 		*pulDest++ = *pulSrc++;
 164              		.loc 1 431 16 discriminator 3
 165 0008 50F8044B 		ldr	r4, [r0], #4
 166              		.loc 1 431 14 discriminator 3
 167 000c 41F8044B 		str	r4, [r1], #4
 430:../startup/startup_mk64f12.c **** 		*pulDest++ = *pulSrc++;
 168              		.loc 1 430 34 discriminator 3
 169 0010 0433     		adds	r3, r3, #4
 430:../startup/startup_mk64f12.c **** 		*pulDest++ = *pulSrc++;
 170              		.loc 1 430 2 discriminator 3
 171 0012 9342     		cmp	r3, r2
 172 0014 F8D3     		bcc	.L3
 432:../startup/startup_mk64f12.c **** }
 173              		.loc 1 432 1
 174 0016 5DF8044B 		ldr	r4, [sp], #4
 175              		.cfi_restore 4
 176              		.cfi_def_cfa_offset 0
 177 001a 7047     		bx	lr
 178              	.L7:
 179 001c 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE0:
 183              		.section	.after_vectors.init_bss,"ax",%progbits
 184              		.align	1
 185              		.global	bss_init
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	bss_init:
 192              	.LFB1:
 433:../startup/startup_mk64f12.c **** 
 434:../startup/startup_mk64f12.c **** __attribute__ ((section(".after_vectors.init_bss")))
 435:../startup/startup_mk64f12.c **** void bss_init(unsigned int start, unsigned int len) {
 193              		.loc 1 435 53
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 436:../startup/startup_mk64f12.c **** 	unsigned int *pulDest = (unsigned int*) start;
 437:../startup/startup_mk64f12.c **** 	unsigned int loop;
 438:../startup/startup_mk64f12.c **** 	for (loop = 0; loop < len; loop = loop + 4)
 198              		.loc 1 438 12
 199 0000 0023     		movs	r3, #0
 200              	.L9:
 201              		.loc 1 438 2 discriminator 1
 202 0002 8B42     		cmp	r3, r1
 203 0004 04D2     		bcs	.L11
 439:../startup/startup_mk64f12.c **** 		*pulDest++ = 0;
 204              		.loc 1 439 14 discriminator 3
 205 0006 0022     		movs	r2, #0
 206 0008 40F8042B 		str	r2, [r0], #4
 438:../startup/startup_mk64f12.c **** 		*pulDest++ = 0;
 207              		.loc 1 438 34 discriminator 3
 208 000c 0433     		adds	r3, r3, #4
 209 000e F8E7     		b	.L9
 210              	.L11:
 440:../startup/startup_mk64f12.c **** }
 211              		.loc 1 440 1
 212 0010 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE1:
 216              		.section	.after_vectors.reset,"ax",%progbits
 217              		.align	1
 218              		.global	ResetISR
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	ResetISR:
 225              	.LFB2:
 441:../startup/startup_mk64f12.c **** 
 442:../startup/startup_mk64f12.c **** //*****************************************************************************
 443:../startup/startup_mk64f12.c **** // The following symbols are constructs generated by the linker, indicating
 444:../startup/startup_mk64f12.c **** // the location of various points in the "Global Section Table". This table is
 445:../startup/startup_mk64f12.c **** // created by the linker via the Code Red managed linker script mechanism. It
 446:../startup/startup_mk64f12.c **** // contains the load address, execution address and length of each RW data
 447:../startup/startup_mk64f12.c **** // section and the execution and length of each BSS (zero initialized) section.
 448:../startup/startup_mk64f12.c **** //*****************************************************************************
 449:../startup/startup_mk64f12.c **** extern unsigned int __data_section_table;
 450:../startup/startup_mk64f12.c **** extern unsigned int __data_section_table_end;
 451:../startup/startup_mk64f12.c **** extern unsigned int __bss_section_table;
 452:../startup/startup_mk64f12.c **** extern unsigned int __bss_section_table_end;
 453:../startup/startup_mk64f12.c **** 
 454:../startup/startup_mk64f12.c **** //*****************************************************************************
 455:../startup/startup_mk64f12.c **** // Reset entry point for your code.
 456:../startup/startup_mk64f12.c **** // Sets up a simple runtime environment and initializes the C/C++
 457:../startup/startup_mk64f12.c **** // library.
 458:../startup/startup_mk64f12.c **** //*****************************************************************************
 459:../startup/startup_mk64f12.c **** __attribute__ ((section(".after_vectors.reset")))
 460:../startup/startup_mk64f12.c **** void ResetISR(void) {
 226              		.loc 1 460 21
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 10B5     		push	{r4, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 461:../startup/startup_mk64f12.c **** 
 462:../startup/startup_mk64f12.c ****     // Disable interrupts
 463:../startup/startup_mk64f12.c ****     __asm volatile ("cpsid i");
 234              		.loc 1 463 5
 235              		.syntax unified
 236              	@ 463 "../startup/startup_mk64f12.c" 1
 237 0002 72B6     		cpsid i
 238              	@ 0 "" 2
 464:../startup/startup_mk64f12.c **** 
 465:../startup/startup_mk64f12.c **** #if defined (__USE_CMSIS)
 466:../startup/startup_mk64f12.c **** // If __USE_CMSIS defined, then call CMSIS SystemInit code
 467:../startup/startup_mk64f12.c ****     SystemInit();
 239              		.loc 1 467 5
 240              		.thumb
 241              		.syntax unified
 242 0004 FFF7FEFF 		bl	SystemInit
 468:../startup/startup_mk64f12.c **** #else
 469:../startup/startup_mk64f12.c ****     // Disable Watchdog
 470:../startup/startup_mk64f12.c ****     //  Write 0xC520 to watchdog unlock register
 471:../startup/startup_mk64f12.c ****     *((volatile unsigned short *)0x4005200E) = 0xC520;
 472:../startup/startup_mk64f12.c ****     //  Followed by 0xD928 to complete the unlock
 473:../startup/startup_mk64f12.c ****     *((volatile unsigned short *)0x4005200E) = 0xD928;
 474:../startup/startup_mk64f12.c ****     // Now disable watchdog via STCTRLH register
 475:../startup/startup_mk64f12.c ****     *((volatile unsigned short *)0x40052000) = 0x01D2u;
 476:../startup/startup_mk64f12.c **** #endif // (__USE_CMSIS)
 477:../startup/startup_mk64f12.c **** 
 478:../startup/startup_mk64f12.c ****     //
 479:../startup/startup_mk64f12.c ****     // Copy the data sections from flash to SRAM.
 480:../startup/startup_mk64f12.c ****     //
 481:../startup/startup_mk64f12.c **** 	unsigned int LoadAddr, ExeAddr, SectionLen;
 482:../startup/startup_mk64f12.c **** 	unsigned int *SectionTableAddr;
 483:../startup/startup_mk64f12.c **** 
 484:../startup/startup_mk64f12.c **** 	// Load base address of Global Section Table
 485:../startup/startup_mk64f12.c **** 	SectionTableAddr = &__data_section_table;
 243              		.loc 1 485 19
 244 0008 0D4B     		ldr	r3, .L19
 486:../startup/startup_mk64f12.c **** 
 487:../startup/startup_mk64f12.c ****     // Copy the data sections from flash to SRAM.
 488:../startup/startup_mk64f12.c **** 	while (SectionTableAddr < &__data_section_table_end) {
 245              		.loc 1 488 8
 246 000a 07E0     		b	.L13
 247              	.L14:
 489:../startup/startup_mk64f12.c **** 		LoadAddr = *SectionTableAddr++;
 490:../startup/startup_mk64f12.c **** 		ExeAddr = *SectionTableAddr++;
 491:../startup/startup_mk64f12.c **** 		SectionLen = *SectionTableAddr++;
 248              		.loc 1 491 33
 249 000c 03F10C04 		add	r4, r3, #12
 492:../startup/startup_mk64f12.c **** 		data_init(LoadAddr, ExeAddr, SectionLen);
 250              		.loc 1 492 3
 251 0010 9A68     		ldr	r2, [r3, #8]
 252 0012 5968     		ldr	r1, [r3, #4]
 253 0014 1868     		ldr	r0, [r3]
 254 0016 FFF7FEFF 		bl	data_init
 491:../startup/startup_mk64f12.c **** 		data_init(LoadAddr, ExeAddr, SectionLen);
 255              		.loc 1 491 33
 256 001a 2346     		mov	r3, r4
 257              	.L13:
 488:../startup/startup_mk64f12.c **** 		LoadAddr = *SectionTableAddr++;
 258              		.loc 1 488 8
 259 001c 094A     		ldr	r2, .L19+4
 260 001e 9342     		cmp	r3, r2
 261 0020 F4D3     		bcc	.L14
 262 0022 06E0     		b	.L15
 263              	.L16:
 493:../startup/startup_mk64f12.c **** 	}
 494:../startup/startup_mk64f12.c **** 
 495:../startup/startup_mk64f12.c **** 	// At this point, SectionTableAddr = &__bss_section_table;
 496:../startup/startup_mk64f12.c **** 	// Zero fill the bss segment
 497:../startup/startup_mk64f12.c **** 	while (SectionTableAddr < &__bss_section_table_end) {
 498:../startup/startup_mk64f12.c **** 		ExeAddr = *SectionTableAddr++;
 264              		.loc 1 498 11
 265 0024 1C46     		mov	r4, r3
 499:../startup/startup_mk64f12.c **** 		SectionLen = *SectionTableAddr++;
 500:../startup/startup_mk64f12.c **** 		bss_init(ExeAddr, SectionLen);
 266              		.loc 1 500 3
 267 0026 5968     		ldr	r1, [r3, #4]
 268 0028 54F8080B 		ldr	r0, [r4], #8
 269 002c FFF7FEFF 		bl	bss_init
 499:../startup/startup_mk64f12.c **** 		SectionLen = *SectionTableAddr++;
 270              		.loc 1 499 33
 271 0030 2346     		mov	r3, r4
 272              	.L15:
 497:../startup/startup_mk64f12.c **** 		ExeAddr = *SectionTableAddr++;
 273              		.loc 1 497 8
 274 0032 054A     		ldr	r2, .L19+8
 275 0034 9342     		cmp	r3, r2
 276 0036 F5D3     		bcc	.L16
 501:../startup/startup_mk64f12.c **** 	}
 502:../startup/startup_mk64f12.c **** 
 503:../startup/startup_mk64f12.c **** #if !defined (__USE_CMSIS)
 504:../startup/startup_mk64f12.c **** // Assume that if __USE_CMSIS defined, then CMSIS SystemInit code
 505:../startup/startup_mk64f12.c **** // will enable the FPU
 506:../startup/startup_mk64f12.c **** #if defined (__VFP_FP__) && !defined (__SOFTFP__)
 507:../startup/startup_mk64f12.c ****     //
 508:../startup/startup_mk64f12.c ****     // Code to enable the Cortex-M4 FPU only included
 509:../startup/startup_mk64f12.c ****     // if appropriate build options have been selected.
 510:../startup/startup_mk64f12.c ****     // Code taken from Section 7.1, Cortex-M4 TRM (DDI0439C)
 511:../startup/startup_mk64f12.c ****     //
 512:../startup/startup_mk64f12.c ****     // Read CPACR (located at address 0xE000ED88)
 513:../startup/startup_mk64f12.c ****     // Set bits 20-23 to enable CP10 and CP11 coprocessors
 514:../startup/startup_mk64f12.c ****     // Write back the modified value to the CPACR
 515:../startup/startup_mk64f12.c **** 	asm volatile ("LDR.W R0, =0xE000ED88\n\t"
 516:../startup/startup_mk64f12.c ****                   "LDR R1, [R0]\n\t"
 517:../startup/startup_mk64f12.c ****                   "ORR R1, R1, #(0xF << 20)\n\t"
 518:../startup/startup_mk64f12.c ****                   "STR R1, [R0]");
 519:../startup/startup_mk64f12.c **** #endif // (__VFP_FP__) && !(__SOFTFP__)
 520:../startup/startup_mk64f12.c **** #endif // (__USE_CMSIS)
 521:../startup/startup_mk64f12.c **** 
 522:../startup/startup_mk64f12.c **** #if !defined (__USE_CMSIS)
 523:../startup/startup_mk64f12.c **** // Assume that if __USE_CMSIS defined, then CMSIS SystemInit code
 524:../startup/startup_mk64f12.c **** // will setup the VTOR register
 525:../startup/startup_mk64f12.c **** 
 526:../startup/startup_mk64f12.c ****     // Check to see if we are running the code from a non-zero
 527:../startup/startup_mk64f12.c ****     // address (eg RAM, external flash), in which case we need
 528:../startup/startup_mk64f12.c ****     // to modify the VTOR register to tell the CPU that the
 529:../startup/startup_mk64f12.c ****     // vector table is located at a non-0x0 address.
 530:../startup/startup_mk64f12.c ****     unsigned int * pSCB_VTOR = (unsigned int *) 0xE000ED08;
 531:../startup/startup_mk64f12.c ****     if ((unsigned int *)g_pfnVectors!=(unsigned int *) 0x00000000) {
 532:../startup/startup_mk64f12.c ****         *pSCB_VTOR = (unsigned int)g_pfnVectors;
 533:../startup/startup_mk64f12.c ****     }
 534:../startup/startup_mk64f12.c **** #endif // (__USE_CMSIS)
 535:../startup/startup_mk64f12.c **** 
 536:../startup/startup_mk64f12.c **** #if defined (__cplusplus)
 537:../startup/startup_mk64f12.c ****     //
 538:../startup/startup_mk64f12.c ****     // Call C++ library initialisation
 539:../startup/startup_mk64f12.c ****     //
 540:../startup/startup_mk64f12.c ****     __libc_init_array();
 541:../startup/startup_mk64f12.c **** #endif
 542:../startup/startup_mk64f12.c **** 
 543:../startup/startup_mk64f12.c ****     // Reenable interrupts
 544:../startup/startup_mk64f12.c ****     __asm volatile ("cpsie i");
 277              		.loc 1 544 5
 278              		.syntax unified
 279              	@ 544 "../startup/startup_mk64f12.c" 1
 280 0038 62B6     		cpsie i
 281              	@ 0 "" 2
 545:../startup/startup_mk64f12.c **** 
 546:../startup/startup_mk64f12.c **** #if defined (__REDLIB__)
 547:../startup/startup_mk64f12.c **** 	// Call the Redlib library, which in turn calls main()
 548:../startup/startup_mk64f12.c **** 	__main();
 282              		.loc 1 548 2
 283              		.thumb
 284              		.syntax unified
 285 003a FFF7FEFF 		bl	__main
 286              	.L17:
 287 003e FEE7     		b	.L17
 288              	.L20:
 289              		.align	2
 290              	.L19:
 291 0040 00000000 		.word	__data_section_table
 292 0044 00000000 		.word	__data_section_table_end
 293 0048 00000000 		.word	__bss_section_table_end
 294              		.cfi_endproc
 295              	.LFE2:
 297              		.section	.after_vectors,"ax",%progbits
 298              		.align	1
 299              		.weak	NMI_Handler
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu fpv4-sp-d16
 305              	NMI_Handler:
 306              	.LFB3:
 549:../startup/startup_mk64f12.c **** #else
 550:../startup/startup_mk64f12.c **** 	main();
 551:../startup/startup_mk64f12.c **** #endif
 552:../startup/startup_mk64f12.c **** 
 553:../startup/startup_mk64f12.c **** 	//
 554:../startup/startup_mk64f12.c **** 	// main() shouldn't return, but if it does, we'll just enter an infinite loop
 555:../startup/startup_mk64f12.c **** 	//
 556:../startup/startup_mk64f12.c **** 	while (1) {
 557:../startup/startup_mk64f12.c **** 		;
 558:../startup/startup_mk64f12.c **** 	}
 559:../startup/startup_mk64f12.c **** }
 560:../startup/startup_mk64f12.c **** 
 561:../startup/startup_mk64f12.c **** //*****************************************************************************
 562:../startup/startup_mk64f12.c **** // Default core exception handlers. Override the ones here by defining your own
 563:../startup/startup_mk64f12.c **** // handler routines in your application code.
 564:../startup/startup_mk64f12.c **** //*****************************************************************************
 565:../startup/startup_mk64f12.c **** WEAK_AV void NMI_Handler(void)
 566:../startup/startup_mk64f12.c **** { while(1) {}
 307              		.loc 1 566 1
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.L22:
 313 0000 FEE7     		b	.L22
 314              		.cfi_endproc
 315              	.LFE3:
 317              		.align	1
 318              		.weak	HardFault_Handler
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 322              		.fpu fpv4-sp-d16
 324              	HardFault_Handler:
 325              	.LFB4:
 567:../startup/startup_mk64f12.c **** }
 568:../startup/startup_mk64f12.c **** 
 569:../startup/startup_mk64f12.c **** WEAK_AV void HardFault_Handler(void)
 570:../startup/startup_mk64f12.c **** { while(1) {}
 326              		.loc 1 570 1
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.L24:
 332 0002 FEE7     		b	.L24
 333              		.cfi_endproc
 334              	.LFE4:
 336              		.align	1
 337              		.weak	MemManage_Handler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu fpv4-sp-d16
 343              	MemManage_Handler:
 344              	.LFB5:
 571:../startup/startup_mk64f12.c **** }
 572:../startup/startup_mk64f12.c **** 
 573:../startup/startup_mk64f12.c **** WEAK_AV void MemManage_Handler(void)
 574:../startup/startup_mk64f12.c **** { while(1) {}
 345              		.loc 1 574 1
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.L26:
 351 0004 FEE7     		b	.L26
 352              		.cfi_endproc
 353              	.LFE5:
 355              		.align	1
 356              		.weak	BusFault_Handler
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	BusFault_Handler:
 363              	.LFB6:
 575:../startup/startup_mk64f12.c **** }
 576:../startup/startup_mk64f12.c **** 
 577:../startup/startup_mk64f12.c **** WEAK_AV void BusFault_Handler(void)
 578:../startup/startup_mk64f12.c **** { while(1) {}
 364              		.loc 1 578 1
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369              	.L28:
 370 0006 FEE7     		b	.L28
 371              		.cfi_endproc
 372              	.LFE6:
 374              		.align	1
 375              		.weak	UsageFault_Handler
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv4-sp-d16
 381              	UsageFault_Handler:
 382              	.LFB7:
 579:../startup/startup_mk64f12.c **** }
 580:../startup/startup_mk64f12.c **** 
 581:../startup/startup_mk64f12.c **** WEAK_AV void UsageFault_Handler(void)
 582:../startup/startup_mk64f12.c **** { while(1) {}
 383              		.loc 1 582 1
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388              	.L30:
 389 0008 FEE7     		b	.L30
 390              		.cfi_endproc
 391              	.LFE7:
 393              		.align	1
 394              		.weak	SVC_Handler
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	SVC_Handler:
 401              	.LFB8:
 583:../startup/startup_mk64f12.c **** }
 584:../startup/startup_mk64f12.c **** 
 585:../startup/startup_mk64f12.c **** WEAK_AV void SVC_Handler(void)
 586:../startup/startup_mk64f12.c **** { while(1) {}
 402              		.loc 1 586 1
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407              	.L32:
 408 000a FEE7     		b	.L32
 409              		.cfi_endproc
 410              	.LFE8:
 412              		.align	1
 413              		.weak	DebugMon_Handler
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	DebugMon_Handler:
 420              	.LFB9:
 587:../startup/startup_mk64f12.c **** }
 588:../startup/startup_mk64f12.c **** 
 589:../startup/startup_mk64f12.c **** WEAK_AV void DebugMon_Handler(void)
 590:../startup/startup_mk64f12.c **** { while(1) {}
 421              		.loc 1 590 1
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.L34:
 427 000c FEE7     		b	.L34
 428              		.cfi_endproc
 429              	.LFE9:
 431              		.align	1
 432              		.weak	PendSV_Handler
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	PendSV_Handler:
 439              	.LFB10:
 591:../startup/startup_mk64f12.c **** }
 592:../startup/startup_mk64f12.c **** 
 593:../startup/startup_mk64f12.c **** WEAK_AV void PendSV_Handler(void)
 594:../startup/startup_mk64f12.c **** { while(1) {}
 440              		.loc 1 594 1
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.L36:
 446 000e FEE7     		b	.L36
 447              		.cfi_endproc
 448              	.LFE10:
 450              		.align	1
 451              		.weak	SysTick_Handler
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv4-sp-d16
 457              	SysTick_Handler:
 458              	.LFB11:
 595:../startup/startup_mk64f12.c **** }
 596:../startup/startup_mk64f12.c **** 
 597:../startup/startup_mk64f12.c **** WEAK_AV void SysTick_Handler(void)
 598:../startup/startup_mk64f12.c **** { while(1) {}
 459              		.loc 1 598 1
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 464              	.L38:
 465 0010 FEE7     		b	.L38
 466              		.cfi_endproc
 467              	.LFE11:
 469              		.align	1
 470              		.weak	IntDefaultHandler
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv4-sp-d16
 476              	IntDefaultHandler:
 477              	.LFB12:
 599:../startup/startup_mk64f12.c **** }
 600:../startup/startup_mk64f12.c **** 
 601:../startup/startup_mk64f12.c **** //*****************************************************************************
 602:../startup/startup_mk64f12.c **** // Processor ends up here if an unexpected interrupt occurs or a specific
 603:../startup/startup_mk64f12.c **** // handler is not present in the application code.
 604:../startup/startup_mk64f12.c **** //*****************************************************************************
 605:../startup/startup_mk64f12.c **** WEAK_AV void IntDefaultHandler(void)
 606:../startup/startup_mk64f12.c **** { while(1) {}
 478              		.loc 1 606 1
 479              		.cfi_startproc
 480              		@ Volatile: function does not return.
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              	.L40:
 485 0012 FEE7     		b	.L40
 486              		.cfi_endproc
 487              	.LFE12:
 489              		.weak	ENET_Error_DriverIRQHandler
 490              		.thumb_set ENET_Error_DriverIRQHandler,IntDefaultHandler
 491              		.weak	ENET_Receive_DriverIRQHandler
 492              		.thumb_set ENET_Receive_DriverIRQHandler,IntDefaultHandler
 493              		.weak	ENET_Transmit_DriverIRQHandler
 494              		.thumb_set ENET_Transmit_DriverIRQHandler,IntDefaultHandler
 495              		.weak	ENET_1588_Timer_DriverIRQHandler
 496              		.thumb_set ENET_1588_Timer_DriverIRQHandler,IntDefaultHandler
 497              		.weak	SDHC_DriverIRQHandler
 498              		.thumb_set SDHC_DriverIRQHandler,IntDefaultHandler
 499              		.weak	CAN0_DriverIRQHandler
 500              		.thumb_set CAN0_DriverIRQHandler,IntDefaultHandler
 501              		.weak	I2C2_DriverIRQHandler
 502              		.thumb_set I2C2_DriverIRQHandler,IntDefaultHandler
 503              		.weak	ADC1_DriverIRQHandler
 504              		.thumb_set ADC1_DriverIRQHandler,IntDefaultHandler
 505              		.weak	DAC1_DriverIRQHandler
 506              		.thumb_set DAC1_DriverIRQHandler,IntDefaultHandler
 507              		.weak	FTM3_DriverIRQHandler
 508              		.thumb_set FTM3_DriverIRQHandler,IntDefaultHandler
 509              		.weak	CMP2_DriverIRQHandler
 510              		.thumb_set CMP2_DriverIRQHandler,IntDefaultHandler
 511              		.weak	UART5_ERR_DriverIRQHandler
 512              		.thumb_set UART5_ERR_DriverIRQHandler,IntDefaultHandler
 513              		.weak	UART5_RX_TX_DriverIRQHandler
 514              		.thumb_set UART5_RX_TX_DriverIRQHandler,IntDefaultHandler
 515              		.weak	UART4_ERR_DriverIRQHandler
 516              		.thumb_set UART4_ERR_DriverIRQHandler,IntDefaultHandler
 517              		.weak	UART4_RX_TX_DriverIRQHandler
 518              		.thumb_set UART4_RX_TX_DriverIRQHandler,IntDefaultHandler
 519              		.weak	SPI2_DriverIRQHandler
 520              		.thumb_set SPI2_DriverIRQHandler,IntDefaultHandler
 521              		.weak	SWI_DriverIRQHandler
 522              		.thumb_set SWI_DriverIRQHandler,IntDefaultHandler
 523              		.weak	PORTE_DriverIRQHandler
 524              		.thumb_set PORTE_DriverIRQHandler,IntDefaultHandler
 525              		.weak	PORTD_DriverIRQHandler
 526              		.thumb_set PORTD_DriverIRQHandler,IntDefaultHandler
 527              		.weak	PORTC_DriverIRQHandler
 528              		.thumb_set PORTC_DriverIRQHandler,IntDefaultHandler
 529              		.weak	PORTB_DriverIRQHandler
 530              		.thumb_set PORTB_DriverIRQHandler,IntDefaultHandler
 531              		.weak	PORTA_DriverIRQHandler
 532              		.thumb_set PORTA_DriverIRQHandler,IntDefaultHandler
 533              		.weak	LPTMR0_DriverIRQHandler
 534              		.thumb_set LPTMR0_DriverIRQHandler,IntDefaultHandler
 535              		.weak	MCG_DriverIRQHandler
 536              		.thumb_set MCG_DriverIRQHandler,IntDefaultHandler
 537              		.weak	DAC0_DriverIRQHandler
 538              		.thumb_set DAC0_DriverIRQHandler,IntDefaultHandler
 539              		.weak	Reserved71_DriverIRQHandler
 540              		.thumb_set Reserved71_DriverIRQHandler,IntDefaultHandler
 541              		.weak	USBDCD_DriverIRQHandler
 542              		.thumb_set USBDCD_DriverIRQHandler,IntDefaultHandler
 543              		.weak	USB0_DriverIRQHandler
 544              		.thumb_set USB0_DriverIRQHandler,IntDefaultHandler
 545              		.weak	PDB0_DriverIRQHandler
 546              		.thumb_set PDB0_DriverIRQHandler,IntDefaultHandler
 547              		.weak	PIT3_DriverIRQHandler
 548              		.thumb_set PIT3_DriverIRQHandler,IntDefaultHandler
 549              		.weak	PIT2_DriverIRQHandler
 550              		.thumb_set PIT2_DriverIRQHandler,IntDefaultHandler
 551              		.weak	PIT1_DriverIRQHandler
 552              		.thumb_set PIT1_DriverIRQHandler,IntDefaultHandler
 553              		.weak	PIT0_DriverIRQHandler
 554              		.thumb_set PIT0_DriverIRQHandler,IntDefaultHandler
 555              		.weak	RTC_Seconds_DriverIRQHandler
 556              		.thumb_set RTC_Seconds_DriverIRQHandler,IntDefaultHandler
 557              		.weak	RTC_DriverIRQHandler
 558              		.thumb_set RTC_DriverIRQHandler,IntDefaultHandler
 559              		.weak	CMT_DriverIRQHandler
 560              		.thumb_set CMT_DriverIRQHandler,IntDefaultHandler
 561              		.weak	FTM2_DriverIRQHandler
 562              		.thumb_set FTM2_DriverIRQHandler,IntDefaultHandler
 563              		.weak	FTM1_DriverIRQHandler
 564              		.thumb_set FTM1_DriverIRQHandler,IntDefaultHandler
 565              		.weak	FTM0_DriverIRQHandler
 566              		.thumb_set FTM0_DriverIRQHandler,IntDefaultHandler
 567              		.weak	CMP1_DriverIRQHandler
 568              		.thumb_set CMP1_DriverIRQHandler,IntDefaultHandler
 569              		.weak	CMP0_DriverIRQHandler
 570              		.thumb_set CMP0_DriverIRQHandler,IntDefaultHandler
 571              		.weak	ADC0_DriverIRQHandler
 572              		.thumb_set ADC0_DriverIRQHandler,IntDefaultHandler
 573              		.weak	UART3_ERR_DriverIRQHandler
 574              		.thumb_set UART3_ERR_DriverIRQHandler,IntDefaultHandler
 575              		.weak	UART3_RX_TX_DriverIRQHandler
 576              		.thumb_set UART3_RX_TX_DriverIRQHandler,IntDefaultHandler
 577              		.weak	UART2_ERR_DriverIRQHandler
 578              		.thumb_set UART2_ERR_DriverIRQHandler,IntDefaultHandler
 579              		.weak	UART2_RX_TX_DriverIRQHandler
 580              		.thumb_set UART2_RX_TX_DriverIRQHandler,IntDefaultHandler
 581              		.weak	UART1_ERR_DriverIRQHandler
 582              		.thumb_set UART1_ERR_DriverIRQHandler,IntDefaultHandler
 583              		.weak	UART1_RX_TX_DriverIRQHandler
 584              		.thumb_set UART1_RX_TX_DriverIRQHandler,IntDefaultHandler
 585              		.weak	UART0_ERR_DriverIRQHandler
 586              		.thumb_set UART0_ERR_DriverIRQHandler,IntDefaultHandler
 587              		.weak	UART0_RX_TX_DriverIRQHandler
 588              		.thumb_set UART0_RX_TX_DriverIRQHandler,IntDefaultHandler
 589              		.weak	UART0_LON_DriverIRQHandler
 590              		.thumb_set UART0_LON_DriverIRQHandler,IntDefaultHandler
 591              		.weak	I2S0_Rx_DriverIRQHandler
 592              		.thumb_set I2S0_Rx_DriverIRQHandler,IntDefaultHandler
 593              		.weak	I2S0_Tx_DriverIRQHandler
 594              		.thumb_set I2S0_Tx_DriverIRQHandler,IntDefaultHandler
 595              		.weak	SPI1_DriverIRQHandler
 596              		.thumb_set SPI1_DriverIRQHandler,IntDefaultHandler
 597              		.weak	SPI0_DriverIRQHandler
 598              		.thumb_set SPI0_DriverIRQHandler,IntDefaultHandler
 599              		.weak	I2C1_DriverIRQHandler
 600              		.thumb_set I2C1_DriverIRQHandler,IntDefaultHandler
 601              		.weak	I2C0_DriverIRQHandler
 602              		.thumb_set I2C0_DriverIRQHandler,IntDefaultHandler
 603              		.weak	RNG_DriverIRQHandler
 604              		.thumb_set RNG_DriverIRQHandler,IntDefaultHandler
 605              		.weak	WDOG_EWM_DriverIRQHandler
 606              		.thumb_set WDOG_EWM_DriverIRQHandler,IntDefaultHandler
 607              		.weak	LLWU_DriverIRQHandler
 608              		.thumb_set LLWU_DriverIRQHandler,IntDefaultHandler
 609              		.weak	LVD_LVW_DriverIRQHandler
 610              		.thumb_set LVD_LVW_DriverIRQHandler,IntDefaultHandler
 611              		.weak	Read_Collision_DriverIRQHandler
 612              		.thumb_set Read_Collision_DriverIRQHandler,IntDefaultHandler
 613              		.weak	FTFE_DriverIRQHandler
 614              		.thumb_set FTFE_DriverIRQHandler,IntDefaultHandler
 615              		.weak	MCM_DriverIRQHandler
 616              		.thumb_set MCM_DriverIRQHandler,IntDefaultHandler
 617              		.weak	DMA_Error_DriverIRQHandler
 618              		.thumb_set DMA_Error_DriverIRQHandler,IntDefaultHandler
 619              		.weak	DMA15_DriverIRQHandler
 620              		.thumb_set DMA15_DriverIRQHandler,IntDefaultHandler
 621              		.weak	DMA14_DriverIRQHandler
 622              		.thumb_set DMA14_DriverIRQHandler,IntDefaultHandler
 623              		.weak	DMA13_DriverIRQHandler
 624              		.thumb_set DMA13_DriverIRQHandler,IntDefaultHandler
 625              		.weak	DMA12_DriverIRQHandler
 626              		.thumb_set DMA12_DriverIRQHandler,IntDefaultHandler
 627              		.weak	DMA11_DriverIRQHandler
 628              		.thumb_set DMA11_DriverIRQHandler,IntDefaultHandler
 629              		.weak	DMA10_DriverIRQHandler
 630              		.thumb_set DMA10_DriverIRQHandler,IntDefaultHandler
 631              		.weak	DMA9_DriverIRQHandler
 632              		.thumb_set DMA9_DriverIRQHandler,IntDefaultHandler
 633              		.weak	DMA8_DriverIRQHandler
 634              		.thumb_set DMA8_DriverIRQHandler,IntDefaultHandler
 635              		.weak	DMA7_DriverIRQHandler
 636              		.thumb_set DMA7_DriverIRQHandler,IntDefaultHandler
 637              		.weak	DMA6_DriverIRQHandler
 638              		.thumb_set DMA6_DriverIRQHandler,IntDefaultHandler
 639              		.weak	DMA5_DriverIRQHandler
 640              		.thumb_set DMA5_DriverIRQHandler,IntDefaultHandler
 641              		.weak	DMA4_DriverIRQHandler
 642              		.thumb_set DMA4_DriverIRQHandler,IntDefaultHandler
 643              		.weak	DMA3_DriverIRQHandler
 644              		.thumb_set DMA3_DriverIRQHandler,IntDefaultHandler
 645              		.weak	DMA2_DriverIRQHandler
 646              		.thumb_set DMA2_DriverIRQHandler,IntDefaultHandler
 647              		.weak	DMA1_DriverIRQHandler
 648              		.thumb_set DMA1_DriverIRQHandler,IntDefaultHandler
 649              		.weak	DMA0_DriverIRQHandler
 650              		.thumb_set DMA0_DriverIRQHandler,IntDefaultHandler
 651              		.section	.text.DMA0_IRQHandler,"ax",%progbits
 652              		.align	1
 653              		.weak	DMA0_IRQHandler
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	DMA0_IRQHandler:
 660              	.LFB13:
 607:../startup/startup_mk64f12.c **** }
 608:../startup/startup_mk64f12.c **** 
 609:../startup/startup_mk64f12.c **** //*****************************************************************************
 610:../startup/startup_mk64f12.c **** // Default application exception handlers. Override the ones here by defining
 611:../startup/startup_mk64f12.c **** // your own handler routines in your application code. These routines call
 612:../startup/startup_mk64f12.c **** // driver exception handlers or IntDefaultHandler() if no driver exception
 613:../startup/startup_mk64f12.c **** // handler is included.
 614:../startup/startup_mk64f12.c **** //*****************************************************************************
 615:../startup/startup_mk64f12.c **** WEAK void DMA0_IRQHandler(void)
 616:../startup/startup_mk64f12.c **** {   DMA0_DriverIRQHandler();
 661              		.loc 1 616 1
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		.loc 1 616 1
 666 0000 08B5     		push	{r3, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 3, -8
 669              		.cfi_offset 14, -4
 670              		.loc 1 616 5
 671 0002 FFF7FEFF 		bl	DMA0_DriverIRQHandler
 617:../startup/startup_mk64f12.c **** }
 672              		.loc 1 617 1
 673 0006 08BD     		pop	{r3, pc}
 674              		.cfi_endproc
 675              	.LFE13:
 677              		.section	.text.DMA1_IRQHandler,"ax",%progbits
 678              		.align	1
 679              		.weak	DMA1_IRQHandler
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv4-sp-d16
 685              	DMA1_IRQHandler:
 686              	.LFB14:
 618:../startup/startup_mk64f12.c **** 
 619:../startup/startup_mk64f12.c **** WEAK void DMA1_IRQHandler(void)
 620:../startup/startup_mk64f12.c **** {   DMA1_DriverIRQHandler();
 687              		.loc 1 620 1
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691 0000 08B5     		push	{r3, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 3, -8
 694              		.cfi_offset 14, -4
 695              		.loc 1 620 5
 696 0002 FFF7FEFF 		bl	DMA1_DriverIRQHandler
 621:../startup/startup_mk64f12.c **** }
 697              		.loc 1 621 1
 698 0006 08BD     		pop	{r3, pc}
 699              		.cfi_endproc
 700              	.LFE14:
 702              		.section	.text.DMA2_IRQHandler,"ax",%progbits
 703              		.align	1
 704              		.weak	DMA2_IRQHandler
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	DMA2_IRQHandler:
 711              	.LFB15:
 622:../startup/startup_mk64f12.c **** 
 623:../startup/startup_mk64f12.c **** WEAK void DMA2_IRQHandler(void)
 624:../startup/startup_mk64f12.c **** {   DMA2_DriverIRQHandler();
 712              		.loc 1 624 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716 0000 08B5     		push	{r3, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 3, -8
 719              		.cfi_offset 14, -4
 720              		.loc 1 624 5
 721 0002 FFF7FEFF 		bl	DMA2_DriverIRQHandler
 625:../startup/startup_mk64f12.c **** }
 722              		.loc 1 625 1
 723 0006 08BD     		pop	{r3, pc}
 724              		.cfi_endproc
 725              	.LFE15:
 727              		.section	.text.DMA3_IRQHandler,"ax",%progbits
 728              		.align	1
 729              		.weak	DMA3_IRQHandler
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu fpv4-sp-d16
 735              	DMA3_IRQHandler:
 736              	.LFB16:
 626:../startup/startup_mk64f12.c **** 
 627:../startup/startup_mk64f12.c **** WEAK void DMA3_IRQHandler(void)
 628:../startup/startup_mk64f12.c **** {   DMA3_DriverIRQHandler();
 737              		.loc 1 628 1
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741 0000 08B5     		push	{r3, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 3, -8
 744              		.cfi_offset 14, -4
 745              		.loc 1 628 5
 746 0002 FFF7FEFF 		bl	DMA3_DriverIRQHandler
 629:../startup/startup_mk64f12.c **** }
 747              		.loc 1 629 1
 748 0006 08BD     		pop	{r3, pc}
 749              		.cfi_endproc
 750              	.LFE16:
 752              		.section	.text.DMA4_IRQHandler,"ax",%progbits
 753              		.align	1
 754              		.weak	DMA4_IRQHandler
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu fpv4-sp-d16
 760              	DMA4_IRQHandler:
 761              	.LFB17:
 630:../startup/startup_mk64f12.c **** 
 631:../startup/startup_mk64f12.c **** WEAK void DMA4_IRQHandler(void)
 632:../startup/startup_mk64f12.c **** {   DMA4_DriverIRQHandler();
 762              		.loc 1 632 1
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766 0000 08B5     		push	{r3, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 3, -8
 769              		.cfi_offset 14, -4
 770              		.loc 1 632 5
 771 0002 FFF7FEFF 		bl	DMA4_DriverIRQHandler
 633:../startup/startup_mk64f12.c **** }
 772              		.loc 1 633 1
 773 0006 08BD     		pop	{r3, pc}
 774              		.cfi_endproc
 775              	.LFE17:
 777              		.section	.text.DMA5_IRQHandler,"ax",%progbits
 778              		.align	1
 779              		.weak	DMA5_IRQHandler
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	DMA5_IRQHandler:
 786              	.LFB18:
 634:../startup/startup_mk64f12.c **** 
 635:../startup/startup_mk64f12.c **** WEAK void DMA5_IRQHandler(void)
 636:../startup/startup_mk64f12.c **** {   DMA5_DriverIRQHandler();
 787              		.loc 1 636 1
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791 0000 08B5     		push	{r3, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 3, -8
 794              		.cfi_offset 14, -4
 795              		.loc 1 636 5
 796 0002 FFF7FEFF 		bl	DMA5_DriverIRQHandler
 637:../startup/startup_mk64f12.c **** }
 797              		.loc 1 637 1
 798 0006 08BD     		pop	{r3, pc}
 799              		.cfi_endproc
 800              	.LFE18:
 802              		.section	.text.DMA6_IRQHandler,"ax",%progbits
 803              		.align	1
 804              		.weak	DMA6_IRQHandler
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv4-sp-d16
 810              	DMA6_IRQHandler:
 811              	.LFB19:
 638:../startup/startup_mk64f12.c **** 
 639:../startup/startup_mk64f12.c **** WEAK void DMA6_IRQHandler(void)
 640:../startup/startup_mk64f12.c **** {   DMA6_DriverIRQHandler();
 812              		.loc 1 640 1
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816 0000 08B5     		push	{r3, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 3, -8
 819              		.cfi_offset 14, -4
 820              		.loc 1 640 5
 821 0002 FFF7FEFF 		bl	DMA6_DriverIRQHandler
 641:../startup/startup_mk64f12.c **** }
 822              		.loc 1 641 1
 823 0006 08BD     		pop	{r3, pc}
 824              		.cfi_endproc
 825              	.LFE19:
 827              		.section	.text.DMA7_IRQHandler,"ax",%progbits
 828              		.align	1
 829              		.weak	DMA7_IRQHandler
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu fpv4-sp-d16
 835              	DMA7_IRQHandler:
 836              	.LFB20:
 642:../startup/startup_mk64f12.c **** 
 643:../startup/startup_mk64f12.c **** WEAK void DMA7_IRQHandler(void)
 644:../startup/startup_mk64f12.c **** {   DMA7_DriverIRQHandler();
 837              		.loc 1 644 1
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841 0000 08B5     		push	{r3, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 3, -8
 844              		.cfi_offset 14, -4
 845              		.loc 1 644 5
 846 0002 FFF7FEFF 		bl	DMA7_DriverIRQHandler
 645:../startup/startup_mk64f12.c **** }
 847              		.loc 1 645 1
 848 0006 08BD     		pop	{r3, pc}
 849              		.cfi_endproc
 850              	.LFE20:
 852              		.section	.text.DMA8_IRQHandler,"ax",%progbits
 853              		.align	1
 854              		.weak	DMA8_IRQHandler
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv4-sp-d16
 860              	DMA8_IRQHandler:
 861              	.LFB21:
 646:../startup/startup_mk64f12.c **** 
 647:../startup/startup_mk64f12.c **** WEAK void DMA8_IRQHandler(void)
 648:../startup/startup_mk64f12.c **** {   DMA8_DriverIRQHandler();
 862              		.loc 1 648 1
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866 0000 08B5     		push	{r3, lr}
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 3, -8
 869              		.cfi_offset 14, -4
 870              		.loc 1 648 5
 871 0002 FFF7FEFF 		bl	DMA8_DriverIRQHandler
 649:../startup/startup_mk64f12.c **** }
 872              		.loc 1 649 1
 873 0006 08BD     		pop	{r3, pc}
 874              		.cfi_endproc
 875              	.LFE21:
 877              		.section	.text.DMA9_IRQHandler,"ax",%progbits
 878              		.align	1
 879              		.weak	DMA9_IRQHandler
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv4-sp-d16
 885              	DMA9_IRQHandler:
 886              	.LFB22:
 650:../startup/startup_mk64f12.c **** 
 651:../startup/startup_mk64f12.c **** WEAK void DMA9_IRQHandler(void)
 652:../startup/startup_mk64f12.c **** {   DMA9_DriverIRQHandler();
 887              		.loc 1 652 1
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891 0000 08B5     		push	{r3, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 3, -8
 894              		.cfi_offset 14, -4
 895              		.loc 1 652 5
 896 0002 FFF7FEFF 		bl	DMA9_DriverIRQHandler
 653:../startup/startup_mk64f12.c **** }
 897              		.loc 1 653 1
 898 0006 08BD     		pop	{r3, pc}
 899              		.cfi_endproc
 900              	.LFE22:
 902              		.section	.text.DMA10_IRQHandler,"ax",%progbits
 903              		.align	1
 904              		.weak	DMA10_IRQHandler
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu fpv4-sp-d16
 910              	DMA10_IRQHandler:
 911              	.LFB23:
 654:../startup/startup_mk64f12.c **** 
 655:../startup/startup_mk64f12.c **** WEAK void DMA10_IRQHandler(void)
 656:../startup/startup_mk64f12.c **** {   DMA10_DriverIRQHandler();
 912              		.loc 1 656 1
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916 0000 08B5     		push	{r3, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 3, -8
 919              		.cfi_offset 14, -4
 920              		.loc 1 656 5
 921 0002 FFF7FEFF 		bl	DMA10_DriverIRQHandler
 657:../startup/startup_mk64f12.c **** }
 922              		.loc 1 657 1
 923 0006 08BD     		pop	{r3, pc}
 924              		.cfi_endproc
 925              	.LFE23:
 927              		.section	.text.DMA11_IRQHandler,"ax",%progbits
 928              		.align	1
 929              		.weak	DMA11_IRQHandler
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv4-sp-d16
 935              	DMA11_IRQHandler:
 936              	.LFB24:
 658:../startup/startup_mk64f12.c **** 
 659:../startup/startup_mk64f12.c **** WEAK void DMA11_IRQHandler(void)
 660:../startup/startup_mk64f12.c **** {   DMA11_DriverIRQHandler();
 937              		.loc 1 660 1
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941 0000 08B5     		push	{r3, lr}
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 3, -8
 944              		.cfi_offset 14, -4
 945              		.loc 1 660 5
 946 0002 FFF7FEFF 		bl	DMA11_DriverIRQHandler
 661:../startup/startup_mk64f12.c **** }
 947              		.loc 1 661 1
 948 0006 08BD     		pop	{r3, pc}
 949              		.cfi_endproc
 950              	.LFE24:
 952              		.section	.text.DMA12_IRQHandler,"ax",%progbits
 953              		.align	1
 954              		.weak	DMA12_IRQHandler
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	DMA12_IRQHandler:
 961              	.LFB25:
 662:../startup/startup_mk64f12.c **** 
 663:../startup/startup_mk64f12.c **** WEAK void DMA12_IRQHandler(void)
 664:../startup/startup_mk64f12.c **** {   DMA12_DriverIRQHandler();
 962              		.loc 1 664 1
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966 0000 08B5     		push	{r3, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 3, -8
 969              		.cfi_offset 14, -4
 970              		.loc 1 664 5
 971 0002 FFF7FEFF 		bl	DMA12_DriverIRQHandler
 665:../startup/startup_mk64f12.c **** }
 972              		.loc 1 665 1
 973 0006 08BD     		pop	{r3, pc}
 974              		.cfi_endproc
 975              	.LFE25:
 977              		.section	.text.DMA13_IRQHandler,"ax",%progbits
 978              		.align	1
 979              		.weak	DMA13_IRQHandler
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu fpv4-sp-d16
 985              	DMA13_IRQHandler:
 986              	.LFB26:
 666:../startup/startup_mk64f12.c **** 
 667:../startup/startup_mk64f12.c **** WEAK void DMA13_IRQHandler(void)
 668:../startup/startup_mk64f12.c **** {   DMA13_DriverIRQHandler();
 987              		.loc 1 668 1
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991 0000 08B5     		push	{r3, lr}
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 3, -8
 994              		.cfi_offset 14, -4
 995              		.loc 1 668 5
 996 0002 FFF7FEFF 		bl	DMA13_DriverIRQHandler
 669:../startup/startup_mk64f12.c **** }
 997              		.loc 1 669 1
 998 0006 08BD     		pop	{r3, pc}
 999              		.cfi_endproc
 1000              	.LFE26:
 1002              		.section	.text.DMA14_IRQHandler,"ax",%progbits
 1003              		.align	1
 1004              		.weak	DMA14_IRQHandler
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv4-sp-d16
 1010              	DMA14_IRQHandler:
 1011              	.LFB27:
 670:../startup/startup_mk64f12.c **** 
 671:../startup/startup_mk64f12.c **** WEAK void DMA14_IRQHandler(void)
 672:../startup/startup_mk64f12.c **** {   DMA14_DriverIRQHandler();
 1012              		.loc 1 672 1
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016 0000 08B5     		push	{r3, lr}
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 3, -8
 1019              		.cfi_offset 14, -4
 1020              		.loc 1 672 5
 1021 0002 FFF7FEFF 		bl	DMA14_DriverIRQHandler
 673:../startup/startup_mk64f12.c **** }
 1022              		.loc 1 673 1
 1023 0006 08BD     		pop	{r3, pc}
 1024              		.cfi_endproc
 1025              	.LFE27:
 1027              		.section	.text.DMA15_IRQHandler,"ax",%progbits
 1028              		.align	1
 1029              		.weak	DMA15_IRQHandler
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1033              		.fpu fpv4-sp-d16
 1035              	DMA15_IRQHandler:
 1036              	.LFB28:
 674:../startup/startup_mk64f12.c **** 
 675:../startup/startup_mk64f12.c **** WEAK void DMA15_IRQHandler(void)
 676:../startup/startup_mk64f12.c **** {   DMA15_DriverIRQHandler();
 1037              		.loc 1 676 1
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041 0000 08B5     		push	{r3, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 3, -8
 1044              		.cfi_offset 14, -4
 1045              		.loc 1 676 5
 1046 0002 FFF7FEFF 		bl	DMA15_DriverIRQHandler
 677:../startup/startup_mk64f12.c **** }
 1047              		.loc 1 677 1
 1048 0006 08BD     		pop	{r3, pc}
 1049              		.cfi_endproc
 1050              	.LFE28:
 1052              		.section	.text.DMA_Error_IRQHandler,"ax",%progbits
 1053              		.align	1
 1054              		.weak	DMA_Error_IRQHandler
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1058              		.fpu fpv4-sp-d16
 1060              	DMA_Error_IRQHandler:
 1061              	.LFB29:
 678:../startup/startup_mk64f12.c **** 
 679:../startup/startup_mk64f12.c **** WEAK void DMA_Error_IRQHandler(void)
 680:../startup/startup_mk64f12.c **** {   DMA_Error_DriverIRQHandler();
 1062              		.loc 1 680 1
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066 0000 08B5     		push	{r3, lr}
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 3, -8
 1069              		.cfi_offset 14, -4
 1070              		.loc 1 680 5
 1071 0002 FFF7FEFF 		bl	DMA_Error_DriverIRQHandler
 681:../startup/startup_mk64f12.c **** }
 1072              		.loc 1 681 1
 1073 0006 08BD     		pop	{r3, pc}
 1074              		.cfi_endproc
 1075              	.LFE29:
 1077              		.section	.text.MCM_IRQHandler,"ax",%progbits
 1078              		.align	1
 1079              		.weak	MCM_IRQHandler
 1080              		.syntax unified
 1081              		.thumb
 1082              		.thumb_func
 1083              		.fpu fpv4-sp-d16
 1085              	MCM_IRQHandler:
 1086              	.LFB30:
 682:../startup/startup_mk64f12.c **** 
 683:../startup/startup_mk64f12.c **** WEAK void MCM_IRQHandler(void)
 684:../startup/startup_mk64f12.c **** {   MCM_DriverIRQHandler();
 1087              		.loc 1 684 1
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091 0000 08B5     		push	{r3, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
 1095              		.loc 1 684 5
 1096 0002 FFF7FEFF 		bl	MCM_DriverIRQHandler
 685:../startup/startup_mk64f12.c **** }
 1097              		.loc 1 685 1
 1098 0006 08BD     		pop	{r3, pc}
 1099              		.cfi_endproc
 1100              	.LFE30:
 1102              		.section	.text.FTFE_IRQHandler,"ax",%progbits
 1103              		.align	1
 1104              		.weak	FTFE_IRQHandler
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv4-sp-d16
 1110              	FTFE_IRQHandler:
 1111              	.LFB31:
 686:../startup/startup_mk64f12.c **** 
 687:../startup/startup_mk64f12.c **** WEAK void FTFE_IRQHandler(void)
 688:../startup/startup_mk64f12.c **** {   FTFE_DriverIRQHandler();
 1112              		.loc 1 688 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116 0000 08B5     		push	{r3, lr}
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 3, -8
 1119              		.cfi_offset 14, -4
 1120              		.loc 1 688 5
 1121 0002 FFF7FEFF 		bl	FTFE_DriverIRQHandler
 689:../startup/startup_mk64f12.c **** }
 1122              		.loc 1 689 1
 1123 0006 08BD     		pop	{r3, pc}
 1124              		.cfi_endproc
 1125              	.LFE31:
 1127              		.section	.text.Read_Collision_IRQHandler,"ax",%progbits
 1128              		.align	1
 1129              		.weak	Read_Collision_IRQHandler
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1133              		.fpu fpv4-sp-d16
 1135              	Read_Collision_IRQHandler:
 1136              	.LFB32:
 690:../startup/startup_mk64f12.c **** 
 691:../startup/startup_mk64f12.c **** WEAK void Read_Collision_IRQHandler(void)
 692:../startup/startup_mk64f12.c **** {   Read_Collision_DriverIRQHandler();
 1137              		.loc 1 692 1
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141 0000 08B5     		push	{r3, lr}
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 3, -8
 1144              		.cfi_offset 14, -4
 1145              		.loc 1 692 5
 1146 0002 FFF7FEFF 		bl	Read_Collision_DriverIRQHandler
 693:../startup/startup_mk64f12.c **** }
 1147              		.loc 1 693 1
 1148 0006 08BD     		pop	{r3, pc}
 1149              		.cfi_endproc
 1150              	.LFE32:
 1152              		.section	.text.LVD_LVW_IRQHandler,"ax",%progbits
 1153              		.align	1
 1154              		.weak	LVD_LVW_IRQHandler
 1155              		.syntax unified
 1156              		.thumb
 1157              		.thumb_func
 1158              		.fpu fpv4-sp-d16
 1160              	LVD_LVW_IRQHandler:
 1161              	.LFB33:
 694:../startup/startup_mk64f12.c **** 
 695:../startup/startup_mk64f12.c **** WEAK void LVD_LVW_IRQHandler(void)
 696:../startup/startup_mk64f12.c **** {   LVD_LVW_DriverIRQHandler();
 1162              		.loc 1 696 1
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166 0000 08B5     		push	{r3, lr}
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 3, -8
 1169              		.cfi_offset 14, -4
 1170              		.loc 1 696 5
 1171 0002 FFF7FEFF 		bl	LVD_LVW_DriverIRQHandler
 697:../startup/startup_mk64f12.c **** }
 1172              		.loc 1 697 1
 1173 0006 08BD     		pop	{r3, pc}
 1174              		.cfi_endproc
 1175              	.LFE33:
 1177              		.section	.text.LLWU_IRQHandler,"ax",%progbits
 1178              		.align	1
 1179              		.weak	LLWU_IRQHandler
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv4-sp-d16
 1185              	LLWU_IRQHandler:
 1186              	.LFB34:
 698:../startup/startup_mk64f12.c **** 
 699:../startup/startup_mk64f12.c **** WEAK void LLWU_IRQHandler(void)
 700:../startup/startup_mk64f12.c **** {   LLWU_DriverIRQHandler();
 1187              		.loc 1 700 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191 0000 08B5     		push	{r3, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 3, -8
 1194              		.cfi_offset 14, -4
 1195              		.loc 1 700 5
 1196 0002 FFF7FEFF 		bl	LLWU_DriverIRQHandler
 701:../startup/startup_mk64f12.c **** }
 1197              		.loc 1 701 1
 1198 0006 08BD     		pop	{r3, pc}
 1199              		.cfi_endproc
 1200              	.LFE34:
 1202              		.section	.text.WDOG_EWM_IRQHandler,"ax",%progbits
 1203              		.align	1
 1204              		.weak	WDOG_EWM_IRQHandler
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	WDOG_EWM_IRQHandler:
 1211              	.LFB35:
 702:../startup/startup_mk64f12.c **** 
 703:../startup/startup_mk64f12.c **** WEAK void WDOG_EWM_IRQHandler(void)
 704:../startup/startup_mk64f12.c **** {   WDOG_EWM_DriverIRQHandler();
 1212              		.loc 1 704 1
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216 0000 08B5     		push	{r3, lr}
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 3, -8
 1219              		.cfi_offset 14, -4
 1220              		.loc 1 704 5
 1221 0002 FFF7FEFF 		bl	WDOG_EWM_DriverIRQHandler
 705:../startup/startup_mk64f12.c **** }
 1222              		.loc 1 705 1
 1223 0006 08BD     		pop	{r3, pc}
 1224              		.cfi_endproc
 1225              	.LFE35:
 1227              		.section	.text.RNG_IRQHandler,"ax",%progbits
 1228              		.align	1
 1229              		.weak	RNG_IRQHandler
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	RNG_IRQHandler:
 1236              	.LFB36:
 706:../startup/startup_mk64f12.c **** 
 707:../startup/startup_mk64f12.c **** WEAK void RNG_IRQHandler(void)
 708:../startup/startup_mk64f12.c **** {   RNG_DriverIRQHandler();
 1237              		.loc 1 708 1
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241 0000 08B5     		push	{r3, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 3, -8
 1244              		.cfi_offset 14, -4
 1245              		.loc 1 708 5
 1246 0002 FFF7FEFF 		bl	RNG_DriverIRQHandler
 709:../startup/startup_mk64f12.c **** }
 1247              		.loc 1 709 1
 1248 0006 08BD     		pop	{r3, pc}
 1249              		.cfi_endproc
 1250              	.LFE36:
 1252              		.section	.text.I2C0_IRQHandler,"ax",%progbits
 1253              		.align	1
 1254              		.weak	I2C0_IRQHandler
 1255              		.syntax unified
 1256              		.thumb
 1257              		.thumb_func
 1258              		.fpu fpv4-sp-d16
 1260              	I2C0_IRQHandler:
 1261              	.LFB37:
 710:../startup/startup_mk64f12.c **** 
 711:../startup/startup_mk64f12.c **** WEAK void I2C0_IRQHandler(void)
 712:../startup/startup_mk64f12.c **** {   I2C0_DriverIRQHandler();
 1262              		.loc 1 712 1
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266 0000 08B5     		push	{r3, lr}
 1267              		.cfi_def_cfa_offset 8
 1268              		.cfi_offset 3, -8
 1269              		.cfi_offset 14, -4
 1270              		.loc 1 712 5
 1271 0002 FFF7FEFF 		bl	I2C0_DriverIRQHandler
 713:../startup/startup_mk64f12.c **** }
 1272              		.loc 1 713 1
 1273 0006 08BD     		pop	{r3, pc}
 1274              		.cfi_endproc
 1275              	.LFE37:
 1277              		.section	.text.I2C1_IRQHandler,"ax",%progbits
 1278              		.align	1
 1279              		.weak	I2C1_IRQHandler
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1283              		.fpu fpv4-sp-d16
 1285              	I2C1_IRQHandler:
 1286              	.LFB38:
 714:../startup/startup_mk64f12.c **** 
 715:../startup/startup_mk64f12.c **** WEAK void I2C1_IRQHandler(void)
 716:../startup/startup_mk64f12.c **** {   I2C1_DriverIRQHandler();
 1287              		.loc 1 716 1
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291 0000 08B5     		push	{r3, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 3, -8
 1294              		.cfi_offset 14, -4
 1295              		.loc 1 716 5
 1296 0002 FFF7FEFF 		bl	I2C1_DriverIRQHandler
 717:../startup/startup_mk64f12.c **** }
 1297              		.loc 1 717 1
 1298 0006 08BD     		pop	{r3, pc}
 1299              		.cfi_endproc
 1300              	.LFE38:
 1302              		.section	.text.SPI0_IRQHandler,"ax",%progbits
 1303              		.align	1
 1304              		.weak	SPI0_IRQHandler
 1305              		.syntax unified
 1306              		.thumb
 1307              		.thumb_func
 1308              		.fpu fpv4-sp-d16
 1310              	SPI0_IRQHandler:
 1311              	.LFB39:
 718:../startup/startup_mk64f12.c **** 
 719:../startup/startup_mk64f12.c **** WEAK void SPI0_IRQHandler(void)
 720:../startup/startup_mk64f12.c **** {   SPI0_DriverIRQHandler();
 1312              		.loc 1 720 1
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316 0000 08B5     		push	{r3, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 3, -8
 1319              		.cfi_offset 14, -4
 1320              		.loc 1 720 5
 1321 0002 FFF7FEFF 		bl	SPI0_DriverIRQHandler
 721:../startup/startup_mk64f12.c **** }
 1322              		.loc 1 721 1
 1323 0006 08BD     		pop	{r3, pc}
 1324              		.cfi_endproc
 1325              	.LFE39:
 1327              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 1328              		.align	1
 1329              		.weak	SPI1_IRQHandler
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1333              		.fpu fpv4-sp-d16
 1335              	SPI1_IRQHandler:
 1336              	.LFB40:
 722:../startup/startup_mk64f12.c **** 
 723:../startup/startup_mk64f12.c **** WEAK void SPI1_IRQHandler(void)
 724:../startup/startup_mk64f12.c **** {   SPI1_DriverIRQHandler();
 1337              		.loc 1 724 1
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341 0000 08B5     		push	{r3, lr}
 1342              		.cfi_def_cfa_offset 8
 1343              		.cfi_offset 3, -8
 1344              		.cfi_offset 14, -4
 1345              		.loc 1 724 5
 1346 0002 FFF7FEFF 		bl	SPI1_DriverIRQHandler
 725:../startup/startup_mk64f12.c **** }
 1347              		.loc 1 725 1
 1348 0006 08BD     		pop	{r3, pc}
 1349              		.cfi_endproc
 1350              	.LFE40:
 1352              		.section	.text.I2S0_Tx_IRQHandler,"ax",%progbits
 1353              		.align	1
 1354              		.weak	I2S0_Tx_IRQHandler
 1355              		.syntax unified
 1356              		.thumb
 1357              		.thumb_func
 1358              		.fpu fpv4-sp-d16
 1360              	I2S0_Tx_IRQHandler:
 1361              	.LFB41:
 726:../startup/startup_mk64f12.c **** 
 727:../startup/startup_mk64f12.c **** WEAK void I2S0_Tx_IRQHandler(void)
 728:../startup/startup_mk64f12.c **** {   I2S0_Tx_DriverIRQHandler();
 1362              		.loc 1 728 1
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366 0000 08B5     		push	{r3, lr}
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 3, -8
 1369              		.cfi_offset 14, -4
 1370              		.loc 1 728 5
 1371 0002 FFF7FEFF 		bl	I2S0_Tx_DriverIRQHandler
 729:../startup/startup_mk64f12.c **** }
 1372              		.loc 1 729 1
 1373 0006 08BD     		pop	{r3, pc}
 1374              		.cfi_endproc
 1375              	.LFE41:
 1377              		.section	.text.I2S0_Rx_IRQHandler,"ax",%progbits
 1378              		.align	1
 1379              		.weak	I2S0_Rx_IRQHandler
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv4-sp-d16
 1385              	I2S0_Rx_IRQHandler:
 1386              	.LFB42:
 730:../startup/startup_mk64f12.c **** 
 731:../startup/startup_mk64f12.c **** WEAK void I2S0_Rx_IRQHandler(void)
 732:../startup/startup_mk64f12.c **** {   I2S0_Rx_DriverIRQHandler();
 1387              		.loc 1 732 1
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391 0000 08B5     		push	{r3, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 3, -8
 1394              		.cfi_offset 14, -4
 1395              		.loc 1 732 5
 1396 0002 FFF7FEFF 		bl	I2S0_Rx_DriverIRQHandler
 733:../startup/startup_mk64f12.c **** }
 1397              		.loc 1 733 1
 1398 0006 08BD     		pop	{r3, pc}
 1399              		.cfi_endproc
 1400              	.LFE42:
 1402              		.section	.text.UART0_LON_IRQHandler,"ax",%progbits
 1403              		.align	1
 1404              		.weak	UART0_LON_IRQHandler
 1405              		.syntax unified
 1406              		.thumb
 1407              		.thumb_func
 1408              		.fpu fpv4-sp-d16
 1410              	UART0_LON_IRQHandler:
 1411              	.LFB43:
 734:../startup/startup_mk64f12.c **** 
 735:../startup/startup_mk64f12.c **** WEAK void UART0_LON_IRQHandler(void)
 736:../startup/startup_mk64f12.c **** {   UART0_LON_DriverIRQHandler();
 1412              		.loc 1 736 1
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 1416 0000 08B5     		push	{r3, lr}
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 3, -8
 1419              		.cfi_offset 14, -4
 1420              		.loc 1 736 5
 1421 0002 FFF7FEFF 		bl	UART0_LON_DriverIRQHandler
 737:../startup/startup_mk64f12.c **** }
 1422              		.loc 1 737 1
 1423 0006 08BD     		pop	{r3, pc}
 1424              		.cfi_endproc
 1425              	.LFE43:
 1427              		.section	.text.UART0_RX_TX_IRQHandler,"ax",%progbits
 1428              		.align	1
 1429              		.weak	UART0_RX_TX_IRQHandler
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	UART0_RX_TX_IRQHandler:
 1436              	.LFB44:
 738:../startup/startup_mk64f12.c **** 
 739:../startup/startup_mk64f12.c **** WEAK void UART0_RX_TX_IRQHandler(void)
 740:../startup/startup_mk64f12.c **** {   UART0_RX_TX_DriverIRQHandler();
 1437              		.loc 1 740 1
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 08B5     		push	{r3, lr}
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 3, -8
 1444              		.cfi_offset 14, -4
 1445              		.loc 1 740 5
 1446 0002 FFF7FEFF 		bl	UART0_RX_TX_DriverIRQHandler
 741:../startup/startup_mk64f12.c **** }
 1447              		.loc 1 741 1
 1448 0006 08BD     		pop	{r3, pc}
 1449              		.cfi_endproc
 1450              	.LFE44:
 1452              		.section	.text.UART0_ERR_IRQHandler,"ax",%progbits
 1453              		.align	1
 1454              		.weak	UART0_ERR_IRQHandler
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu fpv4-sp-d16
 1460              	UART0_ERR_IRQHandler:
 1461              	.LFB45:
 742:../startup/startup_mk64f12.c **** 
 743:../startup/startup_mk64f12.c **** WEAK void UART0_ERR_IRQHandler(void)
 744:../startup/startup_mk64f12.c **** {   UART0_ERR_DriverIRQHandler();
 1462              		.loc 1 744 1
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 08B5     		push	{r3, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 3, -8
 1469              		.cfi_offset 14, -4
 1470              		.loc 1 744 5
 1471 0002 FFF7FEFF 		bl	UART0_ERR_DriverIRQHandler
 745:../startup/startup_mk64f12.c **** }
 1472              		.loc 1 745 1
 1473 0006 08BD     		pop	{r3, pc}
 1474              		.cfi_endproc
 1475              	.LFE45:
 1477              		.section	.text.UART1_RX_TX_IRQHandler,"ax",%progbits
 1478              		.align	1
 1479              		.weak	UART1_RX_TX_IRQHandler
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu fpv4-sp-d16
 1485              	UART1_RX_TX_IRQHandler:
 1486              	.LFB46:
 746:../startup/startup_mk64f12.c **** 
 747:../startup/startup_mk64f12.c **** WEAK void UART1_RX_TX_IRQHandler(void)
 748:../startup/startup_mk64f12.c **** {   UART1_RX_TX_DriverIRQHandler();
 1487              		.loc 1 748 1
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 0
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491 0000 08B5     		push	{r3, lr}
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 3, -8
 1494              		.cfi_offset 14, -4
 1495              		.loc 1 748 5
 1496 0002 FFF7FEFF 		bl	UART1_RX_TX_DriverIRQHandler
 749:../startup/startup_mk64f12.c **** }
 1497              		.loc 1 749 1
 1498 0006 08BD     		pop	{r3, pc}
 1499              		.cfi_endproc
 1500              	.LFE46:
 1502              		.section	.text.UART1_ERR_IRQHandler,"ax",%progbits
 1503              		.align	1
 1504              		.weak	UART1_ERR_IRQHandler
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu fpv4-sp-d16
 1510              	UART1_ERR_IRQHandler:
 1511              	.LFB47:
 750:../startup/startup_mk64f12.c **** 
 751:../startup/startup_mk64f12.c **** WEAK void UART1_ERR_IRQHandler(void)
 752:../startup/startup_mk64f12.c **** {   UART1_ERR_DriverIRQHandler();
 1512              		.loc 1 752 1
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516 0000 08B5     		push	{r3, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 3, -8
 1519              		.cfi_offset 14, -4
 1520              		.loc 1 752 5
 1521 0002 FFF7FEFF 		bl	UART1_ERR_DriverIRQHandler
 753:../startup/startup_mk64f12.c **** }
 1522              		.loc 1 753 1
 1523 0006 08BD     		pop	{r3, pc}
 1524              		.cfi_endproc
 1525              	.LFE47:
 1527              		.section	.text.UART2_RX_TX_IRQHandler,"ax",%progbits
 1528              		.align	1
 1529              		.weak	UART2_RX_TX_IRQHandler
 1530              		.syntax unified
 1531              		.thumb
 1532              		.thumb_func
 1533              		.fpu fpv4-sp-d16
 1535              	UART2_RX_TX_IRQHandler:
 1536              	.LFB48:
 754:../startup/startup_mk64f12.c **** 
 755:../startup/startup_mk64f12.c **** WEAK void UART2_RX_TX_IRQHandler(void)
 756:../startup/startup_mk64f12.c **** {   UART2_RX_TX_DriverIRQHandler();
 1537              		.loc 1 756 1
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541 0000 08B5     		push	{r3, lr}
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 3, -8
 1544              		.cfi_offset 14, -4
 1545              		.loc 1 756 5
 1546 0002 FFF7FEFF 		bl	UART2_RX_TX_DriverIRQHandler
 757:../startup/startup_mk64f12.c **** }
 1547              		.loc 1 757 1
 1548 0006 08BD     		pop	{r3, pc}
 1549              		.cfi_endproc
 1550              	.LFE48:
 1552              		.section	.text.UART2_ERR_IRQHandler,"ax",%progbits
 1553              		.align	1
 1554              		.weak	UART2_ERR_IRQHandler
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1558              		.fpu fpv4-sp-d16
 1560              	UART2_ERR_IRQHandler:
 1561              	.LFB49:
 758:../startup/startup_mk64f12.c **** 
 759:../startup/startup_mk64f12.c **** WEAK void UART2_ERR_IRQHandler(void)
 760:../startup/startup_mk64f12.c **** {   UART2_ERR_DriverIRQHandler();
 1562              		.loc 1 760 1
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566 0000 08B5     		push	{r3, lr}
 1567              		.cfi_def_cfa_offset 8
 1568              		.cfi_offset 3, -8
 1569              		.cfi_offset 14, -4
 1570              		.loc 1 760 5
 1571 0002 FFF7FEFF 		bl	UART2_ERR_DriverIRQHandler
 761:../startup/startup_mk64f12.c **** }
 1572              		.loc 1 761 1
 1573 0006 08BD     		pop	{r3, pc}
 1574              		.cfi_endproc
 1575              	.LFE49:
 1577              		.section	.text.UART3_RX_TX_IRQHandler,"ax",%progbits
 1578              		.align	1
 1579              		.weak	UART3_RX_TX_IRQHandler
 1580              		.syntax unified
 1581              		.thumb
 1582              		.thumb_func
 1583              		.fpu fpv4-sp-d16
 1585              	UART3_RX_TX_IRQHandler:
 1586              	.LFB50:
 762:../startup/startup_mk64f12.c **** 
 763:../startup/startup_mk64f12.c **** WEAK void UART3_RX_TX_IRQHandler(void)
 764:../startup/startup_mk64f12.c **** {   UART3_RX_TX_DriverIRQHandler();
 1587              		.loc 1 764 1
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591 0000 08B5     		push	{r3, lr}
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 3, -8
 1594              		.cfi_offset 14, -4
 1595              		.loc 1 764 5
 1596 0002 FFF7FEFF 		bl	UART3_RX_TX_DriverIRQHandler
 765:../startup/startup_mk64f12.c **** }
 1597              		.loc 1 765 1
 1598 0006 08BD     		pop	{r3, pc}
 1599              		.cfi_endproc
 1600              	.LFE50:
 1602              		.section	.text.UART3_ERR_IRQHandler,"ax",%progbits
 1603              		.align	1
 1604              		.weak	UART3_ERR_IRQHandler
 1605              		.syntax unified
 1606              		.thumb
 1607              		.thumb_func
 1608              		.fpu fpv4-sp-d16
 1610              	UART3_ERR_IRQHandler:
 1611              	.LFB51:
 766:../startup/startup_mk64f12.c **** 
 767:../startup/startup_mk64f12.c **** WEAK void UART3_ERR_IRQHandler(void)
 768:../startup/startup_mk64f12.c **** {   UART3_ERR_DriverIRQHandler();
 1612              		.loc 1 768 1
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616 0000 08B5     		push	{r3, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 3, -8
 1619              		.cfi_offset 14, -4
 1620              		.loc 1 768 5
 1621 0002 FFF7FEFF 		bl	UART3_ERR_DriverIRQHandler
 769:../startup/startup_mk64f12.c **** }
 1622              		.loc 1 769 1
 1623 0006 08BD     		pop	{r3, pc}
 1624              		.cfi_endproc
 1625              	.LFE51:
 1627              		.section	.text.ADC0_IRQHandler,"ax",%progbits
 1628              		.align	1
 1629              		.weak	ADC0_IRQHandler
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu fpv4-sp-d16
 1635              	ADC0_IRQHandler:
 1636              	.LFB52:
 770:../startup/startup_mk64f12.c **** 
 771:../startup/startup_mk64f12.c **** WEAK void ADC0_IRQHandler(void)
 772:../startup/startup_mk64f12.c **** {   ADC0_DriverIRQHandler();
 1637              		.loc 1 772 1
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641 0000 08B5     		push	{r3, lr}
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 3, -8
 1644              		.cfi_offset 14, -4
 1645              		.loc 1 772 5
 1646 0002 FFF7FEFF 		bl	ADC0_DriverIRQHandler
 773:../startup/startup_mk64f12.c **** }
 1647              		.loc 1 773 1
 1648 0006 08BD     		pop	{r3, pc}
 1649              		.cfi_endproc
 1650              	.LFE52:
 1652              		.section	.text.CMP0_IRQHandler,"ax",%progbits
 1653              		.align	1
 1654              		.weak	CMP0_IRQHandler
 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1658              		.fpu fpv4-sp-d16
 1660              	CMP0_IRQHandler:
 1661              	.LFB53:
 774:../startup/startup_mk64f12.c **** 
 775:../startup/startup_mk64f12.c **** WEAK void CMP0_IRQHandler(void)
 776:../startup/startup_mk64f12.c **** {   CMP0_DriverIRQHandler();
 1662              		.loc 1 776 1
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666 0000 08B5     		push	{r3, lr}
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 3, -8
 1669              		.cfi_offset 14, -4
 1670              		.loc 1 776 5
 1671 0002 FFF7FEFF 		bl	CMP0_DriverIRQHandler
 777:../startup/startup_mk64f12.c **** }
 1672              		.loc 1 777 1
 1673 0006 08BD     		pop	{r3, pc}
 1674              		.cfi_endproc
 1675              	.LFE53:
 1677              		.section	.text.CMP1_IRQHandler,"ax",%progbits
 1678              		.align	1
 1679              		.weak	CMP1_IRQHandler
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv4-sp-d16
 1685              	CMP1_IRQHandler:
 1686              	.LFB54:
 778:../startup/startup_mk64f12.c **** 
 779:../startup/startup_mk64f12.c **** WEAK void CMP1_IRQHandler(void)
 780:../startup/startup_mk64f12.c **** {   CMP1_DriverIRQHandler();
 1687              		.loc 1 780 1
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691 0000 08B5     		push	{r3, lr}
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 3, -8
 1694              		.cfi_offset 14, -4
 1695              		.loc 1 780 5
 1696 0002 FFF7FEFF 		bl	CMP1_DriverIRQHandler
 781:../startup/startup_mk64f12.c **** }
 1697              		.loc 1 781 1
 1698 0006 08BD     		pop	{r3, pc}
 1699              		.cfi_endproc
 1700              	.LFE54:
 1702              		.section	.text.FTM0_IRQHandler,"ax",%progbits
 1703              		.align	1
 1704              		.weak	FTM0_IRQHandler
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu fpv4-sp-d16
 1710              	FTM0_IRQHandler:
 1711              	.LFB55:
 782:../startup/startup_mk64f12.c **** 
 783:../startup/startup_mk64f12.c **** WEAK void FTM0_IRQHandler(void)
 784:../startup/startup_mk64f12.c **** {   FTM0_DriverIRQHandler();
 1712              		.loc 1 784 1
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716 0000 08B5     		push	{r3, lr}
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 3, -8
 1719              		.cfi_offset 14, -4
 1720              		.loc 1 784 5
 1721 0002 FFF7FEFF 		bl	FTM0_DriverIRQHandler
 785:../startup/startup_mk64f12.c **** }
 1722              		.loc 1 785 1
 1723 0006 08BD     		pop	{r3, pc}
 1724              		.cfi_endproc
 1725              	.LFE55:
 1727              		.section	.text.FTM1_IRQHandler,"ax",%progbits
 1728              		.align	1
 1729              		.weak	FTM1_IRQHandler
 1730              		.syntax unified
 1731              		.thumb
 1732              		.thumb_func
 1733              		.fpu fpv4-sp-d16
 1735              	FTM1_IRQHandler:
 1736              	.LFB56:
 786:../startup/startup_mk64f12.c **** 
 787:../startup/startup_mk64f12.c **** WEAK void FTM1_IRQHandler(void)
 788:../startup/startup_mk64f12.c **** {   FTM1_DriverIRQHandler();
 1737              		.loc 1 788 1
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 0
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 1741 0000 08B5     		push	{r3, lr}
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 3, -8
 1744              		.cfi_offset 14, -4
 1745              		.loc 1 788 5
 1746 0002 FFF7FEFF 		bl	FTM1_DriverIRQHandler
 789:../startup/startup_mk64f12.c **** }
 1747              		.loc 1 789 1
 1748 0006 08BD     		pop	{r3, pc}
 1749              		.cfi_endproc
 1750              	.LFE56:
 1752              		.section	.text.FTM2_IRQHandler,"ax",%progbits
 1753              		.align	1
 1754              		.weak	FTM2_IRQHandler
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1758              		.fpu fpv4-sp-d16
 1760              	FTM2_IRQHandler:
 1761              	.LFB57:
 790:../startup/startup_mk64f12.c **** 
 791:../startup/startup_mk64f12.c **** WEAK void FTM2_IRQHandler(void)
 792:../startup/startup_mk64f12.c **** {   FTM2_DriverIRQHandler();
 1762              		.loc 1 792 1
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766 0000 08B5     		push	{r3, lr}
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 3, -8
 1769              		.cfi_offset 14, -4
 1770              		.loc 1 792 5
 1771 0002 FFF7FEFF 		bl	FTM2_DriverIRQHandler
 793:../startup/startup_mk64f12.c **** }
 1772              		.loc 1 793 1
 1773 0006 08BD     		pop	{r3, pc}
 1774              		.cfi_endproc
 1775              	.LFE57:
 1777              		.section	.text.CMT_IRQHandler,"ax",%progbits
 1778              		.align	1
 1779              		.weak	CMT_IRQHandler
 1780              		.syntax unified
 1781              		.thumb
 1782              		.thumb_func
 1783              		.fpu fpv4-sp-d16
 1785              	CMT_IRQHandler:
 1786              	.LFB58:
 794:../startup/startup_mk64f12.c **** 
 795:../startup/startup_mk64f12.c **** WEAK void CMT_IRQHandler(void)
 796:../startup/startup_mk64f12.c **** {   CMT_DriverIRQHandler();
 1787              		.loc 1 796 1
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791 0000 08B5     		push	{r3, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 3, -8
 1794              		.cfi_offset 14, -4
 1795              		.loc 1 796 5
 1796 0002 FFF7FEFF 		bl	CMT_DriverIRQHandler
 797:../startup/startup_mk64f12.c **** }
 1797              		.loc 1 797 1
 1798 0006 08BD     		pop	{r3, pc}
 1799              		.cfi_endproc
 1800              	.LFE58:
 1802              		.section	.text.RTC_IRQHandler,"ax",%progbits
 1803              		.align	1
 1804              		.weak	RTC_IRQHandler
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1808              		.fpu fpv4-sp-d16
 1810              	RTC_IRQHandler:
 1811              	.LFB59:
 798:../startup/startup_mk64f12.c **** 
 799:../startup/startup_mk64f12.c **** WEAK void RTC_IRQHandler(void)
 800:../startup/startup_mk64f12.c **** {   RTC_DriverIRQHandler();
 1812              		.loc 1 800 1
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816 0000 08B5     		push	{r3, lr}
 1817              		.cfi_def_cfa_offset 8
 1818              		.cfi_offset 3, -8
 1819              		.cfi_offset 14, -4
 1820              		.loc 1 800 5
 1821 0002 FFF7FEFF 		bl	RTC_DriverIRQHandler
 801:../startup/startup_mk64f12.c **** }
 1822              		.loc 1 801 1
 1823 0006 08BD     		pop	{r3, pc}
 1824              		.cfi_endproc
 1825              	.LFE59:
 1827              		.section	.text.RTC_Seconds_IRQHandler,"ax",%progbits
 1828              		.align	1
 1829              		.weak	RTC_Seconds_IRQHandler
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1833              		.fpu fpv4-sp-d16
 1835              	RTC_Seconds_IRQHandler:
 1836              	.LFB60:
 802:../startup/startup_mk64f12.c **** 
 803:../startup/startup_mk64f12.c **** WEAK void RTC_Seconds_IRQHandler(void)
 804:../startup/startup_mk64f12.c **** {   RTC_Seconds_DriverIRQHandler();
 1837              		.loc 1 804 1
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841 0000 08B5     		push	{r3, lr}
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 3, -8
 1844              		.cfi_offset 14, -4
 1845              		.loc 1 804 5
 1846 0002 FFF7FEFF 		bl	RTC_Seconds_DriverIRQHandler
 805:../startup/startup_mk64f12.c **** }
 1847              		.loc 1 805 1
 1848 0006 08BD     		pop	{r3, pc}
 1849              		.cfi_endproc
 1850              	.LFE60:
 1852              		.section	.text.PIT0_IRQHandler,"ax",%progbits
 1853              		.align	1
 1854              		.weak	PIT0_IRQHandler
 1855              		.syntax unified
 1856              		.thumb
 1857              		.thumb_func
 1858              		.fpu fpv4-sp-d16
 1860              	PIT0_IRQHandler:
 1861              	.LFB61:
 806:../startup/startup_mk64f12.c **** 
 807:../startup/startup_mk64f12.c **** WEAK void PIT0_IRQHandler(void)
 808:../startup/startup_mk64f12.c **** {   PIT0_DriverIRQHandler();
 1862              		.loc 1 808 1
 1863              		.cfi_startproc
 1864              		@ args = 0, pretend = 0, frame = 0
 1865              		@ frame_needed = 0, uses_anonymous_args = 0
 1866 0000 08B5     		push	{r3, lr}
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 3, -8
 1869              		.cfi_offset 14, -4
 1870              		.loc 1 808 5
 1871 0002 FFF7FEFF 		bl	PIT0_DriverIRQHandler
 809:../startup/startup_mk64f12.c **** }
 1872              		.loc 1 809 1
 1873 0006 08BD     		pop	{r3, pc}
 1874              		.cfi_endproc
 1875              	.LFE61:
 1877              		.section	.text.PIT1_IRQHandler,"ax",%progbits
 1878              		.align	1
 1879              		.weak	PIT1_IRQHandler
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	PIT1_IRQHandler:
 1886              	.LFB62:
 810:../startup/startup_mk64f12.c **** 
 811:../startup/startup_mk64f12.c **** WEAK void PIT1_IRQHandler(void)
 812:../startup/startup_mk64f12.c **** {   PIT1_DriverIRQHandler();
 1887              		.loc 1 812 1
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891 0000 08B5     		push	{r3, lr}
 1892              		.cfi_def_cfa_offset 8
 1893              		.cfi_offset 3, -8
 1894              		.cfi_offset 14, -4
 1895              		.loc 1 812 5
 1896 0002 FFF7FEFF 		bl	PIT1_DriverIRQHandler
 813:../startup/startup_mk64f12.c **** }
 1897              		.loc 1 813 1
 1898 0006 08BD     		pop	{r3, pc}
 1899              		.cfi_endproc
 1900              	.LFE62:
 1902              		.section	.text.PIT2_IRQHandler,"ax",%progbits
 1903              		.align	1
 1904              		.weak	PIT2_IRQHandler
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu fpv4-sp-d16
 1910              	PIT2_IRQHandler:
 1911              	.LFB63:
 814:../startup/startup_mk64f12.c **** 
 815:../startup/startup_mk64f12.c **** WEAK void PIT2_IRQHandler(void)
 816:../startup/startup_mk64f12.c **** {   PIT2_DriverIRQHandler();
 1912              		.loc 1 816 1
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916 0000 08B5     		push	{r3, lr}
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 3, -8
 1919              		.cfi_offset 14, -4
 1920              		.loc 1 816 5
 1921 0002 FFF7FEFF 		bl	PIT2_DriverIRQHandler
 817:../startup/startup_mk64f12.c **** }
 1922              		.loc 1 817 1
 1923 0006 08BD     		pop	{r3, pc}
 1924              		.cfi_endproc
 1925              	.LFE63:
 1927              		.section	.text.PIT3_IRQHandler,"ax",%progbits
 1928              		.align	1
 1929              		.weak	PIT3_IRQHandler
 1930              		.syntax unified
 1931              		.thumb
 1932              		.thumb_func
 1933              		.fpu fpv4-sp-d16
 1935              	PIT3_IRQHandler:
 1936              	.LFB64:
 818:../startup/startup_mk64f12.c **** 
 819:../startup/startup_mk64f12.c **** WEAK void PIT3_IRQHandler(void)
 820:../startup/startup_mk64f12.c **** {   PIT3_DriverIRQHandler();
 1937              		.loc 1 820 1
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 0
 1940              		@ frame_needed = 0, uses_anonymous_args = 0
 1941 0000 08B5     		push	{r3, lr}
 1942              		.cfi_def_cfa_offset 8
 1943              		.cfi_offset 3, -8
 1944              		.cfi_offset 14, -4
 1945              		.loc 1 820 5
 1946 0002 FFF7FEFF 		bl	PIT3_DriverIRQHandler
 821:../startup/startup_mk64f12.c **** }
 1947              		.loc 1 821 1
 1948 0006 08BD     		pop	{r3, pc}
 1949              		.cfi_endproc
 1950              	.LFE64:
 1952              		.section	.text.PDB0_IRQHandler,"ax",%progbits
 1953              		.align	1
 1954              		.weak	PDB0_IRQHandler
 1955              		.syntax unified
 1956              		.thumb
 1957              		.thumb_func
 1958              		.fpu fpv4-sp-d16
 1960              	PDB0_IRQHandler:
 1961              	.LFB65:
 822:../startup/startup_mk64f12.c **** 
 823:../startup/startup_mk64f12.c **** WEAK void PDB0_IRQHandler(void)
 824:../startup/startup_mk64f12.c **** {   PDB0_DriverIRQHandler();
 1962              		.loc 1 824 1
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966 0000 08B5     		push	{r3, lr}
 1967              		.cfi_def_cfa_offset 8
 1968              		.cfi_offset 3, -8
 1969              		.cfi_offset 14, -4
 1970              		.loc 1 824 5
 1971 0002 FFF7FEFF 		bl	PDB0_DriverIRQHandler
 825:../startup/startup_mk64f12.c **** }
 1972              		.loc 1 825 1
 1973 0006 08BD     		pop	{r3, pc}
 1974              		.cfi_endproc
 1975              	.LFE65:
 1977              		.section	.text.USB0_IRQHandler,"ax",%progbits
 1978              		.align	1
 1979              		.weak	USB0_IRQHandler
 1980              		.syntax unified
 1981              		.thumb
 1982              		.thumb_func
 1983              		.fpu fpv4-sp-d16
 1985              	USB0_IRQHandler:
 1986              	.LFB66:
 826:../startup/startup_mk64f12.c **** 
 827:../startup/startup_mk64f12.c **** WEAK void USB0_IRQHandler(void)
 828:../startup/startup_mk64f12.c **** {   USB0_DriverIRQHandler();
 1987              		.loc 1 828 1
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 1991 0000 08B5     		push	{r3, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 3, -8
 1994              		.cfi_offset 14, -4
 1995              		.loc 1 828 5
 1996 0002 FFF7FEFF 		bl	USB0_DriverIRQHandler
 829:../startup/startup_mk64f12.c **** }
 1997              		.loc 1 829 1
 1998 0006 08BD     		pop	{r3, pc}
 1999              		.cfi_endproc
 2000              	.LFE66:
 2002              		.section	.text.USBDCD_IRQHandler,"ax",%progbits
 2003              		.align	1
 2004              		.weak	USBDCD_IRQHandler
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	USBDCD_IRQHandler:
 2011              	.LFB67:
 830:../startup/startup_mk64f12.c **** 
 831:../startup/startup_mk64f12.c **** WEAK void USBDCD_IRQHandler(void)
 832:../startup/startup_mk64f12.c **** {   USBDCD_DriverIRQHandler();
 2012              		.loc 1 832 1
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016 0000 08B5     		push	{r3, lr}
 2017              		.cfi_def_cfa_offset 8
 2018              		.cfi_offset 3, -8
 2019              		.cfi_offset 14, -4
 2020              		.loc 1 832 5
 2021 0002 FFF7FEFF 		bl	USBDCD_DriverIRQHandler
 833:../startup/startup_mk64f12.c **** }
 2022              		.loc 1 833 1
 2023 0006 08BD     		pop	{r3, pc}
 2024              		.cfi_endproc
 2025              	.LFE67:
 2027              		.section	.text.Reserved71_IRQHandler,"ax",%progbits
 2028              		.align	1
 2029              		.weak	Reserved71_IRQHandler
 2030              		.syntax unified
 2031              		.thumb
 2032              		.thumb_func
 2033              		.fpu fpv4-sp-d16
 2035              	Reserved71_IRQHandler:
 2036              	.LFB68:
 834:../startup/startup_mk64f12.c **** 
 835:../startup/startup_mk64f12.c **** WEAK void Reserved71_IRQHandler(void)
 836:../startup/startup_mk64f12.c **** {   Reserved71_DriverIRQHandler();
 2037              		.loc 1 836 1
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 0
 2040              		@ frame_needed = 0, uses_anonymous_args = 0
 2041 0000 08B5     		push	{r3, lr}
 2042              		.cfi_def_cfa_offset 8
 2043              		.cfi_offset 3, -8
 2044              		.cfi_offset 14, -4
 2045              		.loc 1 836 5
 2046 0002 FFF7FEFF 		bl	Reserved71_DriverIRQHandler
 837:../startup/startup_mk64f12.c **** }
 2047              		.loc 1 837 1
 2048 0006 08BD     		pop	{r3, pc}
 2049              		.cfi_endproc
 2050              	.LFE68:
 2052              		.section	.text.DAC0_IRQHandler,"ax",%progbits
 2053              		.align	1
 2054              		.weak	DAC0_IRQHandler
 2055              		.syntax unified
 2056              		.thumb
 2057              		.thumb_func
 2058              		.fpu fpv4-sp-d16
 2060              	DAC0_IRQHandler:
 2061              	.LFB69:
 838:../startup/startup_mk64f12.c **** 
 839:../startup/startup_mk64f12.c **** WEAK void DAC0_IRQHandler(void)
 840:../startup/startup_mk64f12.c **** {   DAC0_DriverIRQHandler();
 2062              		.loc 1 840 1
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 0
 2065              		@ frame_needed = 0, uses_anonymous_args = 0
 2066 0000 08B5     		push	{r3, lr}
 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 3, -8
 2069              		.cfi_offset 14, -4
 2070              		.loc 1 840 5
 2071 0002 FFF7FEFF 		bl	DAC0_DriverIRQHandler
 841:../startup/startup_mk64f12.c **** }
 2072              		.loc 1 841 1
 2073 0006 08BD     		pop	{r3, pc}
 2074              		.cfi_endproc
 2075              	.LFE69:
 2077              		.section	.text.MCG_IRQHandler,"ax",%progbits
 2078              		.align	1
 2079              		.weak	MCG_IRQHandler
 2080              		.syntax unified
 2081              		.thumb
 2082              		.thumb_func
 2083              		.fpu fpv4-sp-d16
 2085              	MCG_IRQHandler:
 2086              	.LFB70:
 842:../startup/startup_mk64f12.c **** 
 843:../startup/startup_mk64f12.c **** WEAK void MCG_IRQHandler(void)
 844:../startup/startup_mk64f12.c **** {   MCG_DriverIRQHandler();
 2087              		.loc 1 844 1
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091 0000 08B5     		push	{r3, lr}
 2092              		.cfi_def_cfa_offset 8
 2093              		.cfi_offset 3, -8
 2094              		.cfi_offset 14, -4
 2095              		.loc 1 844 5
 2096 0002 FFF7FEFF 		bl	MCG_DriverIRQHandler
 845:../startup/startup_mk64f12.c **** }
 2097              		.loc 1 845 1
 2098 0006 08BD     		pop	{r3, pc}
 2099              		.cfi_endproc
 2100              	.LFE70:
 2102              		.section	.text.LPTMR0_IRQHandler,"ax",%progbits
 2103              		.align	1
 2104              		.weak	LPTMR0_IRQHandler
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu fpv4-sp-d16
 2110              	LPTMR0_IRQHandler:
 2111              	.LFB71:
 846:../startup/startup_mk64f12.c **** 
 847:../startup/startup_mk64f12.c **** WEAK void LPTMR0_IRQHandler(void)
 848:../startup/startup_mk64f12.c **** {   LPTMR0_DriverIRQHandler();
 2112              		.loc 1 848 1
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
 2116 0000 08B5     		push	{r3, lr}
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 3, -8
 2119              		.cfi_offset 14, -4
 2120              		.loc 1 848 5
 2121 0002 FFF7FEFF 		bl	LPTMR0_DriverIRQHandler
 849:../startup/startup_mk64f12.c **** }
 2122              		.loc 1 849 1
 2123 0006 08BD     		pop	{r3, pc}
 2124              		.cfi_endproc
 2125              	.LFE71:
 2127              		.section	.text.PORTA_IRQHandler,"ax",%progbits
 2128              		.align	1
 2129              		.weak	PORTA_IRQHandler
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2133              		.fpu fpv4-sp-d16
 2135              	PORTA_IRQHandler:
 2136              	.LFB72:
 850:../startup/startup_mk64f12.c **** 
 851:../startup/startup_mk64f12.c **** WEAK void PORTA_IRQHandler(void)
 852:../startup/startup_mk64f12.c **** {   PORTA_DriverIRQHandler();
 2137              		.loc 1 852 1
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141 0000 08B5     		push	{r3, lr}
 2142              		.cfi_def_cfa_offset 8
 2143              		.cfi_offset 3, -8
 2144              		.cfi_offset 14, -4
 2145              		.loc 1 852 5
 2146 0002 FFF7FEFF 		bl	PORTA_DriverIRQHandler
 853:../startup/startup_mk64f12.c **** }
 2147              		.loc 1 853 1
 2148 0006 08BD     		pop	{r3, pc}
 2149              		.cfi_endproc
 2150              	.LFE72:
 2152              		.section	.text.PORTB_IRQHandler,"ax",%progbits
 2153              		.align	1
 2154              		.weak	PORTB_IRQHandler
 2155              		.syntax unified
 2156              		.thumb
 2157              		.thumb_func
 2158              		.fpu fpv4-sp-d16
 2160              	PORTB_IRQHandler:
 2161              	.LFB73:
 854:../startup/startup_mk64f12.c **** 
 855:../startup/startup_mk64f12.c **** WEAK void PORTB_IRQHandler(void)
 856:../startup/startup_mk64f12.c **** {   PORTB_DriverIRQHandler();
 2162              		.loc 1 856 1
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166 0000 08B5     		push	{r3, lr}
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 3, -8
 2169              		.cfi_offset 14, -4
 2170              		.loc 1 856 5
 2171 0002 FFF7FEFF 		bl	PORTB_DriverIRQHandler
 857:../startup/startup_mk64f12.c **** }
 2172              		.loc 1 857 1
 2173 0006 08BD     		pop	{r3, pc}
 2174              		.cfi_endproc
 2175              	.LFE73:
 2177              		.section	.text.PORTC_IRQHandler,"ax",%progbits
 2178              		.align	1
 2179              		.weak	PORTC_IRQHandler
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
 2183              		.fpu fpv4-sp-d16
 2185              	PORTC_IRQHandler:
 2186              	.LFB74:
 858:../startup/startup_mk64f12.c **** 
 859:../startup/startup_mk64f12.c **** WEAK void PORTC_IRQHandler(void)
 860:../startup/startup_mk64f12.c **** {   PORTC_DriverIRQHandler();
 2187              		.loc 1 860 1
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191 0000 08B5     		push	{r3, lr}
 2192              		.cfi_def_cfa_offset 8
 2193              		.cfi_offset 3, -8
 2194              		.cfi_offset 14, -4
 2195              		.loc 1 860 5
 2196 0002 FFF7FEFF 		bl	PORTC_DriverIRQHandler
 861:../startup/startup_mk64f12.c **** }
 2197              		.loc 1 861 1
 2198 0006 08BD     		pop	{r3, pc}
 2199              		.cfi_endproc
 2200              	.LFE74:
 2202              		.section	.text.PORTD_IRQHandler,"ax",%progbits
 2203              		.align	1
 2204              		.weak	PORTD_IRQHandler
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv4-sp-d16
 2210              	PORTD_IRQHandler:
 2211              	.LFB75:
 862:../startup/startup_mk64f12.c **** 
 863:../startup/startup_mk64f12.c **** WEAK void PORTD_IRQHandler(void)
 864:../startup/startup_mk64f12.c **** {   PORTD_DriverIRQHandler();
 2212              		.loc 1 864 1
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216 0000 08B5     		push	{r3, lr}
 2217              		.cfi_def_cfa_offset 8
 2218              		.cfi_offset 3, -8
 2219              		.cfi_offset 14, -4
 2220              		.loc 1 864 5
 2221 0002 FFF7FEFF 		bl	PORTD_DriverIRQHandler
 865:../startup/startup_mk64f12.c **** }
 2222              		.loc 1 865 1
 2223 0006 08BD     		pop	{r3, pc}
 2224              		.cfi_endproc
 2225              	.LFE75:
 2227              		.section	.text.PORTE_IRQHandler,"ax",%progbits
 2228              		.align	1
 2229              		.weak	PORTE_IRQHandler
 2230              		.syntax unified
 2231              		.thumb
 2232              		.thumb_func
 2233              		.fpu fpv4-sp-d16
 2235              	PORTE_IRQHandler:
 2236              	.LFB76:
 866:../startup/startup_mk64f12.c **** 
 867:../startup/startup_mk64f12.c **** WEAK void PORTE_IRQHandler(void)
 868:../startup/startup_mk64f12.c **** {   PORTE_DriverIRQHandler();
 2237              		.loc 1 868 1
 2238              		.cfi_startproc
 2239              		@ args = 0, pretend = 0, frame = 0
 2240              		@ frame_needed = 0, uses_anonymous_args = 0
 2241 0000 08B5     		push	{r3, lr}
 2242              		.cfi_def_cfa_offset 8
 2243              		.cfi_offset 3, -8
 2244              		.cfi_offset 14, -4
 2245              		.loc 1 868 5
 2246 0002 FFF7FEFF 		bl	PORTE_DriverIRQHandler
 869:../startup/startup_mk64f12.c **** }
 2247              		.loc 1 869 1
 2248 0006 08BD     		pop	{r3, pc}
 2249              		.cfi_endproc
 2250              	.LFE76:
 2252              		.section	.text.SWI_IRQHandler,"ax",%progbits
 2253              		.align	1
 2254              		.weak	SWI_IRQHandler
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2258              		.fpu fpv4-sp-d16
 2260              	SWI_IRQHandler:
 2261              	.LFB77:
 870:../startup/startup_mk64f12.c **** 
 871:../startup/startup_mk64f12.c **** WEAK void SWI_IRQHandler(void)
 872:../startup/startup_mk64f12.c **** {   SWI_DriverIRQHandler();
 2262              		.loc 1 872 1
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266 0000 08B5     		push	{r3, lr}
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 3, -8
 2269              		.cfi_offset 14, -4
 2270              		.loc 1 872 5
 2271 0002 FFF7FEFF 		bl	SWI_DriverIRQHandler
 873:../startup/startup_mk64f12.c **** }
 2272              		.loc 1 873 1
 2273 0006 08BD     		pop	{r3, pc}
 2274              		.cfi_endproc
 2275              	.LFE77:
 2277              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 2278              		.align	1
 2279              		.weak	SPI2_IRQHandler
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2283              		.fpu fpv4-sp-d16
 2285              	SPI2_IRQHandler:
 2286              	.LFB78:
 874:../startup/startup_mk64f12.c **** 
 875:../startup/startup_mk64f12.c **** WEAK void SPI2_IRQHandler(void)
 876:../startup/startup_mk64f12.c **** {   SPI2_DriverIRQHandler();
 2287              		.loc 1 876 1
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291 0000 08B5     		push	{r3, lr}
 2292              		.cfi_def_cfa_offset 8
 2293              		.cfi_offset 3, -8
 2294              		.cfi_offset 14, -4
 2295              		.loc 1 876 5
 2296 0002 FFF7FEFF 		bl	SPI2_DriverIRQHandler
 877:../startup/startup_mk64f12.c **** }
 2297              		.loc 1 877 1
 2298 0006 08BD     		pop	{r3, pc}
 2299              		.cfi_endproc
 2300              	.LFE78:
 2302              		.section	.text.UART4_RX_TX_IRQHandler,"ax",%progbits
 2303              		.align	1
 2304              		.weak	UART4_RX_TX_IRQHandler
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2308              		.fpu fpv4-sp-d16
 2310              	UART4_RX_TX_IRQHandler:
 2311              	.LFB79:
 878:../startup/startup_mk64f12.c **** 
 879:../startup/startup_mk64f12.c **** WEAK void UART4_RX_TX_IRQHandler(void)
 880:../startup/startup_mk64f12.c **** {   UART4_RX_TX_DriverIRQHandler();
 2312              		.loc 1 880 1
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316 0000 08B5     		push	{r3, lr}
 2317              		.cfi_def_cfa_offset 8
 2318              		.cfi_offset 3, -8
 2319              		.cfi_offset 14, -4
 2320              		.loc 1 880 5
 2321 0002 FFF7FEFF 		bl	UART4_RX_TX_DriverIRQHandler
 881:../startup/startup_mk64f12.c **** }
 2322              		.loc 1 881 1
 2323 0006 08BD     		pop	{r3, pc}
 2324              		.cfi_endproc
 2325              	.LFE79:
 2327              		.section	.text.UART4_ERR_IRQHandler,"ax",%progbits
 2328              		.align	1
 2329              		.weak	UART4_ERR_IRQHandler
 2330              		.syntax unified
 2331              		.thumb
 2332              		.thumb_func
 2333              		.fpu fpv4-sp-d16
 2335              	UART4_ERR_IRQHandler:
 2336              	.LFB80:
 882:../startup/startup_mk64f12.c **** 
 883:../startup/startup_mk64f12.c **** WEAK void UART4_ERR_IRQHandler(void)
 884:../startup/startup_mk64f12.c **** {   UART4_ERR_DriverIRQHandler();
 2337              		.loc 1 884 1
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341 0000 08B5     		push	{r3, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 3, -8
 2344              		.cfi_offset 14, -4
 2345              		.loc 1 884 5
 2346 0002 FFF7FEFF 		bl	UART4_ERR_DriverIRQHandler
 885:../startup/startup_mk64f12.c **** }
 2347              		.loc 1 885 1
 2348 0006 08BD     		pop	{r3, pc}
 2349              		.cfi_endproc
 2350              	.LFE80:
 2352              		.section	.text.UART5_RX_TX_IRQHandler,"ax",%progbits
 2353              		.align	1
 2354              		.weak	UART5_RX_TX_IRQHandler
 2355              		.syntax unified
 2356              		.thumb
 2357              		.thumb_func
 2358              		.fpu fpv4-sp-d16
 2360              	UART5_RX_TX_IRQHandler:
 2361              	.LFB81:
 886:../startup/startup_mk64f12.c **** 
 887:../startup/startup_mk64f12.c **** WEAK void UART5_RX_TX_IRQHandler(void)
 888:../startup/startup_mk64f12.c **** {   UART5_RX_TX_DriverIRQHandler();
 2362              		.loc 1 888 1
 2363              		.cfi_startproc
 2364              		@ args = 0, pretend = 0, frame = 0
 2365              		@ frame_needed = 0, uses_anonymous_args = 0
 2366 0000 08B5     		push	{r3, lr}
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 3, -8
 2369              		.cfi_offset 14, -4
 2370              		.loc 1 888 5
 2371 0002 FFF7FEFF 		bl	UART5_RX_TX_DriverIRQHandler
 889:../startup/startup_mk64f12.c **** }
 2372              		.loc 1 889 1
 2373 0006 08BD     		pop	{r3, pc}
 2374              		.cfi_endproc
 2375              	.LFE81:
 2377              		.section	.text.UART5_ERR_IRQHandler,"ax",%progbits
 2378              		.align	1
 2379              		.weak	UART5_ERR_IRQHandler
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2383              		.fpu fpv4-sp-d16
 2385              	UART5_ERR_IRQHandler:
 2386              	.LFB82:
 890:../startup/startup_mk64f12.c **** 
 891:../startup/startup_mk64f12.c **** WEAK void UART5_ERR_IRQHandler(void)
 892:../startup/startup_mk64f12.c **** {   UART5_ERR_DriverIRQHandler();
 2387              		.loc 1 892 1
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391 0000 08B5     		push	{r3, lr}
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 3, -8
 2394              		.cfi_offset 14, -4
 2395              		.loc 1 892 5
 2396 0002 FFF7FEFF 		bl	UART5_ERR_DriverIRQHandler
 893:../startup/startup_mk64f12.c **** }
 2397              		.loc 1 893 1
 2398 0006 08BD     		pop	{r3, pc}
 2399              		.cfi_endproc
 2400              	.LFE82:
 2402              		.section	.text.CMP2_IRQHandler,"ax",%progbits
 2403              		.align	1
 2404              		.weak	CMP2_IRQHandler
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2408              		.fpu fpv4-sp-d16
 2410              	CMP2_IRQHandler:
 2411              	.LFB83:
 894:../startup/startup_mk64f12.c **** 
 895:../startup/startup_mk64f12.c **** WEAK void CMP2_IRQHandler(void)
 896:../startup/startup_mk64f12.c **** {   CMP2_DriverIRQHandler();
 2412              		.loc 1 896 1
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416 0000 08B5     		push	{r3, lr}
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 3, -8
 2419              		.cfi_offset 14, -4
 2420              		.loc 1 896 5
 2421 0002 FFF7FEFF 		bl	CMP2_DriverIRQHandler
 897:../startup/startup_mk64f12.c **** }
 2422              		.loc 1 897 1
 2423 0006 08BD     		pop	{r3, pc}
 2424              		.cfi_endproc
 2425              	.LFE83:
 2427              		.section	.text.FTM3_IRQHandler,"ax",%progbits
 2428              		.align	1
 2429              		.weak	FTM3_IRQHandler
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
 2433              		.fpu fpv4-sp-d16
 2435              	FTM3_IRQHandler:
 2436              	.LFB84:
 898:../startup/startup_mk64f12.c **** 
 899:../startup/startup_mk64f12.c **** WEAK void FTM3_IRQHandler(void)
 900:../startup/startup_mk64f12.c **** {   FTM3_DriverIRQHandler();
 2437              		.loc 1 900 1
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
 2441 0000 08B5     		push	{r3, lr}
 2442              		.cfi_def_cfa_offset 8
 2443              		.cfi_offset 3, -8
 2444              		.cfi_offset 14, -4
 2445              		.loc 1 900 5
 2446 0002 FFF7FEFF 		bl	FTM3_DriverIRQHandler
 901:../startup/startup_mk64f12.c **** }
 2447              		.loc 1 901 1
 2448 0006 08BD     		pop	{r3, pc}
 2449              		.cfi_endproc
 2450              	.LFE84:
 2452              		.section	.text.DAC1_IRQHandler,"ax",%progbits
 2453              		.align	1
 2454              		.weak	DAC1_IRQHandler
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2458              		.fpu fpv4-sp-d16
 2460              	DAC1_IRQHandler:
 2461              	.LFB85:
 902:../startup/startup_mk64f12.c **** 
 903:../startup/startup_mk64f12.c **** WEAK void DAC1_IRQHandler(void)
 904:../startup/startup_mk64f12.c **** {   DAC1_DriverIRQHandler();
 2462              		.loc 1 904 1
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466 0000 08B5     		push	{r3, lr}
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 3, -8
 2469              		.cfi_offset 14, -4
 2470              		.loc 1 904 5
 2471 0002 FFF7FEFF 		bl	DAC1_DriverIRQHandler
 905:../startup/startup_mk64f12.c **** }
 2472              		.loc 1 905 1
 2473 0006 08BD     		pop	{r3, pc}
 2474              		.cfi_endproc
 2475              	.LFE85:
 2477              		.section	.text.ADC1_IRQHandler,"ax",%progbits
 2478              		.align	1
 2479              		.weak	ADC1_IRQHandler
 2480              		.syntax unified
 2481              		.thumb
 2482              		.thumb_func
 2483              		.fpu fpv4-sp-d16
 2485              	ADC1_IRQHandler:
 2486              	.LFB86:
 906:../startup/startup_mk64f12.c **** 
 907:../startup/startup_mk64f12.c **** WEAK void ADC1_IRQHandler(void)
 908:../startup/startup_mk64f12.c **** {   ADC1_DriverIRQHandler();
 2487              		.loc 1 908 1
 2488              		.cfi_startproc
 2489              		@ args = 0, pretend = 0, frame = 0
 2490              		@ frame_needed = 0, uses_anonymous_args = 0
 2491 0000 08B5     		push	{r3, lr}
 2492              		.cfi_def_cfa_offset 8
 2493              		.cfi_offset 3, -8
 2494              		.cfi_offset 14, -4
 2495              		.loc 1 908 5
 2496 0002 FFF7FEFF 		bl	ADC1_DriverIRQHandler
 909:../startup/startup_mk64f12.c **** }
 2497              		.loc 1 909 1
 2498 0006 08BD     		pop	{r3, pc}
 2499              		.cfi_endproc
 2500              	.LFE86:
 2502              		.section	.text.I2C2_IRQHandler,"ax",%progbits
 2503              		.align	1
 2504              		.weak	I2C2_IRQHandler
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2508              		.fpu fpv4-sp-d16
 2510              	I2C2_IRQHandler:
 2511              	.LFB87:
 910:../startup/startup_mk64f12.c **** 
 911:../startup/startup_mk64f12.c **** WEAK void I2C2_IRQHandler(void)
 912:../startup/startup_mk64f12.c **** {   I2C2_DriverIRQHandler();
 2512              		.loc 1 912 1
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 0
 2515              		@ frame_needed = 0, uses_anonymous_args = 0
 2516 0000 08B5     		push	{r3, lr}
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 3, -8
 2519              		.cfi_offset 14, -4
 2520              		.loc 1 912 5
 2521 0002 FFF7FEFF 		bl	I2C2_DriverIRQHandler
 913:../startup/startup_mk64f12.c **** }
 2522              		.loc 1 913 1
 2523 0006 08BD     		pop	{r3, pc}
 2524              		.cfi_endproc
 2525              	.LFE87:
 2527              		.section	.text.CAN0_ORed_Message_buffer_IRQHandler,"ax",%progbits
 2528              		.align	1
 2529              		.weak	CAN0_ORed_Message_buffer_IRQHandler
 2530              		.syntax unified
 2531              		.thumb
 2532              		.thumb_func
 2533              		.fpu fpv4-sp-d16
 2535              	CAN0_ORed_Message_buffer_IRQHandler:
 2536              	.LFB88:
 914:../startup/startup_mk64f12.c **** 
 915:../startup/startup_mk64f12.c **** WEAK void CAN0_ORed_Message_buffer_IRQHandler(void)
 916:../startup/startup_mk64f12.c **** {   CAN0_DriverIRQHandler();
 2537              		.loc 1 916 1
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541 0000 08B5     		push	{r3, lr}
 2542              		.cfi_def_cfa_offset 8
 2543              		.cfi_offset 3, -8
 2544              		.cfi_offset 14, -4
 2545              		.loc 1 916 5
 2546 0002 FFF7FEFF 		bl	CAN0_DriverIRQHandler
 917:../startup/startup_mk64f12.c **** }
 2547              		.loc 1 917 1
 2548 0006 08BD     		pop	{r3, pc}
 2549              		.cfi_endproc
 2550              	.LFE88:
 2552              		.section	.text.CAN0_Bus_Off_IRQHandler,"ax",%progbits
 2553              		.align	1
 2554              		.weak	CAN0_Bus_Off_IRQHandler
 2555              		.syntax unified
 2556              		.thumb
 2557              		.thumb_func
 2558              		.fpu fpv4-sp-d16
 2560              	CAN0_Bus_Off_IRQHandler:
 2561              	.LFB89:
 918:../startup/startup_mk64f12.c **** 
 919:../startup/startup_mk64f12.c **** WEAK void CAN0_Bus_Off_IRQHandler(void)
 920:../startup/startup_mk64f12.c **** {   CAN0_DriverIRQHandler();
 2562              		.loc 1 920 1
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 0
 2565              		@ frame_needed = 0, uses_anonymous_args = 0
 2566 0000 08B5     		push	{r3, lr}
 2567              		.cfi_def_cfa_offset 8
 2568              		.cfi_offset 3, -8
 2569              		.cfi_offset 14, -4
 2570              		.loc 1 920 5
 2571 0002 FFF7FEFF 		bl	CAN0_DriverIRQHandler
 921:../startup/startup_mk64f12.c **** }
 2572              		.loc 1 921 1
 2573 0006 08BD     		pop	{r3, pc}
 2574              		.cfi_endproc
 2575              	.LFE89:
 2577              		.section	.text.CAN0_Error_IRQHandler,"ax",%progbits
 2578              		.align	1
 2579              		.weak	CAN0_Error_IRQHandler
 2580              		.syntax unified
 2581              		.thumb
 2582              		.thumb_func
 2583              		.fpu fpv4-sp-d16
 2585              	CAN0_Error_IRQHandler:
 2586              	.LFB90:
 922:../startup/startup_mk64f12.c **** 
 923:../startup/startup_mk64f12.c **** WEAK void CAN0_Error_IRQHandler(void)
 924:../startup/startup_mk64f12.c **** {   CAN0_DriverIRQHandler();
 2587              		.loc 1 924 1
 2588              		.cfi_startproc
 2589              		@ args = 0, pretend = 0, frame = 0
 2590              		@ frame_needed = 0, uses_anonymous_args = 0
 2591 0000 08B5     		push	{r3, lr}
 2592              		.cfi_def_cfa_offset 8
 2593              		.cfi_offset 3, -8
 2594              		.cfi_offset 14, -4
 2595              		.loc 1 924 5
 2596 0002 FFF7FEFF 		bl	CAN0_DriverIRQHandler
 925:../startup/startup_mk64f12.c **** }
 2597              		.loc 1 925 1
 2598 0006 08BD     		pop	{r3, pc}
 2599              		.cfi_endproc
 2600              	.LFE90:
 2602              		.section	.text.CAN0_Tx_Warning_IRQHandler,"ax",%progbits
 2603              		.align	1
 2604              		.weak	CAN0_Tx_Warning_IRQHandler
 2605              		.syntax unified
 2606              		.thumb
 2607              		.thumb_func
 2608              		.fpu fpv4-sp-d16
 2610              	CAN0_Tx_Warning_IRQHandler:
 2611              	.LFB91:
 926:../startup/startup_mk64f12.c **** 
 927:../startup/startup_mk64f12.c **** WEAK void CAN0_Tx_Warning_IRQHandler(void)
 928:../startup/startup_mk64f12.c **** {   CAN0_DriverIRQHandler();
 2612              		.loc 1 928 1
 2613              		.cfi_startproc
 2614              		@ args = 0, pretend = 0, frame = 0
 2615              		@ frame_needed = 0, uses_anonymous_args = 0
 2616 0000 08B5     		push	{r3, lr}
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 3, -8
 2619              		.cfi_offset 14, -4
 2620              		.loc 1 928 5
 2621 0002 FFF7FEFF 		bl	CAN0_DriverIRQHandler
 929:../startup/startup_mk64f12.c **** }
 2622              		.loc 1 929 1
 2623 0006 08BD     		pop	{r3, pc}
 2624              		.cfi_endproc
 2625              	.LFE91:
 2627              		.section	.text.CAN0_Rx_Warning_IRQHandler,"ax",%progbits
 2628              		.align	1
 2629              		.weak	CAN0_Rx_Warning_IRQHandler
 2630              		.syntax unified
 2631              		.thumb
 2632              		.thumb_func
 2633              		.fpu fpv4-sp-d16
 2635              	CAN0_Rx_Warning_IRQHandler:
 2636              	.LFB92:
 930:../startup/startup_mk64f12.c **** 
 931:../startup/startup_mk64f12.c **** WEAK void CAN0_Rx_Warning_IRQHandler(void)
 932:../startup/startup_mk64f12.c **** {   CAN0_DriverIRQHandler();
 2637              		.loc 1 932 1
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 0
 2640              		@ frame_needed = 0, uses_anonymous_args = 0
 2641 0000 08B5     		push	{r3, lr}
 2642              		.cfi_def_cfa_offset 8
 2643              		.cfi_offset 3, -8
 2644              		.cfi_offset 14, -4
 2645              		.loc 1 932 5
 2646 0002 FFF7FEFF 		bl	CAN0_DriverIRQHandler
 933:../startup/startup_mk64f12.c **** }
 2647              		.loc 1 933 1
 2648 0006 08BD     		pop	{r3, pc}
 2649              		.cfi_endproc
 2650              	.LFE92:
 2652              		.section	.text.CAN0_Wake_Up_IRQHandler,"ax",%progbits
 2653              		.align	1
 2654              		.weak	CAN0_Wake_Up_IRQHandler
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu fpv4-sp-d16
 2660              	CAN0_Wake_Up_IRQHandler:
 2661              	.LFB93:
 934:../startup/startup_mk64f12.c **** 
 935:../startup/startup_mk64f12.c **** WEAK void CAN0_Wake_Up_IRQHandler(void)
 936:../startup/startup_mk64f12.c **** {   CAN0_DriverIRQHandler();
 2662              		.loc 1 936 1
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666 0000 08B5     		push	{r3, lr}
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 3, -8
 2669              		.cfi_offset 14, -4
 2670              		.loc 1 936 5
 2671 0002 FFF7FEFF 		bl	CAN0_DriverIRQHandler
 937:../startup/startup_mk64f12.c **** }
 2672              		.loc 1 937 1
 2673 0006 08BD     		pop	{r3, pc}
 2674              		.cfi_endproc
 2675              	.LFE93:
 2677              		.section	.text.SDHC_IRQHandler,"ax",%progbits
 2678              		.align	1
 2679              		.weak	SDHC_IRQHandler
 2680              		.syntax unified
 2681              		.thumb
 2682              		.thumb_func
 2683              		.fpu fpv4-sp-d16
 2685              	SDHC_IRQHandler:
 2686              	.LFB94:
 938:../startup/startup_mk64f12.c **** 
 939:../startup/startup_mk64f12.c **** WEAK void SDHC_IRQHandler(void)
 940:../startup/startup_mk64f12.c **** {   SDHC_DriverIRQHandler();
 2687              		.loc 1 940 1
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 0
 2690              		@ frame_needed = 0, uses_anonymous_args = 0
 2691 0000 08B5     		push	{r3, lr}
 2692              		.cfi_def_cfa_offset 8
 2693              		.cfi_offset 3, -8
 2694              		.cfi_offset 14, -4
 2695              		.loc 1 940 5
 2696 0002 FFF7FEFF 		bl	SDHC_DriverIRQHandler
 941:../startup/startup_mk64f12.c **** }
 2697              		.loc 1 941 1
 2698 0006 08BD     		pop	{r3, pc}
 2699              		.cfi_endproc
 2700              	.LFE94:
 2702              		.section	.text.ENET_1588_Timer_IRQHandler,"ax",%progbits
 2703              		.align	1
 2704              		.weak	ENET_1588_Timer_IRQHandler
 2705              		.syntax unified
 2706              		.thumb
 2707              		.thumb_func
 2708              		.fpu fpv4-sp-d16
 2710              	ENET_1588_Timer_IRQHandler:
 2711              	.LFB95:
 942:../startup/startup_mk64f12.c **** 
 943:../startup/startup_mk64f12.c **** WEAK void ENET_1588_Timer_IRQHandler(void)
 944:../startup/startup_mk64f12.c **** {   ENET_1588_Timer_DriverIRQHandler();
 2712              		.loc 1 944 1
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 0, uses_anonymous_args = 0
 2716 0000 08B5     		push	{r3, lr}
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 3, -8
 2719              		.cfi_offset 14, -4
 2720              		.loc 1 944 5
 2721 0002 FFF7FEFF 		bl	ENET_1588_Timer_DriverIRQHandler
 945:../startup/startup_mk64f12.c **** }
 2722              		.loc 1 945 1
 2723 0006 08BD     		pop	{r3, pc}
 2724              		.cfi_endproc
 2725              	.LFE95:
 2727              		.section	.text.ENET_Transmit_IRQHandler,"ax",%progbits
 2728              		.align	1
 2729              		.weak	ENET_Transmit_IRQHandler
 2730              		.syntax unified
 2731              		.thumb
 2732              		.thumb_func
 2733              		.fpu fpv4-sp-d16
 2735              	ENET_Transmit_IRQHandler:
 2736              	.LFB96:
 946:../startup/startup_mk64f12.c **** 
 947:../startup/startup_mk64f12.c **** WEAK void ENET_Transmit_IRQHandler(void)
 948:../startup/startup_mk64f12.c **** {   ENET_Transmit_DriverIRQHandler();
 2737              		.loc 1 948 1
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741 0000 08B5     		push	{r3, lr}
 2742              		.cfi_def_cfa_offset 8
 2743              		.cfi_offset 3, -8
 2744              		.cfi_offset 14, -4
 2745              		.loc 1 948 5
 2746 0002 FFF7FEFF 		bl	ENET_Transmit_DriverIRQHandler
 949:../startup/startup_mk64f12.c **** }
 2747              		.loc 1 949 1
 2748 0006 08BD     		pop	{r3, pc}
 2749              		.cfi_endproc
 2750              	.LFE96:
 2752              		.section	.text.ENET_Receive_IRQHandler,"ax",%progbits
 2753              		.align	1
 2754              		.weak	ENET_Receive_IRQHandler
 2755              		.syntax unified
 2756              		.thumb
 2757              		.thumb_func
 2758              		.fpu fpv4-sp-d16
 2760              	ENET_Receive_IRQHandler:
 2761              	.LFB97:
 950:../startup/startup_mk64f12.c **** 
 951:../startup/startup_mk64f12.c **** WEAK void ENET_Receive_IRQHandler(void)
 952:../startup/startup_mk64f12.c **** {   ENET_Receive_DriverIRQHandler();
 2762              		.loc 1 952 1
 2763              		.cfi_startproc
 2764              		@ args = 0, pretend = 0, frame = 0
 2765              		@ frame_needed = 0, uses_anonymous_args = 0
 2766 0000 08B5     		push	{r3, lr}
 2767              		.cfi_def_cfa_offset 8
 2768              		.cfi_offset 3, -8
 2769              		.cfi_offset 14, -4
 2770              		.loc 1 952 5
 2771 0002 FFF7FEFF 		bl	ENET_Receive_DriverIRQHandler
 953:../startup/startup_mk64f12.c **** }
 2772              		.loc 1 953 1
 2773 0006 08BD     		pop	{r3, pc}
 2774              		.cfi_endproc
 2775              	.LFE97:
 2777              		.section	.text.ENET_Error_IRQHandler,"ax",%progbits
 2778              		.align	1
 2779              		.weak	ENET_Error_IRQHandler
 2780              		.syntax unified
 2781              		.thumb
 2782              		.thumb_func
 2783              		.fpu fpv4-sp-d16
 2785              	ENET_Error_IRQHandler:
 2786              	.LFB98:
 954:../startup/startup_mk64f12.c **** 
 955:../startup/startup_mk64f12.c **** WEAK void ENET_Error_IRQHandler(void)
 956:../startup/startup_mk64f12.c **** {   ENET_Error_DriverIRQHandler();
 2787              		.loc 1 956 1
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 0, uses_anonymous_args = 0
 2791 0000 08B5     		push	{r3, lr}
 2792              		.cfi_def_cfa_offset 8
 2793              		.cfi_offset 3, -8
 2794              		.cfi_offset 14, -4
 2795              		.loc 1 956 5
 2796 0002 FFF7FEFF 		bl	ENET_Error_DriverIRQHandler
 957:../startup/startup_mk64f12.c **** }
 2797              		.loc 1 957 1
 2798 0006 08BD     		pop	{r3, pc}
 2799              		.cfi_endproc
 2800              	.LFE98:
 2802              		.text
 2803              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 startup_mk64f12.c
     /tmp/ccNcrWRK.s:22     .FlashConfig:0000000000000000 Flash_Config
     /tmp/ccNcrWRK.s:19     .FlashConfig:0000000000000000 $d
     /tmp/ccNcrWRK.s:32     .isr_vector:0000000000000000 g_pfnVectors
     /tmp/ccNcrWRK.s:29     .isr_vector:0000000000000000 $d
     /tmp/ccNcrWRK.s:224    .after_vectors.reset:0000000000000000 ResetISR
     /tmp/ccNcrWRK.s:305    .after_vectors:0000000000000000 NMI_Handler
     /tmp/ccNcrWRK.s:324    .after_vectors:0000000000000002 HardFault_Handler
     /tmp/ccNcrWRK.s:343    .after_vectors:0000000000000004 MemManage_Handler
     /tmp/ccNcrWRK.s:362    .after_vectors:0000000000000006 BusFault_Handler
     /tmp/ccNcrWRK.s:381    .after_vectors:0000000000000008 UsageFault_Handler
     /tmp/ccNcrWRK.s:400    .after_vectors:000000000000000a SVC_Handler
     /tmp/ccNcrWRK.s:419    .after_vectors:000000000000000c DebugMon_Handler
     /tmp/ccNcrWRK.s:438    .after_vectors:000000000000000e PendSV_Handler
     /tmp/ccNcrWRK.s:457    .after_vectors:0000000000000010 SysTick_Handler
     /tmp/ccNcrWRK.s:659    .text.DMA0_IRQHandler:0000000000000000 DMA0_IRQHandler
     /tmp/ccNcrWRK.s:685    .text.DMA1_IRQHandler:0000000000000000 DMA1_IRQHandler
     /tmp/ccNcrWRK.s:710    .text.DMA2_IRQHandler:0000000000000000 DMA2_IRQHandler
     /tmp/ccNcrWRK.s:735    .text.DMA3_IRQHandler:0000000000000000 DMA3_IRQHandler
     /tmp/ccNcrWRK.s:760    .text.DMA4_IRQHandler:0000000000000000 DMA4_IRQHandler
     /tmp/ccNcrWRK.s:785    .text.DMA5_IRQHandler:0000000000000000 DMA5_IRQHandler
     /tmp/ccNcrWRK.s:810    .text.DMA6_IRQHandler:0000000000000000 DMA6_IRQHandler
     /tmp/ccNcrWRK.s:835    .text.DMA7_IRQHandler:0000000000000000 DMA7_IRQHandler
     /tmp/ccNcrWRK.s:860    .text.DMA8_IRQHandler:0000000000000000 DMA8_IRQHandler
     /tmp/ccNcrWRK.s:885    .text.DMA9_IRQHandler:0000000000000000 DMA9_IRQHandler
     /tmp/ccNcrWRK.s:910    .text.DMA10_IRQHandler:0000000000000000 DMA10_IRQHandler
     /tmp/ccNcrWRK.s:935    .text.DMA11_IRQHandler:0000000000000000 DMA11_IRQHandler
     /tmp/ccNcrWRK.s:960    .text.DMA12_IRQHandler:0000000000000000 DMA12_IRQHandler
     /tmp/ccNcrWRK.s:985    .text.DMA13_IRQHandler:0000000000000000 DMA13_IRQHandler
     /tmp/ccNcrWRK.s:1010   .text.DMA14_IRQHandler:0000000000000000 DMA14_IRQHandler
     /tmp/ccNcrWRK.s:1035   .text.DMA15_IRQHandler:0000000000000000 DMA15_IRQHandler
     /tmp/ccNcrWRK.s:1060   .text.DMA_Error_IRQHandler:0000000000000000 DMA_Error_IRQHandler
     /tmp/ccNcrWRK.s:1085   .text.MCM_IRQHandler:0000000000000000 MCM_IRQHandler
     /tmp/ccNcrWRK.s:1110   .text.FTFE_IRQHandler:0000000000000000 FTFE_IRQHandler
     /tmp/ccNcrWRK.s:1135   .text.Read_Collision_IRQHandler:0000000000000000 Read_Collision_IRQHandler
     /tmp/ccNcrWRK.s:1160   .text.LVD_LVW_IRQHandler:0000000000000000 LVD_LVW_IRQHandler
     /tmp/ccNcrWRK.s:1185   .text.LLWU_IRQHandler:0000000000000000 LLWU_IRQHandler
     /tmp/ccNcrWRK.s:1210   .text.WDOG_EWM_IRQHandler:0000000000000000 WDOG_EWM_IRQHandler
     /tmp/ccNcrWRK.s:1235   .text.RNG_IRQHandler:0000000000000000 RNG_IRQHandler
     /tmp/ccNcrWRK.s:1260   .text.I2C0_IRQHandler:0000000000000000 I2C0_IRQHandler
     /tmp/ccNcrWRK.s:1285   .text.I2C1_IRQHandler:0000000000000000 I2C1_IRQHandler
     /tmp/ccNcrWRK.s:1310   .text.SPI0_IRQHandler:0000000000000000 SPI0_IRQHandler
     /tmp/ccNcrWRK.s:1335   .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/ccNcrWRK.s:1360   .text.I2S0_Tx_IRQHandler:0000000000000000 I2S0_Tx_IRQHandler
     /tmp/ccNcrWRK.s:1385   .text.I2S0_Rx_IRQHandler:0000000000000000 I2S0_Rx_IRQHandler
     /tmp/ccNcrWRK.s:1410   .text.UART0_LON_IRQHandler:0000000000000000 UART0_LON_IRQHandler
     /tmp/ccNcrWRK.s:1435   .text.UART0_RX_TX_IRQHandler:0000000000000000 UART0_RX_TX_IRQHandler
     /tmp/ccNcrWRK.s:1460   .text.UART0_ERR_IRQHandler:0000000000000000 UART0_ERR_IRQHandler
     /tmp/ccNcrWRK.s:1485   .text.UART1_RX_TX_IRQHandler:0000000000000000 UART1_RX_TX_IRQHandler
     /tmp/ccNcrWRK.s:1510   .text.UART1_ERR_IRQHandler:0000000000000000 UART1_ERR_IRQHandler
     /tmp/ccNcrWRK.s:1535   .text.UART2_RX_TX_IRQHandler:0000000000000000 UART2_RX_TX_IRQHandler
     /tmp/ccNcrWRK.s:1560   .text.UART2_ERR_IRQHandler:0000000000000000 UART2_ERR_IRQHandler
     /tmp/ccNcrWRK.s:1585   .text.UART3_RX_TX_IRQHandler:0000000000000000 UART3_RX_TX_IRQHandler
     /tmp/ccNcrWRK.s:1610   .text.UART3_ERR_IRQHandler:0000000000000000 UART3_ERR_IRQHandler
     /tmp/ccNcrWRK.s:1635   .text.ADC0_IRQHandler:0000000000000000 ADC0_IRQHandler
     /tmp/ccNcrWRK.s:1660   .text.CMP0_IRQHandler:0000000000000000 CMP0_IRQHandler
     /tmp/ccNcrWRK.s:1685   .text.CMP1_IRQHandler:0000000000000000 CMP1_IRQHandler
     /tmp/ccNcrWRK.s:1710   .text.FTM0_IRQHandler:0000000000000000 FTM0_IRQHandler
     /tmp/ccNcrWRK.s:1735   .text.FTM1_IRQHandler:0000000000000000 FTM1_IRQHandler
     /tmp/ccNcrWRK.s:1760   .text.FTM2_IRQHandler:0000000000000000 FTM2_IRQHandler
     /tmp/ccNcrWRK.s:1785   .text.CMT_IRQHandler:0000000000000000 CMT_IRQHandler
     /tmp/ccNcrWRK.s:1810   .text.RTC_IRQHandler:0000000000000000 RTC_IRQHandler
     /tmp/ccNcrWRK.s:1835   .text.RTC_Seconds_IRQHandler:0000000000000000 RTC_Seconds_IRQHandler
     /tmp/ccNcrWRK.s:1860   .text.PIT0_IRQHandler:0000000000000000 PIT0_IRQHandler
     /tmp/ccNcrWRK.s:1885   .text.PIT1_IRQHandler:0000000000000000 PIT1_IRQHandler
     /tmp/ccNcrWRK.s:1910   .text.PIT2_IRQHandler:0000000000000000 PIT2_IRQHandler
     /tmp/ccNcrWRK.s:1935   .text.PIT3_IRQHandler:0000000000000000 PIT3_IRQHandler
     /tmp/ccNcrWRK.s:1960   .text.PDB0_IRQHandler:0000000000000000 PDB0_IRQHandler
     /tmp/ccNcrWRK.s:1985   .text.USB0_IRQHandler:0000000000000000 USB0_IRQHandler
     /tmp/ccNcrWRK.s:2010   .text.USBDCD_IRQHandler:0000000000000000 USBDCD_IRQHandler
     /tmp/ccNcrWRK.s:2035   .text.Reserved71_IRQHandler:0000000000000000 Reserved71_IRQHandler
     /tmp/ccNcrWRK.s:2060   .text.DAC0_IRQHandler:0000000000000000 DAC0_IRQHandler
     /tmp/ccNcrWRK.s:2085   .text.MCG_IRQHandler:0000000000000000 MCG_IRQHandler
     /tmp/ccNcrWRK.s:2110   .text.LPTMR0_IRQHandler:0000000000000000 LPTMR0_IRQHandler
     /tmp/ccNcrWRK.s:2135   .text.PORTA_IRQHandler:0000000000000000 PORTA_IRQHandler
     /tmp/ccNcrWRK.s:2160   .text.PORTB_IRQHandler:0000000000000000 PORTB_IRQHandler
     /tmp/ccNcrWRK.s:2185   .text.PORTC_IRQHandler:0000000000000000 PORTC_IRQHandler
     /tmp/ccNcrWRK.s:2210   .text.PORTD_IRQHandler:0000000000000000 PORTD_IRQHandler
     /tmp/ccNcrWRK.s:2235   .text.PORTE_IRQHandler:0000000000000000 PORTE_IRQHandler
     /tmp/ccNcrWRK.s:2260   .text.SWI_IRQHandler:0000000000000000 SWI_IRQHandler
     /tmp/ccNcrWRK.s:2285   .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
     /tmp/ccNcrWRK.s:2310   .text.UART4_RX_TX_IRQHandler:0000000000000000 UART4_RX_TX_IRQHandler
     /tmp/ccNcrWRK.s:2335   .text.UART4_ERR_IRQHandler:0000000000000000 UART4_ERR_IRQHandler
     /tmp/ccNcrWRK.s:2360   .text.UART5_RX_TX_IRQHandler:0000000000000000 UART5_RX_TX_IRQHandler
     /tmp/ccNcrWRK.s:2385   .text.UART5_ERR_IRQHandler:0000000000000000 UART5_ERR_IRQHandler
     /tmp/ccNcrWRK.s:2410   .text.CMP2_IRQHandler:0000000000000000 CMP2_IRQHandler
     /tmp/ccNcrWRK.s:2435   .text.FTM3_IRQHandler:0000000000000000 FTM3_IRQHandler
     /tmp/ccNcrWRK.s:2460   .text.DAC1_IRQHandler:0000000000000000 DAC1_IRQHandler
     /tmp/ccNcrWRK.s:2485   .text.ADC1_IRQHandler:0000000000000000 ADC1_IRQHandler
     /tmp/ccNcrWRK.s:2510   .text.I2C2_IRQHandler:0000000000000000 I2C2_IRQHandler
     /tmp/ccNcrWRK.s:2535   .text.CAN0_ORed_Message_buffer_IRQHandler:0000000000000000 CAN0_ORed_Message_buffer_IRQHandler
     /tmp/ccNcrWRK.s:2560   .text.CAN0_Bus_Off_IRQHandler:0000000000000000 CAN0_Bus_Off_IRQHandler
     /tmp/ccNcrWRK.s:2585   .text.CAN0_Error_IRQHandler:0000000000000000 CAN0_Error_IRQHandler
     /tmp/ccNcrWRK.s:2610   .text.CAN0_Tx_Warning_IRQHandler:0000000000000000 CAN0_Tx_Warning_IRQHandler
     /tmp/ccNcrWRK.s:2635   .text.CAN0_Rx_Warning_IRQHandler:0000000000000000 CAN0_Rx_Warning_IRQHandler
     /tmp/ccNcrWRK.s:2660   .text.CAN0_Wake_Up_IRQHandler:0000000000000000 CAN0_Wake_Up_IRQHandler
     /tmp/ccNcrWRK.s:2685   .text.SDHC_IRQHandler:0000000000000000 SDHC_IRQHandler
     /tmp/ccNcrWRK.s:2710   .text.ENET_1588_Timer_IRQHandler:0000000000000000 ENET_1588_Timer_IRQHandler
     /tmp/ccNcrWRK.s:2735   .text.ENET_Transmit_IRQHandler:0000000000000000 ENET_Transmit_IRQHandler
     /tmp/ccNcrWRK.s:2760   .text.ENET_Receive_IRQHandler:0000000000000000 ENET_Receive_IRQHandler
     /tmp/ccNcrWRK.s:2785   .text.ENET_Error_IRQHandler:0000000000000000 ENET_Error_IRQHandler
     /tmp/ccNcrWRK.s:32     .isr_vector:0000000000000000 __Vectors
     /tmp/ccNcrWRK.s:138    .after_vectors.init_data:0000000000000000 $t
     /tmp/ccNcrWRK.s:146    .after_vectors.init_data:0000000000000000 data_init
     /tmp/ccNcrWRK.s:184    .after_vectors.init_bss:0000000000000000 $t
     /tmp/ccNcrWRK.s:191    .after_vectors.init_bss:0000000000000000 bss_init
     /tmp/ccNcrWRK.s:217    .after_vectors.reset:0000000000000000 $t
     /tmp/ccNcrWRK.s:291    .after_vectors.reset:0000000000000040 $d
     /tmp/ccNcrWRK.s:298    .after_vectors:0000000000000000 $t
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 IntDefaultHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 ENET_Error_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 ENET_Receive_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 ENET_Transmit_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 ENET_1588_Timer_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 SDHC_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 CAN0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 I2C2_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 ADC1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DAC1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 FTM3_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 CMP2_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART5_ERR_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART5_RX_TX_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART4_ERR_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART4_RX_TX_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 SPI2_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 SWI_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PORTE_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PORTD_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PORTC_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PORTB_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PORTA_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 LPTMR0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 MCG_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DAC0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 Reserved71_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 USBDCD_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 USB0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PDB0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PIT3_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PIT2_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PIT1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 PIT0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 RTC_Seconds_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 RTC_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 CMT_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 FTM2_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 FTM1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 FTM0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 CMP1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 CMP0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 ADC0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART3_ERR_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART3_RX_TX_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART2_ERR_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART2_RX_TX_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART1_ERR_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART1_RX_TX_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART0_ERR_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART0_RX_TX_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 UART0_LON_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 I2S0_Rx_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 I2S0_Tx_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 SPI1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 SPI0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 I2C1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 I2C0_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 RNG_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 WDOG_EWM_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 LLWU_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 LVD_LVW_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 Read_Collision_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 FTFE_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 MCM_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA_Error_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA15_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA14_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA13_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA12_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA11_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA10_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA9_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA8_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA7_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA6_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA5_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA4_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA3_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA2_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA1_DriverIRQHandler
     /tmp/ccNcrWRK.s:476    .after_vectors:0000000000000012 DMA0_DriverIRQHandler
     /tmp/ccNcrWRK.s:652    .text.DMA0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:678    .text.DMA1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:703    .text.DMA2_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:728    .text.DMA3_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:753    .text.DMA4_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:778    .text.DMA5_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:803    .text.DMA6_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:828    .text.DMA7_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:853    .text.DMA8_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:878    .text.DMA9_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:903    .text.DMA10_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:928    .text.DMA11_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:953    .text.DMA12_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:978    .text.DMA13_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1003   .text.DMA14_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1028   .text.DMA15_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1053   .text.DMA_Error_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1078   .text.MCM_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1103   .text.FTFE_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1128   .text.Read_Collision_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1153   .text.LVD_LVW_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1178   .text.LLWU_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1203   .text.WDOG_EWM_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1228   .text.RNG_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1253   .text.I2C0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1278   .text.I2C1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1303   .text.SPI0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1328   .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1353   .text.I2S0_Tx_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1378   .text.I2S0_Rx_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1403   .text.UART0_LON_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1428   .text.UART0_RX_TX_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1453   .text.UART0_ERR_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1478   .text.UART1_RX_TX_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1503   .text.UART1_ERR_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1528   .text.UART2_RX_TX_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1553   .text.UART2_ERR_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1578   .text.UART3_RX_TX_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1603   .text.UART3_ERR_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1628   .text.ADC0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1653   .text.CMP0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1678   .text.CMP1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1703   .text.FTM0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1728   .text.FTM1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1753   .text.FTM2_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1778   .text.CMT_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1803   .text.RTC_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1828   .text.RTC_Seconds_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1853   .text.PIT0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1878   .text.PIT1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1903   .text.PIT2_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1928   .text.PIT3_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1953   .text.PDB0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:1978   .text.USB0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2003   .text.USBDCD_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2028   .text.Reserved71_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2053   .text.DAC0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2078   .text.MCG_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2103   .text.LPTMR0_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2128   .text.PORTA_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2153   .text.PORTB_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2178   .text.PORTC_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2203   .text.PORTD_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2228   .text.PORTE_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2253   .text.SWI_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2278   .text.SPI2_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2303   .text.UART4_RX_TX_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2328   .text.UART4_ERR_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2353   .text.UART5_RX_TX_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2378   .text.UART5_ERR_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2403   .text.CMP2_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2428   .text.FTM3_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2453   .text.DAC1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2478   .text.ADC1_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2503   .text.I2C2_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2528   .text.CAN0_ORed_Message_buffer_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2553   .text.CAN0_Bus_Off_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2578   .text.CAN0_Error_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2603   .text.CAN0_Tx_Warning_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2628   .text.CAN0_Rx_Warning_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2653   .text.CAN0_Wake_Up_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2678   .text.SDHC_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2703   .text.ENET_1588_Timer_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2728   .text.ENET_Transmit_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2753   .text.ENET_Receive_IRQHandler:0000000000000000 $t
     /tmp/ccNcrWRK.s:2778   .text.ENET_Error_IRQHandler:0000000000000000 $t
                           .group:0000000000000000 wm4.0.e9a4c502d1288a7f4530c6554342258b

UNDEFINED SYMBOLS
_vStackTop
SystemInit
__main
__data_section_table
__data_section_table_end
__bss_section_table_end
